/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSScanner.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\Scanner.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       33,    22, // methods
       29,    187, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       18, 36, 
       56, 68, 
       81, 93, 
       111, 123, 
       140, 152, 
       169, 181, 

 // signals: signature, parameters, type, tag, flags
       198, 213, 220, 221, 5,
       222, 255, 281, 282, 5,
       283, 312, 368, 369, 5,
       370, 393, 398, 399, 5,
       400, 439, 461, 462, 5,
       463, 488, 493, 494, 5,
       495, 521, 536, 537, 5,

 // slots: signature, parameters, type, tag, flags
       538, 555, 561, 565, 9,
       566, 583, 591, 595, 9,
       596, 609, 610, 614, 9,
       615, 638, 639, 643, 9,
       644, 652, 653, 657, 9,
       658, 695, 720, 724, 9,
       725, 753, 775, 779, 9,
       780, 794, 805, 809, 9,
       810, 826, 827, 831, 9,
       832, 857, 874, 878, 9,
       879, 908, 926, 930, 9,
       931, 943, 950, 951, 9,
       952, 982, 1008, 1009, 9,
       1010, 1036, 1092, 1093, 9,
       1094, 1121, 1130, 1131, 9,
       1132, 1146, 1147, 1151, 9,
       1152, 1172, 1177, 1178, 9,
       1179, 1200, 1212, 1213, 9,
       1214, 1239, 1256, 1257, 9,
       1258, 1284, 1301, 1302, 9,
       1303, 1323, 1334, 1335, 9,
       1336, 1359, 1373, 1374, 9,
       1375, 1397, 1410, 1411, 9,
       1412, 1432, 1444, 1445, 9,
       1446, 1470, 1487, 1491, 9,
       1492, 1518, 1535, 1539, 9,

 // properties: name, type, flags
       1540, 1552, 0x01015003, 		 // bool AutoDisable
       1557, 1574, 0x02015003, 		 // int BinaryConversion
       1578, 1604, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1609, 1627, 0x02005001, 		 // int CapPowerReporting
       1631, 1654, 0x01005001, 		 // bool CapStatisticsReporting
       1659, 1677, 0x01005001, 		 // bool CapUpdateFirmware
       1682, 1702, 0x01005001, 		 // bool CapUpdateStatistics
       1707, 1723, 0x0a005001, 		 // QString CheckHealthText
       1731, 1739, 0x01005001, 		 // bool Claimed
       1744, 1769, 0x0a005001, 		 // QString ControlObjectDescription
       1777, 1798, 0x02005001, 		 // int ControlObjectVersion
       1802, 1812, 0x02005001, 		 // int DataCount
       1816, 1833, 0x01015003, 		 // bool DataEventEnabled
       1838, 1849, 0x01015003, 		 // bool DecodeData
       1854, 1872, 0x0a005001, 		 // QString DeviceDescription
       1880, 1894, 0x01015003, 		 // bool DeviceEnabled
       1899, 1910, 0x0a005001, 		 // QString DeviceName
       1918, 1931, 0x01015003, 		 // bool FreezeEvents
       1936, 1947, 0x02005001, 		 // int OpenResult
       1951, 1963, 0x02015003, 		 // int PowerNotify
       1967, 1978, 0x02005001, 		 // int PowerState
       1982, 1993, 0x02005001, 		 // int ResultCode
       1997, 2016, 0x02005001, 		 // int ResultCodeExtended
       2020, 2029, 0x0a005001, 		 // QString ScanData
       2037, 2051, 0x0a005001, 		 // QString ScanDataLabel
       2059, 2072, 0x02005001, 		 // int ScanDataType
       2076, 2101, 0x0a005001, 		 // QString ServiceObjectDescription
       2109, 2130, 0x02005001, 		 // int ServiceObjectVersion
       2134, 2140, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSScanner() {
    static const char stringdata0[] = {
    "OPOS::OPOSScanner\0"
    "Event Interface 5\0_IOPOSScannerEvents\0Interface 0\0IOPOSScanner\0Interface 1\0IOPOSScanner_1_10\0Interface 2\0IOPOSScanner_1_9\0Interface 3\0IOPOSScanner_1_8\0Interface 4\0IOPOSScanner_1_5\0"
    "DataEvent(int)\0Status\0"
    "\0\0DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0"
    "code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0"
    "\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0"
    "QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0"
    "bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0ScanDataLabel\0QString\0ScanDataType\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0"
    "State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSScanner(),
qt_meta_data_OPOS__OPOSScanner }
};

void *OPOSScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSScanner()))
        return static_cast<void*>(const_cast<OPOSScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       29,    10, // methods
       30,    155, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       19, 58, 80, 81, 5,
       82, 107, 112, 113, 5,
       114, 140, 155, 156, 5,

 // slots: signature, parameters, type, tag, flags
       157, 174, 180, 184, 9,
       185, 202, 210, 214, 9,
       215, 228, 229, 233, 9,
       234, 257, 258, 262, 9,
       263, 271, 272, 276, 9,
       277, 314, 339, 343, 9,
       344, 372, 394, 398, 9,
       399, 413, 424, 428, 9,
       429, 445, 446, 450, 9,
       451, 476, 493, 497, 9,
       498, 527, 545, 549, 9,
       550, 562, 569, 570, 9,
       571, 601, 627, 628, 9,
       629, 655, 711, 712, 9,
       713, 740, 749, 750, 9,
       751, 765, 766, 770, 9,
       771, 791, 796, 797, 9,
       798, 819, 831, 832, 9,
       833, 858, 875, 876, 9,
       877, 903, 920, 921, 9,
       922, 942, 953, 954, 9,
       955, 978, 992, 993, 9,
       994, 1016, 1029, 1030, 9,
       1031, 1051, 1063, 1064, 9,
       1065, 1089, 1106, 1110, 9,
       1111, 1137, 1154, 1158, 9,

 // properties: name, type, flags
       1159, 1171, 0x01015003, 		 // bool AutoDisable
       1176, 1193, 0x02015003, 		 // int BinaryConversion
       1197, 1223, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1228, 1246, 0x02005001, 		 // int CapPowerReporting
       1250, 1273, 0x01005001, 		 // bool CapStatisticsReporting
       1278, 1296, 0x01005001, 		 // bool CapUpdateFirmware
       1301, 1321, 0x01005001, 		 // bool CapUpdateStatistics
       1326, 1342, 0x0a005001, 		 // QString CheckHealthText
       1350, 1358, 0x01005001, 		 // bool Claimed
       1363, 1388, 0x0a005001, 		 // QString ControlObjectDescription
       1396, 1417, 0x02005001, 		 // int ControlObjectVersion
       1421, 1431, 0x02005001, 		 // int DataCount
       1435, 1452, 0x01015003, 		 // bool DataEventEnabled
       1457, 1468, 0x01015003, 		 // bool DecodeData
       1473, 1491, 0x0a005001, 		 // QString DeviceDescription
       1499, 1513, 0x01015003, 		 // bool DeviceEnabled
       1518, 1529, 0x0a005001, 		 // QString DeviceName
       1537, 1550, 0x01015003, 		 // bool FreezeEvents
       1555, 1566, 0x02005001, 		 // int OpenResult
       1570, 1582, 0x02015003, 		 // int PowerNotify
       1586, 1597, 0x02005001, 		 // int PowerState
       1601, 1612, 0x02005001, 		 // int ResultCode
       1616, 1635, 0x02005001, 		 // int ResultCodeExtended
       1639, 1648, 0x0a005001, 		 // QString ScanData
       1656, 1670, 0x0a005001, 		 // QString ScanDataLabel
       1678, 1691, 0x02005001, 		 // int ScanDataType
       1695, 1720, 0x0a005001, 		 // QString ServiceObjectDescription
       1728, 1749, 0x02005001, 		 // int ServiceObjectVersion
       1753, 1759, 0x02005001, 		 // int State
       1763, 1771, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSScanner() {
    static const char stringdata0[] = {
    "OPOS::IOPOSScanner\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0"
    "ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0"
    "QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0ScanDataLabel\0QString\0ScanDataType\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSScanner(),
qt_meta_data_OPOS__IOPOSScanner }
};

void *IOPOSScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSScanner()))
        return static_cast<void*>(const_cast<IOPOSScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSScanner_1_10[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       29,    10, // methods
       30,    155, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 179, 185, 189, 9,
       190, 207, 215, 219, 9,
       220, 233, 234, 238, 9,
       239, 262, 263, 267, 9,
       268, 276, 277, 281, 9,
       282, 319, 344, 348, 9,
       349, 377, 399, 403, 9,
       404, 418, 429, 433, 9,
       434, 450, 451, 455, 9,
       456, 481, 498, 502, 9,
       503, 532, 550, 554, 9,
       555, 567, 574, 575, 9,
       576, 606, 632, 633, 9,
       634, 660, 716, 717, 9,
       718, 745, 754, 755, 9,
       756, 770, 771, 775, 9,
       776, 796, 801, 802, 9,
       803, 824, 836, 837, 9,
       838, 863, 880, 881, 9,
       882, 908, 925, 926, 9,
       927, 947, 958, 959, 9,
       960, 983, 997, 998, 9,
       999, 1021, 1034, 1035, 9,
       1036, 1056, 1068, 1069, 9,
       1070, 1094, 1111, 1115, 9,
       1116, 1142, 1159, 1163, 9,

 // properties: name, type, flags
       1164, 1176, 0x01015003, 		 // bool AutoDisable
       1181, 1198, 0x02015003, 		 // int BinaryConversion
       1202, 1228, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1233, 1251, 0x02005001, 		 // int CapPowerReporting
       1255, 1278, 0x01005001, 		 // bool CapStatisticsReporting
       1283, 1301, 0x01005001, 		 // bool CapUpdateFirmware
       1306, 1326, 0x01005001, 		 // bool CapUpdateStatistics
       1331, 1347, 0x0a005001, 		 // QString CheckHealthText
       1355, 1363, 0x01005001, 		 // bool Claimed
       1368, 1393, 0x0a005001, 		 // QString ControlObjectDescription
       1401, 1422, 0x02005001, 		 // int ControlObjectVersion
       1426, 1436, 0x02005001, 		 // int DataCount
       1440, 1457, 0x01015003, 		 // bool DataEventEnabled
       1462, 1473, 0x01015003, 		 // bool DecodeData
       1478, 1496, 0x0a005001, 		 // QString DeviceDescription
       1504, 1518, 0x01015003, 		 // bool DeviceEnabled
       1523, 1534, 0x0a005001, 		 // QString DeviceName
       1542, 1555, 0x01015003, 		 // bool FreezeEvents
       1560, 1571, 0x02005001, 		 // int OpenResult
       1575, 1587, 0x02015003, 		 // int PowerNotify
       1591, 1602, 0x02005001, 		 // int PowerState
       1606, 1617, 0x02005001, 		 // int ResultCode
       1621, 1640, 0x02005001, 		 // int ResultCodeExtended
       1644, 1653, 0x0a005001, 		 // QString ScanData
       1661, 1675, 0x0a005001, 		 // QString ScanDataLabel
       1683, 1696, 0x02005001, 		 // int ScanDataType
       1700, 1725, 0x0a005001, 		 // QString ServiceObjectDescription
       1733, 1754, 0x02005001, 		 // int ServiceObjectVersion
       1758, 1764, 0x02005001, 		 // int State
       1768, 1776, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSScanner_1_10() {
    static const char stringdata0[] = {
    "OPOS::IOPOSScanner_1_10\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0"
    "ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0"
    "QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0ScanDataLabel\0QString\0ScanDataType\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSScanner_1_10::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSScanner_1_10(),
qt_meta_data_OPOS__IOPOSScanner_1_10 }
};

void *IOPOSScanner_1_10::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSScanner_1_10()))
        return static_cast<void*>(const_cast<IOPOSScanner_1_10*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSScanner_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       28,    10, // methods
       30,    150, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 232, 233, 237, 9,
       238, 246, 247, 251, 9,
       252, 289, 314, 318, 9,
       319, 347, 369, 373, 9,
       374, 388, 399, 403, 9,
       404, 420, 421, 425, 9,
       426, 451, 468, 472, 9,
       473, 502, 520, 524, 9,
       525, 537, 544, 545, 9,
       546, 576, 602, 603, 9,
       604, 630, 686, 687, 9,
       688, 715, 724, 725, 9,
       726, 740, 741, 745, 9,
       746, 766, 771, 772, 9,
       773, 794, 806, 807, 9,
       808, 833, 850, 851, 9,
       852, 878, 895, 896, 9,
       897, 917, 928, 929, 9,
       930, 953, 967, 968, 9,
       969, 991, 1004, 1005, 9,
       1006, 1026, 1038, 1039, 9,
       1040, 1064, 1081, 1085, 9,
       1086, 1112, 1129, 1133, 9,

 // properties: name, type, flags
       1134, 1146, 0x01015003, 		 // bool AutoDisable
       1151, 1168, 0x02015003, 		 // int BinaryConversion
       1172, 1198, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1203, 1221, 0x02005001, 		 // int CapPowerReporting
       1225, 1248, 0x01005001, 		 // bool CapStatisticsReporting
       1253, 1271, 0x01005001, 		 // bool CapUpdateFirmware
       1276, 1296, 0x01005001, 		 // bool CapUpdateStatistics
       1301, 1317, 0x0a005001, 		 // QString CheckHealthText
       1325, 1333, 0x01005001, 		 // bool Claimed
       1338, 1363, 0x0a005001, 		 // QString ControlObjectDescription
       1371, 1392, 0x02005001, 		 // int ControlObjectVersion
       1396, 1406, 0x02005001, 		 // int DataCount
       1410, 1427, 0x01015003, 		 // bool DataEventEnabled
       1432, 1443, 0x01015003, 		 // bool DecodeData
       1448, 1466, 0x0a005001, 		 // QString DeviceDescription
       1474, 1488, 0x01015003, 		 // bool DeviceEnabled
       1493, 1504, 0x0a005001, 		 // QString DeviceName
       1512, 1525, 0x01015003, 		 // bool FreezeEvents
       1530, 1541, 0x02005001, 		 // int OpenResult
       1545, 1557, 0x02015003, 		 // int PowerNotify
       1561, 1572, 0x02005001, 		 // int PowerState
       1576, 1587, 0x02005001, 		 // int ResultCode
       1591, 1610, 0x02005001, 		 // int ResultCodeExtended
       1614, 1623, 0x0a005001, 		 // QString ScanData
       1631, 1645, 0x0a005001, 		 // QString ScanDataLabel
       1653, 1666, 0x02005001, 		 // int ScanDataType
       1670, 1695, 0x0a005001, 		 // QString ServiceObjectDescription
       1703, 1724, 0x02005001, 		 // int ServiceObjectVersion
       1728, 1734, 0x02005001, 		 // int State
       1738, 1746, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSScanner_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSScanner_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0"
    "QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0"
    "bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0ScanDataLabel\0QString\0ScanDataType\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0"
    "State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSScanner_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSScanner_1_9(),
qt_meta_data_OPOS__IOPOSScanner_1_9 }
};

void *IOPOSScanner_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSScanner_1_9()))
        return static_cast<void*>(const_cast<IOPOSScanner_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSScanner_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       28,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 232, 233, 237, 9,
       238, 246, 247, 251, 9,
       252, 280, 302, 306, 9,
       307, 321, 332, 336, 9,
       337, 353, 354, 358, 9,
       359, 384, 401, 405, 9,
       406, 435, 453, 457, 9,
       458, 470, 477, 478, 9,
       479, 509, 535, 536, 9,
       537, 563, 619, 620, 9,
       621, 648, 657, 658, 9,
       659, 673, 674, 678, 9,
       679, 699, 704, 705, 9,
       706, 727, 739, 740, 9,
       741, 766, 783, 784, 9,
       785, 811, 828, 829, 9,
       830, 850, 861, 862, 9,
       863, 886, 900, 901, 9,
       902, 924, 937, 938, 9,
       939, 959, 971, 972, 9,
       973, 999, 1016, 1020, 9,

 // properties: name, type, flags
       1021, 1033, 0x01015003, 		 // bool AutoDisable
       1038, 1055, 0x02015003, 		 // int BinaryConversion
       1059, 1077, 0x02005001, 		 // int CapPowerReporting
       1081, 1104, 0x01005001, 		 // bool CapStatisticsReporting
       1109, 1129, 0x01005001, 		 // bool CapUpdateStatistics
       1134, 1150, 0x0a005001, 		 // QString CheckHealthText
       1158, 1166, 0x01005001, 		 // bool Claimed
       1171, 1196, 0x0a005001, 		 // QString ControlObjectDescription
       1204, 1225, 0x02005001, 		 // int ControlObjectVersion
       1229, 1239, 0x02005001, 		 // int DataCount
       1243, 1260, 0x01015003, 		 // bool DataEventEnabled
       1265, 1276, 0x01015003, 		 // bool DecodeData
       1281, 1299, 0x0a005001, 		 // QString DeviceDescription
       1307, 1321, 0x01015003, 		 // bool DeviceEnabled
       1326, 1337, 0x0a005001, 		 // QString DeviceName
       1345, 1358, 0x01015003, 		 // bool FreezeEvents
       1363, 1374, 0x02005001, 		 // int OpenResult
       1378, 1390, 0x02015003, 		 // int PowerNotify
       1394, 1405, 0x02005001, 		 // int PowerState
       1409, 1420, 0x02005001, 		 // int ResultCode
       1424, 1443, 0x02005001, 		 // int ResultCodeExtended
       1447, 1456, 0x0a005001, 		 // QString ScanData
       1464, 1478, 0x0a005001, 		 // QString ScanDataLabel
       1486, 1499, 0x02005001, 		 // int ScanDataType
       1503, 1528, 0x0a005001, 		 // QString ServiceObjectDescription
       1536, 1557, 0x02005001, 		 // int ServiceObjectVersion
       1561, 1567, 0x02005001, 		 // int State
       1571, 1579, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSScanner_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSScanner_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0"
    "pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0"
    "DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0"
    "int\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0"
    "bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0"
    "ScanDataLabel\0QString\0ScanDataType\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSScanner_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSScanner_1_8(),
qt_meta_data_OPOS__IOPOSScanner_1_8 }
};

void *IOPOSScanner_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSScanner_1_8()))
        return static_cast<void*>(const_cast<IOPOSScanner_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSScanner_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       23,    10, // methods
       26,    125, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 232, 233, 237, 9,
       238, 246, 247, 251, 9,
       252, 280, 302, 306, 9,
       307, 321, 332, 336, 9,
       337, 353, 354, 358, 9,
       359, 371, 378, 379, 9,
       380, 410, 436, 437, 9,
       438, 464, 520, 521, 9,
       522, 549, 558, 559, 9,
       560, 574, 575, 579, 9,
       580, 600, 605, 606, 9,
       607, 628, 640, 641, 9,
       642, 667, 684, 685, 9,
       686, 712, 729, 730, 9,
       731, 751, 762, 763, 9,
       764, 787, 801, 802, 9,
       803, 825, 838, 839, 9,
       840, 860, 872, 873, 9,

 // properties: name, type, flags
       874, 886, 0x01015003, 		 // bool AutoDisable
       891, 908, 0x02015003, 		 // int BinaryConversion
       912, 930, 0x02005001, 		 // int CapPowerReporting
       934, 950, 0x0a005001, 		 // QString CheckHealthText
       958, 966, 0x01005001, 		 // bool Claimed
       971, 996, 0x0a005001, 		 // QString ControlObjectDescription
       1004, 1025, 0x02005001, 		 // int ControlObjectVersion
       1029, 1039, 0x02005001, 		 // int DataCount
       1043, 1060, 0x01015003, 		 // bool DataEventEnabled
       1065, 1076, 0x01015003, 		 // bool DecodeData
       1081, 1099, 0x0a005001, 		 // QString DeviceDescription
       1107, 1121, 0x01015003, 		 // bool DeviceEnabled
       1126, 1137, 0x0a005001, 		 // QString DeviceName
       1145, 1158, 0x01015003, 		 // bool FreezeEvents
       1163, 1174, 0x02005001, 		 // int OpenResult
       1178, 1190, 0x02015003, 		 // int PowerNotify
       1194, 1205, 0x02005001, 		 // int PowerState
       1209, 1220, 0x02005001, 		 // int ResultCode
       1224, 1243, 0x02005001, 		 // int ResultCodeExtended
       1247, 1256, 0x0a005001, 		 // QString ScanData
       1264, 1278, 0x0a005001, 		 // QString ScanDataLabel
       1286, 1299, 0x02005001, 		 // int ScanDataType
       1303, 1328, 0x0a005001, 		 // QString ServiceObjectDescription
       1336, 1357, 0x02005001, 		 // int ServiceObjectVersion
       1361, 1367, 0x02005001, 		 // int State
       1371, 1379, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSScanner_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSScanner_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0"
    "\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0"
    "PowerNotify\0\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapPowerReporting\0int\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0"
    "DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ScanData\0QString\0ScanDataLabel\0"
    "QString\0ScanDataType\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSScanner_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSScanner_1_5(),
qt_meta_data_OPOS__IOPOSScanner_1_5 }
};

void *IOPOSScanner_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSScanner_1_5()))
        return static_cast<void*>(const_cast<IOPOSScanner_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

