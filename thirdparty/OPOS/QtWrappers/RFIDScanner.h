/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSRFIDScanner.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_RFIDSCANNER_H
#define QAX_DUMPCPP_RFIDSCANNER_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSRFIDScannerEvents

class OPOS_EXPORT IOPOSRFIDScanner : public QAxObject
{
public:
    IOPOSRFIDScanner(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapContinuousRead

    property CapContinuousRead

    */
    inline bool CapContinuousRead() const; //Returns the value of CapContinuousRead

    /*
    Property CapDisableTag

    property CapDisableTag

    */
    inline bool CapDisableTag() const; //Returns the value of CapDisableTag

    /*
    Property CapLockTag

    property CapLockTag

    */
    inline bool CapLockTag() const; //Returns the value of CapLockTag

    /*
    Property CapMultipleProtocols

    property CapMultipleProtocols

    */
    inline int CapMultipleProtocols() const; //Returns the value of CapMultipleProtocols

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadTimer

    property CapReadTimer

    */
    inline bool CapReadTimer() const; //Returns the value of CapReadTimer

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWriteTag

    property CapWriteTag

    */
    inline int CapWriteTag() const; //Returns the value of CapWriteTag

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ContinuousReadMode

    property ContinuousReadMode

    */
    inline bool ContinuousReadMode() const; //Returns the value of ContinuousReadMode

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentTagID

    property CurrentTagID

    */
    inline QString CurrentTagID() const; //Returns the value of CurrentTagID

    /*
    Property CurrentTagProtocol

    property CurrentTagProtocol

    */
    inline int CurrentTagProtocol() const; //Returns the value of CurrentTagProtocol

    /*
    Property CurrentTagUserData

    property CurrentTagUserData

    */
    inline QString CurrentTagUserData() const; //Returns the value of CurrentTagUserData

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ProtocolMask

    property ProtocolMask

    */
    inline int ProtocolMask() const; //Returns the value of ProtocolMask
    inline void SetProtocolMask(int value); //Sets the value of the ProtocolMask property

    /*
    Property ReadTimerInterval

    property ReadTimerInterval

    */
    inline int ReadTimerInterval() const; //Returns the value of ReadTimerInterval
    inline void SetReadTimerInterval(int value); //Sets the value of the ReadTimerInterval property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TagCount

    property TagCount

    */
    inline int TagCount() const; //Returns the value of TagCount

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisableTag

    method DisableTag

    */
    inline int DisableTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method FirstTag

    method FirstTag

    */
    inline int FirstTag();

    /*
    Method LockTag

    method LockTag

    */
    inline int LockTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method NextTag

    method NextTag

    */
    inline int NextTag();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PreviousTag

    method PreviousTag

    */
    inline int PreviousTag();

    /*
    Method ReadTags

    method ReadTags

    */
    inline int ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartReadTags

    method StartReadTags

    */
    inline int StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password);

    /*
    Method StopReadTags

    method StopReadTags

    */
    inline int StopReadTags(const QString& Password);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WriteTagData

    method WriteTagData

    */
    inline int WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password);

    /*
    Method WriteTagID

    method WriteTagID

    */
    inline int WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSRFIDScanner_1_12 : public QAxObject
{
public:
    IOPOSRFIDScanner_1_12(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapContinuousRead

    property CapContinuousRead

    */
    inline bool CapContinuousRead() const; //Returns the value of CapContinuousRead

    /*
    Property CapDisableTag

    property CapDisableTag

    */
    inline bool CapDisableTag() const; //Returns the value of CapDisableTag

    /*
    Property CapLockTag

    property CapLockTag

    */
    inline bool CapLockTag() const; //Returns the value of CapLockTag

    /*
    Property CapMultipleProtocols

    property CapMultipleProtocols

    */
    inline int CapMultipleProtocols() const; //Returns the value of CapMultipleProtocols

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadTimer

    property CapReadTimer

    */
    inline bool CapReadTimer() const; //Returns the value of CapReadTimer

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWriteTag

    property CapWriteTag

    */
    inline int CapWriteTag() const; //Returns the value of CapWriteTag

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ContinuousReadMode

    property ContinuousReadMode

    */
    inline bool ContinuousReadMode() const; //Returns the value of ContinuousReadMode

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentTagID

    property CurrentTagID

    */
    inline QString CurrentTagID() const; //Returns the value of CurrentTagID

    /*
    Property CurrentTagProtocol

    property CurrentTagProtocol

    */
    inline int CurrentTagProtocol() const; //Returns the value of CurrentTagProtocol

    /*
    Property CurrentTagUserData

    property CurrentTagUserData

    */
    inline QString CurrentTagUserData() const; //Returns the value of CurrentTagUserData

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ProtocolMask

    property ProtocolMask

    */
    inline int ProtocolMask() const; //Returns the value of ProtocolMask
    inline void SetProtocolMask(int value); //Sets the value of the ProtocolMask property

    /*
    Property ReadTimerInterval

    property ReadTimerInterval

    */
    inline int ReadTimerInterval() const; //Returns the value of ReadTimerInterval
    inline void SetReadTimerInterval(int value); //Sets the value of the ReadTimerInterval property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TagCount

    property TagCount

    */
    inline int TagCount() const; //Returns the value of TagCount

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisableTag

    method DisableTag

    */
    inline int DisableTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method FirstTag

    method FirstTag

    */
    inline int FirstTag();

    /*
    Method LockTag

    method LockTag

    */
    inline int LockTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method NextTag

    method NextTag

    */
    inline int NextTag();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PreviousTag

    method PreviousTag

    */
    inline int PreviousTag();

    /*
    Method ReadTags

    method ReadTags

    */
    inline int ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartReadTags

    method StartReadTags

    */
    inline int StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password);

    /*
    Method StopReadTags

    method StopReadTags

    */
    inline int StopReadTags(const QString& Password);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WriteTagData

    method WriteTagData

    */
    inline int WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password);

    /*
    Method WriteTagID

    method WriteTagID

    */
    inline int WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSRFIDScanner : public QAxObject
{
public:
    OPOSRFIDScanner(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90372-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSRFIDScanner(IOPOSRFIDScanner *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSRFIDScanner(IOPOSRFIDScanner_1_12 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapContinuousRead

    property CapContinuousRead

    */
    inline bool CapContinuousRead() const; //Returns the value of CapContinuousRead

    /*
    Property CapDisableTag

    property CapDisableTag

    */
    inline bool CapDisableTag() const; //Returns the value of CapDisableTag

    /*
    Property CapLockTag

    property CapLockTag

    */
    inline bool CapLockTag() const; //Returns the value of CapLockTag

    /*
    Property CapMultipleProtocols

    property CapMultipleProtocols

    */
    inline int CapMultipleProtocols() const; //Returns the value of CapMultipleProtocols

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadTimer

    property CapReadTimer

    */
    inline bool CapReadTimer() const; //Returns the value of CapReadTimer

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWriteTag

    property CapWriteTag

    */
    inline int CapWriteTag() const; //Returns the value of CapWriteTag

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ContinuousReadMode

    property ContinuousReadMode

    */
    inline bool ContinuousReadMode() const; //Returns the value of ContinuousReadMode

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentTagID

    property CurrentTagID

    */
    inline QString CurrentTagID() const; //Returns the value of CurrentTagID

    /*
    Property CurrentTagProtocol

    property CurrentTagProtocol

    */
    inline int CurrentTagProtocol() const; //Returns the value of CurrentTagProtocol

    /*
    Property CurrentTagUserData

    property CurrentTagUserData

    */
    inline QString CurrentTagUserData() const; //Returns the value of CurrentTagUserData

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ProtocolMask

    property ProtocolMask

    */
    inline int ProtocolMask() const; //Returns the value of ProtocolMask
    inline void SetProtocolMask(int value); //Sets the value of the ProtocolMask property

    /*
    Property ReadTimerInterval

    property ReadTimerInterval

    */
    inline int ReadTimerInterval() const; //Returns the value of ReadTimerInterval
    inline void SetReadTimerInterval(int value); //Sets the value of the ReadTimerInterval property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TagCount

    property TagCount

    */
    inline int TagCount() const; //Returns the value of TagCount

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisableTag

    method DisableTag

    */
    inline int DisableTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method FirstTag

    method FirstTag

    */
    inline int FirstTag();

    /*
    Method LockTag

    method LockTag

    */
    inline int LockTag(const QString& TagID, int Timeout, const QString& Password);

    /*
    Method NextTag

    method NextTag

    */
    inline int NextTag();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PreviousTag

    method PreviousTag

    */
    inline int PreviousTag();

    /*
    Method ReadTags

    method ReadTags

    */
    inline int ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartReadTags

    method StartReadTags

    */
    inline int StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password);

    /*
    Method StopReadTags

    method StopReadTags

    */
    inline int StopReadTags(const QString& Password);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WriteTagData

    method WriteTagData

    */
    inline int WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password);

    /*
    Method WriteTagID

    method WriteTagID

    */
    inline int WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSRFIDScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int OPOSRFIDScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSRFIDScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapContinuousRead() const
{
    QVariant qax_result = property("CapContinuousRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapDisableTag() const
{
    QVariant qax_result = property("CapDisableTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapLockTag() const
{
    QVariant qax_result = property("CapLockTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSRFIDScanner::CapMultipleProtocols() const
{
    QVariant qax_result = property("CapMultipleProtocols");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapReadTimer() const
{
    QVariant qax_result = property("CapReadTimer");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSRFIDScanner::CapWriteTag() const
{
    QVariant qax_result = property("CapWriteTag");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSRFIDScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSRFIDScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSRFIDScanner::ContinuousReadMode() const
{
    QVariant qax_result = property("ContinuousReadMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSRFIDScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSRFIDScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSRFIDScanner::CurrentTagID() const
{
    QVariant qax_result = property("CurrentTagID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSRFIDScanner::CurrentTagProtocol() const
{
    QVariant qax_result = property("CurrentTagProtocol");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSRFIDScanner::CurrentTagUserData() const
{
    QVariant qax_result = property("CurrentTagUserData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSRFIDScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSRFIDScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString OPOSRFIDScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSRFIDScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSRFIDScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSRFIDScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int OPOSRFIDScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSRFIDScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::ProtocolMask() const
{
    QVariant qax_result = property("ProtocolMask");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetProtocolMask(int value){ setProperty("ProtocolMask", QVariant(value)); }

inline int OPOSRFIDScanner::ReadTimerInterval() const
{
    QVariant qax_result = property("ReadTimerInterval");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSRFIDScanner::SetReadTimerInterval(int value){ setProperty("ReadTimerInterval", QVariant(value)); }

inline int OPOSRFIDScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSRFIDScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSRFIDScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::TagCount() const
{
    QVariant qax_result = property("TagCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSRFIDScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::DisableTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::FirstTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::LockTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::NextTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::PreviousTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void OPOSRFIDScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void OPOSRFIDScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void OPOSRFIDScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void OPOSRFIDScanner::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline int OPOSRFIDScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline void OPOSRFIDScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline int OPOSRFIDScanner::StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::StopReadTags(const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Userdata, (void*)&Start, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int OPOSRFIDScanner::WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SourceID, (void*)&DestID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}


inline bool IOPOSRFIDScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSRFIDScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSRFIDScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapContinuousRead() const
{
    QVariant qax_result = property("CapContinuousRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapDisableTag() const
{
    QVariant qax_result = property("CapDisableTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapLockTag() const
{
    QVariant qax_result = property("CapLockTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSRFIDScanner::CapMultipleProtocols() const
{
    QVariant qax_result = property("CapMultipleProtocols");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapReadTimer() const
{
    QVariant qax_result = property("CapReadTimer");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSRFIDScanner::CapWriteTag() const
{
    QVariant qax_result = property("CapWriteTag");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::ContinuousReadMode() const
{
    QVariant qax_result = property("ContinuousReadMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSRFIDScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner::CurrentTagID() const
{
    QVariant qax_result = property("CurrentTagID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner::CurrentTagProtocol() const
{
    QVariant qax_result = property("CurrentTagProtocol");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner::CurrentTagUserData() const
{
    QVariant qax_result = property("CurrentTagUserData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSRFIDScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSRFIDScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSRFIDScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSRFIDScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::ProtocolMask() const
{
    QVariant qax_result = property("ProtocolMask");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetProtocolMask(int value){ setProperty("ProtocolMask", QVariant(value)); }

inline int IOPOSRFIDScanner::ReadTimerInterval() const
{
    QVariant qax_result = property("ReadTimerInterval");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner::SetReadTimerInterval(int value){ setProperty("ReadTimerInterval", QVariant(value)); }

inline int IOPOSRFIDScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::TagCount() const
{
    QVariant qax_result = property("TagCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::DisableTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::FirstTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::LockTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::NextTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::PreviousTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void IOPOSRFIDScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSRFIDScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSRFIDScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSRFIDScanner::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int IOPOSRFIDScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void IOPOSRFIDScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline int IOPOSRFIDScanner::StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::StopReadTags(const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Userdata, (void*)&Start, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner::WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SourceID, (void*)&DestID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}


inline bool IOPOSRFIDScanner_1_12::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSRFIDScanner_1_12::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSRFIDScanner_1_12::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapContinuousRead() const
{
    QVariant qax_result = property("CapContinuousRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapDisableTag() const
{
    QVariant qax_result = property("CapDisableTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapLockTag() const
{
    QVariant qax_result = property("CapLockTag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::CapMultipleProtocols() const
{
    QVariant qax_result = property("CapMultipleProtocols");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapReadTimer() const
{
    QVariant qax_result = property("CapReadTimer");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::CapWriteTag() const
{
    QVariant qax_result = property("CapWriteTag");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner_1_12::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::ContinuousReadMode() const
{
    QVariant qax_result = property("ContinuousReadMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSRFIDScanner_1_12::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner_1_12::CurrentTagID() const
{
    QVariant qax_result = property("CurrentTagID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::CurrentTagProtocol() const
{
    QVariant qax_result = property("CurrentTagProtocol");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner_1_12::CurrentTagUserData() const
{
    QVariant qax_result = property("CurrentTagUserData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSRFIDScanner_1_12::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSRFIDScanner_1_12::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSRFIDScanner_1_12::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSRFIDScanner_1_12::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSRFIDScanner_1_12::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::ProtocolMask() const
{
    QVariant qax_result = property("ProtocolMask");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetProtocolMask(int value){ setProperty("ProtocolMask", QVariant(value)); }

inline int IOPOSRFIDScanner_1_12::ReadTimerInterval() const
{
    QVariant qax_result = property("ReadTimerInterval");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSRFIDScanner_1_12::SetReadTimerInterval(int value){ setProperty("ReadTimerInterval", QVariant(value)); }

inline int IOPOSRFIDScanner_1_12::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSRFIDScanner_1_12::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::TagCount() const
{
    QVariant qax_result = property("TagCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSRFIDScanner_1_12::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::DisableTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::FirstTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::LockTag(const QString& TagID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::NextTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::PreviousTag()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void IOPOSRFIDScanner_1_12::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSRFIDScanner_1_12::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSRFIDScanner_1_12::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSRFIDScanner_1_12::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int IOPOSRFIDScanner_1_12::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void IOPOSRFIDScanner_1_12::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline int IOPOSRFIDScanner_1_12::StartReadTags(int Cmd, const QString& FilterID, const QString& Filtermask, int Start, int Length, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Cmd, (void*)&FilterID, (void*)&Filtermask, (void*)&Start, (void*)&Length, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::StopReadTags(const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::WriteTagData(const QString& TagID, const QString& Userdata, int Start, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&TagID, (void*)&Userdata, (void*)&Start, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int IOPOSRFIDScanner_1_12::WriteTagID(const QString& SourceID, const QString& DestID, int Timeout, const QString& Password)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SourceID, (void*)&DestID, (void*)&Timeout, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSRFIDScanner *t)
{ Q_ASSERT(!t); return new OPOS::OPOSRFIDScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSRFIDScanner *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSRFIDScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSRFIDScanner_1_12 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSRFIDScanner_1_12; }

#endif

