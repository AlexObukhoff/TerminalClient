/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSImageScanner.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_IMAGESCANNER_H
#define QAX_DUMPCPP_IMAGESCANNER_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSImageScannerEvents

class OPOS_EXPORT IOPOSImageScanner : public QAxObject
{
public:
    IOPOSImageScanner(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AimMode

    property AimMode

    */
    inline bool AimMode() const; //Returns the value of AimMode
    inline void SetAimMode(bool value); //Sets the value of the AimMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BitsPerPixel

    property BitsPerPixel

    */
    inline int BitsPerPixel() const; //Returns the value of BitsPerPixel

    /*
    Property CapAim

    property CapAim

    */
    inline bool CapAim() const; //Returns the value of CapAim

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDecodeData

    property CapDecodeData

    */
    inline bool CapDecodeData() const; //Returns the value of CapDecodeData

    /*
    Property CapHostTriggered

    property CapHostTriggered

    */
    inline bool CapHostTriggered() const; //Returns the value of CapHostTriggered

    /*
    Property CapIlluminate

    property CapIlluminate

    */
    inline bool CapIlluminate() const; //Returns the value of CapIlluminate

    /*
    Property CapImageData

    property CapImageData

    */
    inline bool CapImageData() const; //Returns the value of CapImageData

    /*
    Property CapImageQuality

    property CapImageQuality

    */
    inline bool CapImageQuality() const; //Returns the value of CapImageQuality

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVideoData

    property CapVideoData

    */
    inline bool CapVideoData() const; //Returns the value of CapVideoData

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FrameData

    property FrameData

    */
    inline QString FrameData() const; //Returns the value of FrameData

    /*
    Property FrameType

    property FrameType

    */
    inline int FrameType() const; //Returns the value of FrameType

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property IlluminateMode

    property IlluminateMode

    */
    inline bool IlluminateMode() const; //Returns the value of IlluminateMode
    inline void SetIlluminateMode(bool value); //Sets the value of the IlluminateMode property

    /*
    Property ImageHeight

    property ImageHeight

    */
    inline int ImageHeight() const; //Returns the value of ImageHeight

    /*
    Property ImageLength

    property ImageLength

    */
    inline int ImageLength() const; //Returns the value of ImageLength

    /*
    Property ImageMode

    property ImageMode

    */
    inline int ImageMode() const; //Returns the value of ImageMode
    inline void SetImageMode(int value); //Sets the value of the ImageMode property

    /*
    Property ImageQuality

    property ImageQuality

    */
    inline int ImageQuality() const; //Returns the value of ImageQuality
    inline void SetImageQuality(int value); //Sets the value of the ImageQuality property

    /*
    Property ImageType

    property ImageType

    */
    inline int ImageType() const; //Returns the value of ImageType

    /*
    Property ImageWidth

    property ImageWidth

    */
    inline int ImageWidth() const; //Returns the value of ImageWidth

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property VideoCount

    property VideoCount

    */
    inline int VideoCount() const; //Returns the value of VideoCount
    inline void SetVideoCount(int value); //Sets the value of the VideoCount property

    /*
    Property VideoRate

    property VideoRate

    */
    inline int VideoRate() const; //Returns the value of VideoRate
    inline void SetVideoRate(int value); //Sets the value of the VideoRate property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartSession

    method StartSession

    */
    inline int StartSession();

    /*
    Method StopSession

    method StopSession

    */
    inline int StopSession();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSImageScanner_1_11 : public QAxObject
{
public:
    IOPOSImageScanner_1_11(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AimMode

    property AimMode

    */
    inline bool AimMode() const; //Returns the value of AimMode
    inline void SetAimMode(bool value); //Sets the value of the AimMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BitsPerPixel

    property BitsPerPixel

    */
    inline int BitsPerPixel() const; //Returns the value of BitsPerPixel

    /*
    Property CapAim

    property CapAim

    */
    inline bool CapAim() const; //Returns the value of CapAim

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDecodeData

    property CapDecodeData

    */
    inline bool CapDecodeData() const; //Returns the value of CapDecodeData

    /*
    Property CapHostTriggered

    property CapHostTriggered

    */
    inline bool CapHostTriggered() const; //Returns the value of CapHostTriggered

    /*
    Property CapIlluminate

    property CapIlluminate

    */
    inline bool CapIlluminate() const; //Returns the value of CapIlluminate

    /*
    Property CapImageData

    property CapImageData

    */
    inline bool CapImageData() const; //Returns the value of CapImageData

    /*
    Property CapImageQuality

    property CapImageQuality

    */
    inline bool CapImageQuality() const; //Returns the value of CapImageQuality

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVideoData

    property CapVideoData

    */
    inline bool CapVideoData() const; //Returns the value of CapVideoData

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FrameData

    property FrameData

    */
    inline QString FrameData() const; //Returns the value of FrameData

    /*
    Property FrameType

    property FrameType

    */
    inline int FrameType() const; //Returns the value of FrameType

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property IlluminateMode

    property IlluminateMode

    */
    inline bool IlluminateMode() const; //Returns the value of IlluminateMode
    inline void SetIlluminateMode(bool value); //Sets the value of the IlluminateMode property

    /*
    Property ImageHeight

    property ImageHeight

    */
    inline int ImageHeight() const; //Returns the value of ImageHeight

    /*
    Property ImageLength

    property ImageLength

    */
    inline int ImageLength() const; //Returns the value of ImageLength

    /*
    Property ImageMode

    property ImageMode

    */
    inline int ImageMode() const; //Returns the value of ImageMode
    inline void SetImageMode(int value); //Sets the value of the ImageMode property

    /*
    Property ImageQuality

    property ImageQuality

    */
    inline int ImageQuality() const; //Returns the value of ImageQuality
    inline void SetImageQuality(int value); //Sets the value of the ImageQuality property

    /*
    Property ImageType

    property ImageType

    */
    inline int ImageType() const; //Returns the value of ImageType

    /*
    Property ImageWidth

    property ImageWidth

    */
    inline int ImageWidth() const; //Returns the value of ImageWidth

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property VideoCount

    property VideoCount

    */
    inline int VideoCount() const; //Returns the value of VideoCount
    inline void SetVideoCount(int value); //Sets the value of the VideoCount property

    /*
    Property VideoRate

    property VideoRate

    */
    inline int VideoRate() const; //Returns the value of VideoRate
    inline void SetVideoRate(int value); //Sets the value of the VideoRate property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartSession

    method StartSession

    */
    inline int StartSession();

    /*
    Method StopSession

    method StopSession

    */
    inline int StopSession();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSImageScanner : public QAxObject
{
public:
    OPOSImageScanner(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90312-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSImageScanner(IOPOSImageScanner *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSImageScanner(IOPOSImageScanner_1_11 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AimMode

    property AimMode

    */
    inline bool AimMode() const; //Returns the value of AimMode
    inline void SetAimMode(bool value); //Sets the value of the AimMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BitsPerPixel

    property BitsPerPixel

    */
    inline int BitsPerPixel() const; //Returns the value of BitsPerPixel

    /*
    Property CapAim

    property CapAim

    */
    inline bool CapAim() const; //Returns the value of CapAim

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDecodeData

    property CapDecodeData

    */
    inline bool CapDecodeData() const; //Returns the value of CapDecodeData

    /*
    Property CapHostTriggered

    property CapHostTriggered

    */
    inline bool CapHostTriggered() const; //Returns the value of CapHostTriggered

    /*
    Property CapIlluminate

    property CapIlluminate

    */
    inline bool CapIlluminate() const; //Returns the value of CapIlluminate

    /*
    Property CapImageData

    property CapImageData

    */
    inline bool CapImageData() const; //Returns the value of CapImageData

    /*
    Property CapImageQuality

    property CapImageQuality

    */
    inline bool CapImageQuality() const; //Returns the value of CapImageQuality

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVideoData

    property CapVideoData

    */
    inline bool CapVideoData() const; //Returns the value of CapVideoData

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FrameData

    property FrameData

    */
    inline QString FrameData() const; //Returns the value of FrameData

    /*
    Property FrameType

    property FrameType

    */
    inline int FrameType() const; //Returns the value of FrameType

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property IlluminateMode

    property IlluminateMode

    */
    inline bool IlluminateMode() const; //Returns the value of IlluminateMode
    inline void SetIlluminateMode(bool value); //Sets the value of the IlluminateMode property

    /*
    Property ImageHeight

    property ImageHeight

    */
    inline int ImageHeight() const; //Returns the value of ImageHeight

    /*
    Property ImageLength

    property ImageLength

    */
    inline int ImageLength() const; //Returns the value of ImageLength

    /*
    Property ImageMode

    property ImageMode

    */
    inline int ImageMode() const; //Returns the value of ImageMode
    inline void SetImageMode(int value); //Sets the value of the ImageMode property

    /*
    Property ImageQuality

    property ImageQuality

    */
    inline int ImageQuality() const; //Returns the value of ImageQuality
    inline void SetImageQuality(int value); //Sets the value of the ImageQuality property

    /*
    Property ImageType

    property ImageType

    */
    inline int ImageType() const; //Returns the value of ImageType

    /*
    Property ImageWidth

    property ImageWidth

    */
    inline int ImageWidth() const; //Returns the value of ImageWidth

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property VideoCount

    property VideoCount

    */
    inline int VideoCount() const; //Returns the value of VideoCount
    inline void SetVideoCount(int value); //Sets the value of the VideoCount property

    /*
    Property VideoRate

    property VideoRate

    */
    inline int VideoRate() const; //Returns the value of VideoRate
    inline void SetVideoRate(int value); //Sets the value of the VideoRate property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StartSession

    method StartSession

    */
    inline int StartSession();

    /*
    Method StopSession

    method StopSession

    */
    inline int StopSession();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSImageScanner::AimMode() const
{
    QVariant qax_result = property("AimMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetAimMode(bool value){ setProperty("AimMode", QVariant(value)); }

inline bool OPOSImageScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int OPOSImageScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int OPOSImageScanner::BitsPerPixel() const
{
    QVariant qax_result = property("BitsPerPixel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSImageScanner::CapAim() const
{
    QVariant qax_result = property("CapAim");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapDecodeData() const
{
    QVariant qax_result = property("CapDecodeData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapHostTriggered() const
{
    QVariant qax_result = property("CapHostTriggered");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapIlluminate() const
{
    QVariant qax_result = property("CapIlluminate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapImageData() const
{
    QVariant qax_result = property("CapImageData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapImageQuality() const
{
    QVariant qax_result = property("CapImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSImageScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSImageScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSImageScanner::CapVideoData() const
{
    QVariant qax_result = property("CapVideoData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSImageScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSImageScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSImageScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSImageScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSImageScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString OPOSImageScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSImageScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSImageScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSImageScanner::FrameData() const
{
    QVariant qax_result = property("FrameData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSImageScanner::FrameType() const
{
    QVariant qax_result = property("FrameType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSImageScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool OPOSImageScanner::IlluminateMode() const
{
    QVariant qax_result = property("IlluminateMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSImageScanner::SetIlluminateMode(bool value){ setProperty("IlluminateMode", QVariant(value)); }

inline int OPOSImageScanner::ImageHeight() const
{
    QVariant qax_result = property("ImageHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::ImageLength() const
{
    QVariant qax_result = property("ImageLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::ImageMode() const
{
    QVariant qax_result = property("ImageMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetImageMode(int value){ setProperty("ImageMode", QVariant(value)); }

inline int OPOSImageScanner::ImageQuality() const
{
    QVariant qax_result = property("ImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetImageQuality(int value){ setProperty("ImageQuality", QVariant(value)); }

inline int OPOSImageScanner::ImageType() const
{
    QVariant qax_result = property("ImageType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::ImageWidth() const
{
    QVariant qax_result = property("ImageWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSImageScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSImageScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSImageScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSImageScanner::VideoCount() const
{
    QVariant qax_result = property("VideoCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetVideoCount(int value){ setProperty("VideoCount", QVariant(value)); }

inline int OPOSImageScanner::VideoRate() const
{
    QVariant qax_result = property("VideoRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSImageScanner::SetVideoRate(int value){ setProperty("VideoRate", QVariant(value)); }

inline int OPOSImageScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSImageScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSImageScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSImageScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSImageScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSImageScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSImageScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSImageScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSImageScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSImageScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSImageScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void OPOSImageScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void OPOSImageScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void OPOSImageScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void OPOSImageScanner::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int OPOSImageScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void OPOSImageScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int OPOSImageScanner::StartSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int OPOSImageScanner::StopSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int OPOSImageScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int OPOSImageScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}


inline bool IOPOSImageScanner::AimMode() const
{
    QVariant qax_result = property("AimMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetAimMode(bool value){ setProperty("AimMode", QVariant(value)); }

inline bool IOPOSImageScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSImageScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSImageScanner::BitsPerPixel() const
{
    QVariant qax_result = property("BitsPerPixel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapAim() const
{
    QVariant qax_result = property("CapAim");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapDecodeData() const
{
    QVariant qax_result = property("CapDecodeData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapHostTriggered() const
{
    QVariant qax_result = property("CapHostTriggered");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapIlluminate() const
{
    QVariant qax_result = property("CapIlluminate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapImageData() const
{
    QVariant qax_result = property("CapImageData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapImageQuality() const
{
    QVariant qax_result = property("CapImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSImageScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner::CapVideoData() const
{
    QVariant qax_result = property("CapVideoData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSImageScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSImageScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSImageScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSImageScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSImageScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSImageScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSImageScanner::FrameData() const
{
    QVariant qax_result = property("FrameData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner::FrameType() const
{
    QVariant qax_result = property("FrameType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool IOPOSImageScanner::IlluminateMode() const
{
    QVariant qax_result = property("IlluminateMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner::SetIlluminateMode(bool value){ setProperty("IlluminateMode", QVariant(value)); }

inline int IOPOSImageScanner::ImageHeight() const
{
    QVariant qax_result = property("ImageHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::ImageLength() const
{
    QVariant qax_result = property("ImageLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::ImageMode() const
{
    QVariant qax_result = property("ImageMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetImageMode(int value){ setProperty("ImageMode", QVariant(value)); }

inline int IOPOSImageScanner::ImageQuality() const
{
    QVariant qax_result = property("ImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetImageQuality(int value){ setProperty("ImageQuality", QVariant(value)); }

inline int IOPOSImageScanner::ImageType() const
{
    QVariant qax_result = property("ImageType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::ImageWidth() const
{
    QVariant qax_result = property("ImageWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSImageScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSImageScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner::VideoCount() const
{
    QVariant qax_result = property("VideoCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetVideoCount(int value){ setProperty("VideoCount", QVariant(value)); }

inline int IOPOSImageScanner::VideoRate() const
{
    QVariant qax_result = property("VideoRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner::SetVideoRate(int value){ setProperty("VideoRate", QVariant(value)); }

inline int IOPOSImageScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSImageScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSImageScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSImageScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSImageScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSImageScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSImageScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSImageScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSImageScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSImageScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSImageScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void IOPOSImageScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSImageScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSImageScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void IOPOSImageScanner::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSImageScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void IOPOSImageScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline int IOPOSImageScanner::StartSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSImageScanner::StopSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSImageScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int IOPOSImageScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}


inline bool IOPOSImageScanner_1_11::AimMode() const
{
    QVariant qax_result = property("AimMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetAimMode(bool value){ setProperty("AimMode", QVariant(value)); }

inline bool IOPOSImageScanner_1_11::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSImageScanner_1_11::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSImageScanner_1_11::BitsPerPixel() const
{
    QVariant qax_result = property("BitsPerPixel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapAim() const
{
    QVariant qax_result = property("CapAim");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapDecodeData() const
{
    QVariant qax_result = property("CapDecodeData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapHostTriggered() const
{
    QVariant qax_result = property("CapHostTriggered");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapIlluminate() const
{
    QVariant qax_result = property("CapIlluminate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapImageData() const
{
    QVariant qax_result = property("CapImageData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapImageQuality() const
{
    QVariant qax_result = property("CapImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::CapVideoData() const
{
    QVariant qax_result = property("CapVideoData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSImageScanner_1_11::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSImageScanner_1_11::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSImageScanner_1_11::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSImageScanner_1_11::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSImageScanner_1_11::FrameData() const
{
    QVariant qax_result = property("FrameData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::FrameType() const
{
    QVariant qax_result = property("FrameType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSImageScanner_1_11::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool IOPOSImageScanner_1_11::IlluminateMode() const
{
    QVariant qax_result = property("IlluminateMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetIlluminateMode(bool value){ setProperty("IlluminateMode", QVariant(value)); }

inline int IOPOSImageScanner_1_11::ImageHeight() const
{
    QVariant qax_result = property("ImageHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ImageLength() const
{
    QVariant qax_result = property("ImageLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ImageMode() const
{
    QVariant qax_result = property("ImageMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetImageMode(int value){ setProperty("ImageMode", QVariant(value)); }

inline int IOPOSImageScanner_1_11::ImageQuality() const
{
    QVariant qax_result = property("ImageQuality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetImageQuality(int value){ setProperty("ImageQuality", QVariant(value)); }

inline int IOPOSImageScanner_1_11::ImageType() const
{
    QVariant qax_result = property("ImageType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ImageWidth() const
{
    QVariant qax_result = property("ImageWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSImageScanner_1_11::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSImageScanner_1_11::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSImageScanner_1_11::VideoCount() const
{
    QVariant qax_result = property("VideoCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetVideoCount(int value){ setProperty("VideoCount", QVariant(value)); }

inline int IOPOSImageScanner_1_11::VideoRate() const
{
    QVariant qax_result = property("VideoRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSImageScanner_1_11::SetVideoRate(int value){ setProperty("VideoRate", QVariant(value)); }

inline int IOPOSImageScanner_1_11::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void IOPOSImageScanner_1_11::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSImageScanner_1_11::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSImageScanner_1_11::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void IOPOSImageScanner_1_11::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSImageScanner_1_11::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void IOPOSImageScanner_1_11::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline int IOPOSImageScanner_1_11::StartSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::StopSession()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int IOPOSImageScanner_1_11::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSImageScanner *t)
{ Q_ASSERT(!t); return new OPOS::OPOSImageScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSImageScanner *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSImageScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSImageScanner_1_11 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSImageScanner_1_11; }

#endif

