/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSElectronicJournal.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_ELECTRONICJOURNAL_H
#define QAX_DUMPCPP_ELECTRONICJOURNAL_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSElectronicJournalEvents

class OPOS_EXPORT IOPOSElectronicJournal : public QAxObject
{
public:
    IOPOSElectronicJournal(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAddMarker

    property CapAddMarker

    */
    inline bool CapAddMarker() const; //Returns the value of CapAddMarker

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapErasableMedium

    property CapErasableMedium

    */
    inline bool CapErasableMedium() const; //Returns the value of CapErasableMedium

    /*
    Property CapInitializeMedium

    property CapInitializeMedium

    */
    inline bool CapInitializeMedium() const; //Returns the value of CapInitializeMedium

    /*
    Property CapMediumIsAvailable

    property CapMediumIsAvailable

    */
    inline bool CapMediumIsAvailable() const; //Returns the value of CapMediumIsAvailable

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapPrintContent

    property CapPrintContent

    */
    inline bool CapPrintContent() const; //Returns the value of CapPrintContent

    /*
    Property CapPrintContentFile

    property CapPrintContentFile

    */
    inline bool CapPrintContentFile() const; //Returns the value of CapPrintContentFile

    /*
    Property CapRetrieveCurrentMarker

    property CapRetrieveCurrentMarker

    */
    inline bool CapRetrieveCurrentMarker() const; //Returns the value of CapRetrieveCurrentMarker

    /*
    Property CapRetrieveMarker

    property CapRetrieveMarker

    */
    inline bool CapRetrieveMarker() const; //Returns the value of CapRetrieveMarker

    /*
    Property CapRetrieveMarkerByDateTime

    property CapRetrieveMarkerByDateTime

    */
    inline bool CapRetrieveMarkerByDateTime() const; //Returns the value of CapRetrieveMarkerByDateTime

    /*
    Property CapRetrieveMarkersDateTime

    property CapRetrieveMarkersDateTime

    */
    inline bool CapRetrieveMarkersDateTime() const; //Returns the value of CapRetrieveMarkersDateTime

    /*
    Property CapStation

    property CapStation

    */
    inline int CapStation() const; //Returns the value of CapStation

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStorageEnabled

    property CapStorageEnabled

    */
    inline bool CapStorageEnabled() const; //Returns the value of CapStorageEnabled

    /*
    Property CapSuspendPrintContent

    property CapSuspendPrintContent

    */
    inline bool CapSuspendPrintContent() const; //Returns the value of CapSuspendPrintContent

    /*
    Property CapSuspendQueryContent

    property CapSuspendQueryContent

    */
    inline bool CapSuspendQueryContent() const; //Returns the value of CapSuspendQueryContent

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWaterMark

    property CapWaterMark

    */
    inline bool CapWaterMark() const; //Returns the value of CapWaterMark

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FlagWhenIdle

    property FlagWhenIdle

    */
    inline bool FlagWhenIdle() const; //Returns the value of FlagWhenIdle
    inline void SetFlagWhenIdle(bool value); //Sets the value of the FlagWhenIdle property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MediumFreeSpace

    property MediumFreeSpace

    */
    inline qlonglong MediumFreeSpace() const; //Returns the value of MediumFreeSpace

    /*
    Property MediumID

    property MediumID

    */
    inline QString MediumID() const; //Returns the value of MediumID

    /*
    Property MediumIsAvailable

    property MediumIsAvailable

    */
    inline bool MediumIsAvailable() const; //Returns the value of MediumIsAvailable

    /*
    Property MediumSize

    property MediumSize

    */
    inline qlonglong MediumSize() const; //Returns the value of MediumSize

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Station

    property Station

    */
    inline int Station() const; //Returns the value of Station
    inline void SetStation(int value); //Sets the value of the Station property

    /*
    Property StorageEnabled

    property StorageEnabled

    */
    inline bool StorageEnabled() const; //Returns the value of StorageEnabled
    inline void SetStorageEnabled(bool value); //Sets the value of the StorageEnabled property

    /*
    Property Suspended

    property Suspended

    */
    inline bool Suspended() const; //Returns the value of Suspended

    /*
    Property WaterMark

    property WaterMark

    */
    inline bool WaterMark() const; //Returns the value of WaterMark
    inline void SetWaterMark(bool value); //Sets the value of the WaterMark property

    /*
    Method AddMarker

    method AddMarker

    */
    inline int AddMarker(const QString& Marker);

    /*
    Method CancelPrintContent

    method CancelPrintContent

    */
    inline int CancelPrintContent();

    /*
    Method CancelQueryContent

    method CancelQueryContent

    */
    inline int CancelQueryContent();

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EraseMedium

    method EraseMedium

    */
    inline int EraseMedium();

    /*
    Method InitializeMedium

    method InitializeMedium

    */
    inline int InitializeMedium(const QString& MediumID);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PrintContent

    method PrintContent

    */
    inline int PrintContent(const QString& FromMarker, const QString& ToMarker);

    /*
    Method PrintContentFile

    method PrintContentFile

    */
    inline int PrintContentFile(const QString& FileName);

    /*
    Method QueryContent

    method QueryContent

    */
    inline int QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method ResumePrintContent

    method ResumePrintContent

    */
    inline int ResumePrintContent();

    /*
    Method ResumeQueryContent

    method ResumeQueryContent

    */
    inline int ResumeQueryContent();

    /*
    Method RetrieveCurrentMarker

    method RetrieveCurrentMarker

    */
    inline int RetrieveCurrentMarker(int MarkerType, QString& pMarker);

    /*
    Method RetrieveMarker

    method RetrieveMarker

    */
    inline int RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker);

    /*
    Method RetrieveMarkerByDateTime

    method RetrieveMarkerByDateTime

    */
    inline int RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker);

    /*
    Method RetrieveMarkersDateTime

    method RetrieveMarkersDateTime

    */
    inline int RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method SuspendPrintContent

    method SuspendPrintContent

    */
    inline int SuspendPrintContent();

    /*
    Method SuspendQueryContent

    method SuspendQueryContent

    */
    inline int SuspendQueryContent();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSElectronicJournal_1_10 : public QAxObject
{
public:
    IOPOSElectronicJournal_1_10(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAddMarker

    property CapAddMarker

    */
    inline bool CapAddMarker() const; //Returns the value of CapAddMarker

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapErasableMedium

    property CapErasableMedium

    */
    inline bool CapErasableMedium() const; //Returns the value of CapErasableMedium

    /*
    Property CapInitializeMedium

    property CapInitializeMedium

    */
    inline bool CapInitializeMedium() const; //Returns the value of CapInitializeMedium

    /*
    Property CapMediumIsAvailable

    property CapMediumIsAvailable

    */
    inline bool CapMediumIsAvailable() const; //Returns the value of CapMediumIsAvailable

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapPrintContent

    property CapPrintContent

    */
    inline bool CapPrintContent() const; //Returns the value of CapPrintContent

    /*
    Property CapPrintContentFile

    property CapPrintContentFile

    */
    inline bool CapPrintContentFile() const; //Returns the value of CapPrintContentFile

    /*
    Property CapRetrieveCurrentMarker

    property CapRetrieveCurrentMarker

    */
    inline bool CapRetrieveCurrentMarker() const; //Returns the value of CapRetrieveCurrentMarker

    /*
    Property CapRetrieveMarker

    property CapRetrieveMarker

    */
    inline bool CapRetrieveMarker() const; //Returns the value of CapRetrieveMarker

    /*
    Property CapRetrieveMarkerByDateTime

    property CapRetrieveMarkerByDateTime

    */
    inline bool CapRetrieveMarkerByDateTime() const; //Returns the value of CapRetrieveMarkerByDateTime

    /*
    Property CapRetrieveMarkersDateTime

    property CapRetrieveMarkersDateTime

    */
    inline bool CapRetrieveMarkersDateTime() const; //Returns the value of CapRetrieveMarkersDateTime

    /*
    Property CapStation

    property CapStation

    */
    inline int CapStation() const; //Returns the value of CapStation

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStorageEnabled

    property CapStorageEnabled

    */
    inline bool CapStorageEnabled() const; //Returns the value of CapStorageEnabled

    /*
    Property CapSuspendPrintContent

    property CapSuspendPrintContent

    */
    inline bool CapSuspendPrintContent() const; //Returns the value of CapSuspendPrintContent

    /*
    Property CapSuspendQueryContent

    property CapSuspendQueryContent

    */
    inline bool CapSuspendQueryContent() const; //Returns the value of CapSuspendQueryContent

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWaterMark

    property CapWaterMark

    */
    inline bool CapWaterMark() const; //Returns the value of CapWaterMark

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FlagWhenIdle

    property FlagWhenIdle

    */
    inline bool FlagWhenIdle() const; //Returns the value of FlagWhenIdle
    inline void SetFlagWhenIdle(bool value); //Sets the value of the FlagWhenIdle property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MediumFreeSpace

    property MediumFreeSpace

    */
    inline qlonglong MediumFreeSpace() const; //Returns the value of MediumFreeSpace

    /*
    Property MediumID

    property MediumID

    */
    inline QString MediumID() const; //Returns the value of MediumID

    /*
    Property MediumIsAvailable

    property MediumIsAvailable

    */
    inline bool MediumIsAvailable() const; //Returns the value of MediumIsAvailable

    /*
    Property MediumSize

    property MediumSize

    */
    inline qlonglong MediumSize() const; //Returns the value of MediumSize

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Station

    property Station

    */
    inline int Station() const; //Returns the value of Station
    inline void SetStation(int value); //Sets the value of the Station property

    /*
    Property StorageEnabled

    property StorageEnabled

    */
    inline bool StorageEnabled() const; //Returns the value of StorageEnabled
    inline void SetStorageEnabled(bool value); //Sets the value of the StorageEnabled property

    /*
    Property Suspended

    property Suspended

    */
    inline bool Suspended() const; //Returns the value of Suspended

    /*
    Property WaterMark

    property WaterMark

    */
    inline bool WaterMark() const; //Returns the value of WaterMark
    inline void SetWaterMark(bool value); //Sets the value of the WaterMark property

    /*
    Method AddMarker

    method AddMarker

    */
    inline int AddMarker(const QString& Marker);

    /*
    Method CancelPrintContent

    method CancelPrintContent

    */
    inline int CancelPrintContent();

    /*
    Method CancelQueryContent

    method CancelQueryContent

    */
    inline int CancelQueryContent();

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EraseMedium

    method EraseMedium

    */
    inline int EraseMedium();

    /*
    Method InitializeMedium

    method InitializeMedium

    */
    inline int InitializeMedium(const QString& MediumID);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PrintContent

    method PrintContent

    */
    inline int PrintContent(const QString& FromMarker, const QString& ToMarker);

    /*
    Method PrintContentFile

    method PrintContentFile

    */
    inline int PrintContentFile(const QString& FileName);

    /*
    Method QueryContent

    method QueryContent

    */
    inline int QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method ResumePrintContent

    method ResumePrintContent

    */
    inline int ResumePrintContent();

    /*
    Method ResumeQueryContent

    method ResumeQueryContent

    */
    inline int ResumeQueryContent();

    /*
    Method RetrieveCurrentMarker

    method RetrieveCurrentMarker

    */
    inline int RetrieveCurrentMarker(int MarkerType, QString& pMarker);

    /*
    Method RetrieveMarker

    method RetrieveMarker

    */
    inline int RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker);

    /*
    Method RetrieveMarkerByDateTime

    method RetrieveMarkerByDateTime

    */
    inline int RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker);

    /*
    Method RetrieveMarkersDateTime

    method RetrieveMarkersDateTime

    */
    inline int RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method SuspendPrintContent

    method SuspendPrintContent

    */
    inline int SuspendPrintContent();

    /*
    Method SuspendQueryContent

    method SuspendQueryContent

    */
    inline int SuspendQueryContent();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSElectronicJournal : public QAxObject
{
public:
    OPOSElectronicJournal(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90272-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSElectronicJournal(IOPOSElectronicJournal *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSElectronicJournal(IOPOSElectronicJournal_1_10 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAddMarker

    property CapAddMarker

    */
    inline bool CapAddMarker() const; //Returns the value of CapAddMarker

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapErasableMedium

    property CapErasableMedium

    */
    inline bool CapErasableMedium() const; //Returns the value of CapErasableMedium

    /*
    Property CapInitializeMedium

    property CapInitializeMedium

    */
    inline bool CapInitializeMedium() const; //Returns the value of CapInitializeMedium

    /*
    Property CapMediumIsAvailable

    property CapMediumIsAvailable

    */
    inline bool CapMediumIsAvailable() const; //Returns the value of CapMediumIsAvailable

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapPrintContent

    property CapPrintContent

    */
    inline bool CapPrintContent() const; //Returns the value of CapPrintContent

    /*
    Property CapPrintContentFile

    property CapPrintContentFile

    */
    inline bool CapPrintContentFile() const; //Returns the value of CapPrintContentFile

    /*
    Property CapRetrieveCurrentMarker

    property CapRetrieveCurrentMarker

    */
    inline bool CapRetrieveCurrentMarker() const; //Returns the value of CapRetrieveCurrentMarker

    /*
    Property CapRetrieveMarker

    property CapRetrieveMarker

    */
    inline bool CapRetrieveMarker() const; //Returns the value of CapRetrieveMarker

    /*
    Property CapRetrieveMarkerByDateTime

    property CapRetrieveMarkerByDateTime

    */
    inline bool CapRetrieveMarkerByDateTime() const; //Returns the value of CapRetrieveMarkerByDateTime

    /*
    Property CapRetrieveMarkersDateTime

    property CapRetrieveMarkersDateTime

    */
    inline bool CapRetrieveMarkersDateTime() const; //Returns the value of CapRetrieveMarkersDateTime

    /*
    Property CapStation

    property CapStation

    */
    inline int CapStation() const; //Returns the value of CapStation

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStorageEnabled

    property CapStorageEnabled

    */
    inline bool CapStorageEnabled() const; //Returns the value of CapStorageEnabled

    /*
    Property CapSuspendPrintContent

    property CapSuspendPrintContent

    */
    inline bool CapSuspendPrintContent() const; //Returns the value of CapSuspendPrintContent

    /*
    Property CapSuspendQueryContent

    property CapSuspendQueryContent

    */
    inline bool CapSuspendQueryContent() const; //Returns the value of CapSuspendQueryContent

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapWaterMark

    property CapWaterMark

    */
    inline bool CapWaterMark() const; //Returns the value of CapWaterMark

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FlagWhenIdle

    property FlagWhenIdle

    */
    inline bool FlagWhenIdle() const; //Returns the value of FlagWhenIdle
    inline void SetFlagWhenIdle(bool value); //Sets the value of the FlagWhenIdle property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MediumFreeSpace

    property MediumFreeSpace

    */
    inline qlonglong MediumFreeSpace() const; //Returns the value of MediumFreeSpace

    /*
    Property MediumID

    property MediumID

    */
    inline QString MediumID() const; //Returns the value of MediumID

    /*
    Property MediumIsAvailable

    property MediumIsAvailable

    */
    inline bool MediumIsAvailable() const; //Returns the value of MediumIsAvailable

    /*
    Property MediumSize

    property MediumSize

    */
    inline qlonglong MediumSize() const; //Returns the value of MediumSize

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Station

    property Station

    */
    inline int Station() const; //Returns the value of Station
    inline void SetStation(int value); //Sets the value of the Station property

    /*
    Property StorageEnabled

    property StorageEnabled

    */
    inline bool StorageEnabled() const; //Returns the value of StorageEnabled
    inline void SetStorageEnabled(bool value); //Sets the value of the StorageEnabled property

    /*
    Property Suspended

    property Suspended

    */
    inline bool Suspended() const; //Returns the value of Suspended

    /*
    Property WaterMark

    property WaterMark

    */
    inline bool WaterMark() const; //Returns the value of WaterMark
    inline void SetWaterMark(bool value); //Sets the value of the WaterMark property

    /*
    Method AddMarker

    method AddMarker

    */
    inline int AddMarker(const QString& Marker);

    /*
    Method CancelPrintContent

    method CancelPrintContent

    */
    inline int CancelPrintContent();

    /*
    Method CancelQueryContent

    method CancelQueryContent

    */
    inline int CancelQueryContent();

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EraseMedium

    method EraseMedium

    */
    inline int EraseMedium();

    /*
    Method InitializeMedium

    method InitializeMedium

    */
    inline int InitializeMedium(const QString& MediumID);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method PrintContent

    method PrintContent

    */
    inline int PrintContent(const QString& FromMarker, const QString& ToMarker);

    /*
    Method PrintContentFile

    method PrintContentFile

    */
    inline int PrintContentFile(const QString& FileName);

    /*
    Method QueryContent

    method QueryContent

    */
    inline int QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method ResumePrintContent

    method ResumePrintContent

    */
    inline int ResumePrintContent();

    /*
    Method ResumeQueryContent

    method ResumeQueryContent

    */
    inline int ResumeQueryContent();

    /*
    Method RetrieveCurrentMarker

    method RetrieveCurrentMarker

    */
    inline int RetrieveCurrentMarker(int MarkerType, QString& pMarker);

    /*
    Method RetrieveMarker

    method RetrieveMarker

    */
    inline int RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker);

    /*
    Method RetrieveMarkerByDateTime

    method RetrieveMarkerByDateTime

    */
    inline int RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker);

    /*
    Method RetrieveMarkersDateTime

    method RetrieveMarkersDateTime

    */
    inline int RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method SuspendPrintContent

    method SuspendPrintContent

    */
    inline int SuspendPrintContent();

    /*
    Method SuspendQueryContent

    method SuspendQueryContent

    */
    inline int SuspendQueryContent();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSElectronicJournal::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline bool OPOSElectronicJournal::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int OPOSElectronicJournal::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSElectronicJournal::CapAddMarker() const
{
    QVariant qax_result = property("CapAddMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapErasableMedium() const
{
    QVariant qax_result = property("CapErasableMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapInitializeMedium() const
{
    QVariant qax_result = property("CapInitializeMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapMediumIsAvailable() const
{
    QVariant qax_result = property("CapMediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSElectronicJournal::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapPrintContent() const
{
    QVariant qax_result = property("CapPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapPrintContentFile() const
{
    QVariant qax_result = property("CapPrintContentFile");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapRetrieveCurrentMarker() const
{
    QVariant qax_result = property("CapRetrieveCurrentMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapRetrieveMarker() const
{
    QVariant qax_result = property("CapRetrieveMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapRetrieveMarkerByDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkerByDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapRetrieveMarkersDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkersDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSElectronicJournal::CapStation() const
{
    QVariant qax_result = property("CapStation");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapStorageEnabled() const
{
    QVariant qax_result = property("CapStorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapSuspendPrintContent() const
{
    QVariant qax_result = property("CapSuspendPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapSuspendQueryContent() const
{
    QVariant qax_result = property("CapSuspendQueryContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::CapWaterMark() const
{
    QVariant qax_result = property("CapWaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSElectronicJournal::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSElectronicJournal::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSElectronicJournal::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSElectronicJournal::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSElectronicJournal::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString OPOSElectronicJournal::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSElectronicJournal::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSElectronicJournal::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSElectronicJournal::FlagWhenIdle() const
{
    QVariant qax_result = property("FlagWhenIdle");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetFlagWhenIdle(bool value){ setProperty("FlagWhenIdle", QVariant(value)); }

inline bool OPOSElectronicJournal::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline qlonglong OPOSElectronicJournal::MediumFreeSpace() const
{
    QVariant qax_result = property("MediumFreeSpace");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline QString OPOSElectronicJournal::MediumID() const
{
    QVariant qax_result = property("MediumID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSElectronicJournal::MediumIsAvailable() const
{
    QVariant qax_result = property("MediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline qlonglong OPOSElectronicJournal::MediumSize() const
{
    QVariant qax_result = property("MediumSize");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline int OPOSElectronicJournal::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSElectronicJournal::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSElectronicJournal::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSElectronicJournal::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSElectronicJournal::Station() const
{
    QVariant qax_result = property("Station");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetStation(int value){ setProperty("Station", QVariant(value)); }

inline bool OPOSElectronicJournal::StorageEnabled() const
{
    QVariant qax_result = property("StorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetStorageEnabled(bool value){ setProperty("StorageEnabled", QVariant(value)); }

inline bool OPOSElectronicJournal::Suspended() const
{
    QVariant qax_result = property("Suspended");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSElectronicJournal::WaterMark() const
{
    QVariant qax_result = property("WaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSElectronicJournal::SetWaterMark(bool value){ setProperty("WaterMark", QVariant(value)); }

inline int OPOSElectronicJournal::AddMarker(const QString& Marker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::CancelPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::CancelQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::EraseMedium()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::InitializeMedium(const QString& MediumID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MediumID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::PrintContent(const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::PrintContentFile(const QString& FileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ResumePrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::ResumeQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::RetrieveCurrentMarker(int MarkerType, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&SessionNumber, (void*)&DocumentNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&DateTime, (void*)&MarkerNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker, (void*)&pDateTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline void OPOSElectronicJournal::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void OPOSElectronicJournal::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void OPOSElectronicJournal::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void OPOSElectronicJournal::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline int OPOSElectronicJournal::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void OPOSElectronicJournal::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline int OPOSElectronicJournal::SuspendPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::SuspendQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int OPOSElectronicJournal::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}


inline bool IOPOSElectronicJournal::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline bool IOPOSElectronicJournal::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSElectronicJournal::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSElectronicJournal::CapAddMarker() const
{
    QVariant qax_result = property("CapAddMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapErasableMedium() const
{
    QVariant qax_result = property("CapErasableMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapInitializeMedium() const
{
    QVariant qax_result = property("CapInitializeMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapMediumIsAvailable() const
{
    QVariant qax_result = property("CapMediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSElectronicJournal::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapPrintContent() const
{
    QVariant qax_result = property("CapPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapPrintContentFile() const
{
    QVariant qax_result = property("CapPrintContentFile");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapRetrieveCurrentMarker() const
{
    QVariant qax_result = property("CapRetrieveCurrentMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapRetrieveMarker() const
{
    QVariant qax_result = property("CapRetrieveMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapRetrieveMarkerByDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkerByDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapRetrieveMarkersDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkersDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSElectronicJournal::CapStation() const
{
    QVariant qax_result = property("CapStation");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapStorageEnabled() const
{
    QVariant qax_result = property("CapStorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapSuspendPrintContent() const
{
    QVariant qax_result = property("CapSuspendPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapSuspendQueryContent() const
{
    QVariant qax_result = property("CapSuspendQueryContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::CapWaterMark() const
{
    QVariant qax_result = property("CapWaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSElectronicJournal::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSElectronicJournal::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSElectronicJournal::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSElectronicJournal::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSElectronicJournal::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::FlagWhenIdle() const
{
    QVariant qax_result = property("FlagWhenIdle");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetFlagWhenIdle(bool value){ setProperty("FlagWhenIdle", QVariant(value)); }

inline bool IOPOSElectronicJournal::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline qlonglong IOPOSElectronicJournal::MediumFreeSpace() const
{
    QVariant qax_result = property("MediumFreeSpace");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline QString IOPOSElectronicJournal::MediumID() const
{
    QVariant qax_result = property("MediumID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::MediumIsAvailable() const
{
    QVariant qax_result = property("MediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline qlonglong IOPOSElectronicJournal::MediumSize() const
{
    QVariant qax_result = property("MediumSize");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline int IOPOSElectronicJournal::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSElectronicJournal::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSElectronicJournal::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSElectronicJournal::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal::Station() const
{
    QVariant qax_result = property("Station");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetStation(int value){ setProperty("Station", QVariant(value)); }

inline bool IOPOSElectronicJournal::StorageEnabled() const
{
    QVariant qax_result = property("StorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetStorageEnabled(bool value){ setProperty("StorageEnabled", QVariant(value)); }

inline bool IOPOSElectronicJournal::Suspended() const
{
    QVariant qax_result = property("Suspended");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal::WaterMark() const
{
    QVariant qax_result = property("WaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal::SetWaterMark(bool value){ setProperty("WaterMark", QVariant(value)); }

inline int IOPOSElectronicJournal::AddMarker(const QString& Marker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::CancelPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::CancelQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::EraseMedium()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::InitializeMedium(const QString& MediumID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MediumID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::PrintContent(const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::PrintContentFile(const QString& FileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ResumePrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::ResumeQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::RetrieveCurrentMarker(int MarkerType, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&SessionNumber, (void*)&DocumentNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&DateTime, (void*)&MarkerNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker, (void*)&pDateTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline void IOPOSElectronicJournal::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void IOPOSElectronicJournal::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void IOPOSElectronicJournal::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void IOPOSElectronicJournal::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline int IOPOSElectronicJournal::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline void IOPOSElectronicJournal::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline int IOPOSElectronicJournal::SuspendPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::SuspendQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}


inline bool IOPOSElectronicJournal_1_10::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline bool IOPOSElectronicJournal_1_10::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSElectronicJournal_1_10::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSElectronicJournal_1_10::CapAddMarker() const
{
    QVariant qax_result = property("CapAddMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapErasableMedium() const
{
    QVariant qax_result = property("CapErasableMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapInitializeMedium() const
{
    QVariant qax_result = property("CapInitializeMedium");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapMediumIsAvailable() const
{
    QVariant qax_result = property("CapMediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapPrintContent() const
{
    QVariant qax_result = property("CapPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapPrintContentFile() const
{
    QVariant qax_result = property("CapPrintContentFile");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapRetrieveCurrentMarker() const
{
    QVariant qax_result = property("CapRetrieveCurrentMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapRetrieveMarker() const
{
    QVariant qax_result = property("CapRetrieveMarker");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapRetrieveMarkerByDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkerByDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapRetrieveMarkersDateTime() const
{
    QVariant qax_result = property("CapRetrieveMarkersDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::CapStation() const
{
    QVariant qax_result = property("CapStation");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapStorageEnabled() const
{
    QVariant qax_result = property("CapStorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapSuspendPrintContent() const
{
    QVariant qax_result = property("CapSuspendPrintContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapSuspendQueryContent() const
{
    QVariant qax_result = property("CapSuspendQueryContent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::CapWaterMark() const
{
    QVariant qax_result = property("CapWaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSElectronicJournal_1_10::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSElectronicJournal_1_10::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSElectronicJournal_1_10::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSElectronicJournal_1_10::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::FlagWhenIdle() const
{
    QVariant qax_result = property("FlagWhenIdle");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetFlagWhenIdle(bool value){ setProperty("FlagWhenIdle", QVariant(value)); }

inline bool IOPOSElectronicJournal_1_10::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline qlonglong IOPOSElectronicJournal_1_10::MediumFreeSpace() const
{
    QVariant qax_result = property("MediumFreeSpace");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline QString IOPOSElectronicJournal_1_10::MediumID() const
{
    QVariant qax_result = property("MediumID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::MediumIsAvailable() const
{
    QVariant qax_result = property("MediumIsAvailable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline qlonglong IOPOSElectronicJournal_1_10::MediumSize() const
{
    QVariant qax_result = property("MediumSize");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSElectronicJournal_1_10::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSElectronicJournal_1_10::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSElectronicJournal_1_10::Station() const
{
    QVariant qax_result = property("Station");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetStation(int value){ setProperty("Station", QVariant(value)); }

inline bool IOPOSElectronicJournal_1_10::StorageEnabled() const
{
    QVariant qax_result = property("StorageEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetStorageEnabled(bool value){ setProperty("StorageEnabled", QVariant(value)); }

inline bool IOPOSElectronicJournal_1_10::Suspended() const
{
    QVariant qax_result = property("Suspended");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSElectronicJournal_1_10::WaterMark() const
{
    QVariant qax_result = property("WaterMark");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSElectronicJournal_1_10::SetWaterMark(bool value){ setProperty("WaterMark", QVariant(value)); }

inline int IOPOSElectronicJournal_1_10::AddMarker(const QString& Marker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::CancelPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::CancelQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::EraseMedium()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::InitializeMedium(const QString& MediumID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MediumID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::PrintContent(const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::PrintContentFile(const QString& FileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::QueryContent(const QString& FileName, const QString& FromMarker, const QString& ToMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&FromMarker, (void*)&ToMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ResumePrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::ResumeQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::RetrieveCurrentMarker(int MarkerType, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::RetrieveMarker(int MarkerType, int SessionNumber, int DocumentNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&SessionNumber, (void*)&DocumentNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::RetrieveMarkerByDateTime(int MarkerType, const QString& DateTime, const QString& MarkerNumber, QString& pMarker)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MarkerType, (void*)&DateTime, (void*)&MarkerNumber, (void*)&pMarker};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::RetrieveMarkersDateTime(const QString& Marker, QString& pDateTime)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Marker, (void*)&pDateTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline void IOPOSElectronicJournal_1_10::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void IOPOSElectronicJournal_1_10::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void IOPOSElectronicJournal_1_10::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void IOPOSElectronicJournal_1_10::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline int IOPOSElectronicJournal_1_10::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline void IOPOSElectronicJournal_1_10::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline int IOPOSElectronicJournal_1_10::SuspendPrintContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::SuspendQueryContent()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int IOPOSElectronicJournal_1_10::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSElectronicJournal *t)
{ Q_ASSERT(!t); return new OPOS::OPOSElectronicJournal; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSElectronicJournal *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSElectronicJournal; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSElectronicJournal_1_10 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSElectronicJournal_1_10; }

#endif

