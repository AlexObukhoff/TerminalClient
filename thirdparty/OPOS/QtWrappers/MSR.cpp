/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSMSR.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\MSR.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSMSR[] = {

 // content:
       1,       // revision
       0,       // classname
       7,    10, // classinfo
       47,    24, // methods
       74,    259, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       14, 32, 
       48, 60, 
       69, 81, 
       95, 107, 
       121, 133, 
       146, 158, 
       171, 183, 

 // signals: signature, parameters, type, tag, flags
       196, 211, 218, 219, 5,
       220, 253, 279, 280, 5,
       281, 310, 366, 367, 5,
       368, 391, 396, 397, 5,
       398, 437, 459, 460, 5,
       461, 486, 491, 492, 5,
       493, 519, 534, 535, 5,

 // slots: signature, parameters, type, tag, flags
       536, 564, 573, 577, 9,
       578, 595, 601, 605, 9,
       606, 623, 631, 635, 9,
       636, 649, 650, 654, 9,
       655, 678, 679, 683, 9,
       684, 692, 693, 697, 9,
       698, 735, 760, 764, 9,
       765, 795, 804, 808, 9,
       809, 837, 859, 863, 9,
       864, 878, 889, 893, 9,
       894, 910, 911, 915, 9,
       916, 941, 958, 962, 9,
       963, 1002, 1014, 1018, 9,
       1019, 1062, 1073, 1077, 9,
       1078, 1107, 1125, 1129, 9,
       1130, 1142, 1149, 1150, 9,
       1151, 1181, 1207, 1208, 9,
       1209, 1235, 1291, 1292, 9,
       1293, 1320, 1329, 1330, 9,
       1331, 1345, 1346, 1350, 9,
       1351, 1371, 1376, 1377, 9,
       1378, 1399, 1411, 1412, 9,
       1413, 1438, 1455, 1456, 9,
       1457, 1489, 1513, 1514, 9,
       1515, 1541, 1558, 1559, 9,
       1560, 1580, 1591, 1592, 9,
       1593, 1616, 1630, 1631, 9,
       1632, 1659, 1678, 1679, 9,
       1680, 1702, 1715, 1716, 9,
       1717, 1742, 1758, 1759, 9,
       1760, 1786, 1803, 1804, 9,
       1805, 1825, 1837, 1838, 9,
       1839, 1860, 1873, 1874, 9,
       1875, 1897, 1911, 1912, 9,
       1913, 1940, 1958, 1959, 9,
       1960, 1986, 2000, 2001, 9,
       2002, 2026, 2043, 2047, 9,
       2048, 2075, 2087, 2091, 9,
       2092, 2118, 2135, 2139, 9,
       2140, 2166, 2179, 2183, 9,

 // properties: name, type, flags
       2184, 2198, 0x0a005001, 		 // QString AccountNumber
       2206, 2236, 0x0a005001, 		 // QString AdditionalSecurityInformation
       2244, 2256, 0x01015003, 		 // bool AutoDisable
       2261, 2278, 0x02015003, 		 // int BinaryConversion
       2282, 2304, 0x0a005001, 		 // QString CapCardAuthentication
       2312, 2338, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2343, 2361, 0x02005001, 		 // int CapDataEncryption
       2365, 2389, 0x02005001, 		 // int CapDeviceAuthentication
       2393, 2400, 0x01005001, 		 // bool CapISO
       2405, 2415, 0x01005001, 		 // bool CapJISOne
       2420, 2430, 0x01005001, 		 // bool CapJISTwo
       2435, 2453, 0x02005001, 		 // int CapPowerReporting
       2457, 2480, 0x01005001, 		 // bool CapStatisticsReporting
       2485, 2505, 0x01005001, 		 // bool CapTrackDataMasking
       2510, 2531, 0x01005001, 		 // bool CapTransmitSentinels
       2536, 2554, 0x01005001, 		 // bool CapUpdateFirmware
       2559, 2579, 0x01005001, 		 // bool CapUpdateStatistics
       2584, 2602, 0x02005001, 		 // int CapWritableTracks
       2606, 2629, 0x0a005001, 		 // QString CardAuthenticationData
       2637, 2666, 0x02005001, 		 // int CardAuthenticationDataLength
       2670, 2687, 0x0a005001, 		 // QString CardPropertyList
       2695, 2704, 0x0a005001, 		 // QString CardType
       2712, 2725, 0x0a005001, 		 // QString CardTypeList
       2733, 2749, 0x0a005001, 		 // QString CheckHealthText
       2757, 2765, 0x01005001, 		 // bool Claimed
       2770, 2795, 0x0a005001, 		 // QString ControlObjectDescription
       2803, 2824, 0x02005001, 		 // int ControlObjectVersion
       2828, 2838, 0x02005001, 		 // int DataCount
       2842, 2866, 0x02015003, 		 // int DataEncryptionAlgorithm
       2870, 2887, 0x01015003, 		 // bool DataEventEnabled
       2892, 2903, 0x01015003, 		 // bool DecodeData
       2908, 2928, 0x01005001, 		 // bool DeviceAuthenticated
       2933, 2962, 0x02005001, 		 // int DeviceAuthenticationProtocol
       2966, 2984, 0x0a005001, 		 // QString DeviceDescription
       2992, 3006, 0x01015003, 		 // bool DeviceEnabled
       3011, 3022, 0x0a005001, 		 // QString DeviceName
       3030, 3048, 0x02005001, 		 // int EncodingMaxLength
       3052, 3071, 0x02015003, 		 // int ErrorReportingType
       3075, 3090, 0x0a005001, 		 // QString ExpirationDate
       3098, 3108, 0x0a005001, 		 // QString FirstName
       3116, 3129, 0x01015003, 		 // bool FreezeEvents
       3134, 3148, 0x0a005001, 		 // QString MiddleInitial
       3156, 3167, 0x02005001, 		 // int OpenResult
       3171, 3187, 0x01015003, 		 // bool ParseDecodeData
       3192, 3209, 0x01015003, 		 // bool ParseDecodedData
       3214, 3226, 0x02015003, 		 // int PowerNotify
       3230, 3241, 0x02005001, 		 // int PowerState
       3245, 3256, 0x02005001, 		 // int ResultCode
       3260, 3279, 0x02005001, 		 // int ResultCodeExtended
       3283, 3295, 0x0a005001, 		 // QString ServiceCode
       3303, 3328, 0x0a005001, 		 // QString ServiceObjectDescription
       3336, 3357, 0x02005001, 		 // int ServiceObjectVersion
       3361, 3367, 0x02005001, 		 // int State
       3371, 3378, 0x0a005001, 		 // QString Suffix
       3386, 3394, 0x0a005001, 		 // QString Surname
       3402, 3408, 0x0a005001, 		 // QString Title
       3416, 3427, 0x0a005001, 		 // QString Track1Data
       3435, 3459, 0x0a005001, 		 // QString Track1DiscretionaryData
       3467, 3487, 0x0a005001, 		 // QString Track1EncryptedData
       3495, 3521, 0x02005001, 		 // int Track1EncryptedDataLength
       3525, 3536, 0x0a005001, 		 // QString Track2Data
       3544, 3568, 0x0a005001, 		 // QString Track2DiscretionaryData
       3576, 3596, 0x0a005001, 		 // QString Track2EncryptedData
       3604, 3630, 0x02005001, 		 // int Track2EncryptedDataLength
       3634, 3645, 0x0a005001, 		 // QString Track3Data
       3653, 3673, 0x0a005001, 		 // QString Track3EncryptedData
       3681, 3707, 0x02005001, 		 // int Track3EncryptedDataLength
       3711, 3722, 0x0a005001, 		 // QString Track4Data
       3730, 3750, 0x0a005001, 		 // QString Track4EncryptedData
       3758, 3784, 0x02005001, 		 // int Track4EncryptedDataLength
       3788, 3801, 0x02015003, 		 // int TracksToRead
       3805, 3819, 0x02015003, 		 // int TracksToWrite
       3823, 3841, 0x01015003, 		 // bool TransmitSentinels
       3846, 3860, 0x0a015003, 		 // QString WriteCardType

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSMSR() {
    static const char stringdata0[] = {
    "OPOS::OPOSMSR\0"
    "Event Interface 6\0_IOPOSMSREvents\0Interface 0\0IOPOSMSR\0Interface 1\0IOPOSMSR_1_12\0Interface 2\0IOPOSMSR_1_10\0Interface 3\0IOPOSMSR_1_9\0Interface 4\0IOPOSMSR_1_8\0Interface 5\0IOPOSMSR_1_5\0"
    "DataEvent(int)\0Status\0"
    "\0\0DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0"
    "code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AuthenticateDevice(QString)\0Response\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DeauthenticateDevice(QString)\0Response\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0"
    "int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveCardProperty(QString,QString&)\0Name,pValue\0int\0\0RetrieveDeviceAuthenticationData(QString&)\0"
    "pChallenge\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEncryptionAlgorithm(int)\0DataEncryptionAlgorithm\0"
    "\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0ErrorReportingType\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0TracksToRead\0\0\0SetTracksToWrite(int)\0TracksToWrite\0\0\0SetTransmitSentinels(bool)\0"
    "TransmitSentinels\0\0\0SetWriteCardType(QString)\0WriteCardType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateKey(QString,QString)\0Key,KeyName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTracks(QVariant,int)\0"
    "Data,Timeout\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0AutoDisable\0bool\0BinaryConversion\0int\0CapCardAuthentication\0QString\0CapCompareFirmwareVersion\0bool\0CapDataEncryption\0int\0CapDeviceAuthentication\0"
    "int\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapTrackDataMasking\0bool\0CapTransmitSentinels\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWritableTracks\0"
    "int\0CardAuthenticationData\0QString\0CardAuthenticationDataLength\0int\0CardPropertyList\0QString\0CardType\0QString\0CardTypeList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0"
    "ControlObjectVersion\0int\0DataCount\0int\0DataEncryptionAlgorithm\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceAuthenticated\0bool\0DeviceAuthenticationProtocol\0int\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0EncodingMaxLength\0int\0ErrorReportingType\0int\0ExpirationDate\0QString\0FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0"
    "bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceCode\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0"
    "Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track1EncryptedData\0QString\0Track1EncryptedDataLength\0int\0Track2Data\0QString\0Track2DiscretionaryData\0QString\0Track2EncryptedData\0QString\0Track2EncryptedDataLength\0"
    "int\0Track3Data\0QString\0Track3EncryptedData\0QString\0Track3EncryptedDataLength\0int\0Track4Data\0QString\0Track4EncryptedData\0QString\0Track4EncryptedDataLength\0int\0TracksToRead\0int\0TracksToWrite\0int\0TransmitSentinels\0"
    "bool\0WriteCardType\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSMSR::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSMSR(),
qt_meta_data_OPOS__OPOSMSR }
};

void *OPOSMSR::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSMSR()))
        return static_cast<void*>(const_cast<OPOSMSR*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       43,    10, // methods
       75,    225, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       15, 54, 76, 77, 5,
       78, 103, 108, 109, 5,
       110, 136, 151, 152, 5,

 // slots: signature, parameters, type, tag, flags
       153, 181, 190, 194, 9,
       195, 212, 218, 222, 9,
       223, 240, 248, 252, 9,
       253, 266, 267, 271, 9,
       272, 295, 296, 300, 9,
       301, 309, 310, 314, 9,
       315, 352, 377, 381, 9,
       382, 412, 421, 425, 9,
       426, 454, 476, 480, 9,
       481, 495, 506, 510, 9,
       511, 527, 528, 532, 9,
       533, 558, 575, 579, 9,
       580, 619, 631, 635, 9,
       636, 679, 690, 694, 9,
       695, 724, 742, 746, 9,
       747, 759, 766, 767, 9,
       768, 798, 824, 825, 9,
       826, 852, 908, 909, 9,
       910, 937, 946, 947, 9,
       948, 962, 963, 967, 9,
       968, 988, 993, 994, 9,
       995, 1016, 1028, 1029, 9,
       1030, 1055, 1072, 1073, 9,
       1074, 1106, 1130, 1131, 9,
       1132, 1158, 1175, 1176, 9,
       1177, 1197, 1208, 1209, 9,
       1210, 1233, 1247, 1248, 9,
       1249, 1276, 1295, 1296, 9,
       1297, 1319, 1332, 1333, 9,
       1334, 1359, 1375, 1376, 9,
       1377, 1403, 1420, 1421, 9,
       1422, 1442, 1454, 1455, 9,
       1456, 1477, 1490, 1491, 9,
       1492, 1514, 1528, 1529, 9,
       1530, 1557, 1575, 1576, 9,
       1577, 1603, 1617, 1618, 9,
       1619, 1643, 1660, 1664, 9,
       1665, 1692, 1704, 1708, 9,
       1709, 1735, 1752, 1756, 9,
       1757, 1783, 1796, 1800, 9,

 // properties: name, type, flags
       1801, 1815, 0x0a005001, 		 // QString AccountNumber
       1823, 1853, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1861, 1873, 0x01015003, 		 // bool AutoDisable
       1878, 1895, 0x02015003, 		 // int BinaryConversion
       1899, 1921, 0x0a005001, 		 // QString CapCardAuthentication
       1929, 1955, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1960, 1978, 0x02005001, 		 // int CapDataEncryption
       1982, 2006, 0x02005001, 		 // int CapDeviceAuthentication
       2010, 2017, 0x01005001, 		 // bool CapISO
       2022, 2032, 0x01005001, 		 // bool CapJISOne
       2037, 2047, 0x01005001, 		 // bool CapJISTwo
       2052, 2070, 0x02005001, 		 // int CapPowerReporting
       2074, 2097, 0x01005001, 		 // bool CapStatisticsReporting
       2102, 2122, 0x01005001, 		 // bool CapTrackDataMasking
       2127, 2148, 0x01005001, 		 // bool CapTransmitSentinels
       2153, 2171, 0x01005001, 		 // bool CapUpdateFirmware
       2176, 2196, 0x01005001, 		 // bool CapUpdateStatistics
       2201, 2219, 0x02005001, 		 // int CapWritableTracks
       2223, 2246, 0x0a005001, 		 // QString CardAuthenticationData
       2254, 2283, 0x02005001, 		 // int CardAuthenticationDataLength
       2287, 2304, 0x0a005001, 		 // QString CardPropertyList
       2312, 2321, 0x0a005001, 		 // QString CardType
       2329, 2342, 0x0a005001, 		 // QString CardTypeList
       2350, 2366, 0x0a005001, 		 // QString CheckHealthText
       2374, 2382, 0x01005001, 		 // bool Claimed
       2387, 2412, 0x0a005001, 		 // QString ControlObjectDescription
       2420, 2441, 0x02005001, 		 // int ControlObjectVersion
       2445, 2455, 0x02005001, 		 // int DataCount
       2459, 2483, 0x02015003, 		 // int DataEncryptionAlgorithm
       2487, 2504, 0x01015003, 		 // bool DataEventEnabled
       2509, 2520, 0x01015003, 		 // bool DecodeData
       2525, 2545, 0x01005001, 		 // bool DeviceAuthenticated
       2550, 2579, 0x02005001, 		 // int DeviceAuthenticationProtocol
       2583, 2601, 0x0a005001, 		 // QString DeviceDescription
       2609, 2623, 0x01015003, 		 // bool DeviceEnabled
       2628, 2639, 0x0a005001, 		 // QString DeviceName
       2647, 2665, 0x02005001, 		 // int EncodingMaxLength
       2669, 2688, 0x02015003, 		 // int ErrorReportingType
       2692, 2707, 0x0a005001, 		 // QString ExpirationDate
       2715, 2725, 0x0a005001, 		 // QString FirstName
       2733, 2746, 0x01015003, 		 // bool FreezeEvents
       2751, 2765, 0x0a005001, 		 // QString MiddleInitial
       2773, 2784, 0x02005001, 		 // int OpenResult
       2788, 2804, 0x01015003, 		 // bool ParseDecodeData
       2809, 2826, 0x01015003, 		 // bool ParseDecodedData
       2831, 2843, 0x02015003, 		 // int PowerNotify
       2847, 2858, 0x02005001, 		 // int PowerState
       2862, 2873, 0x02005001, 		 // int ResultCode
       2877, 2896, 0x02005001, 		 // int ResultCodeExtended
       2900, 2912, 0x0a005001, 		 // QString ServiceCode
       2920, 2945, 0x0a005001, 		 // QString ServiceObjectDescription
       2953, 2974, 0x02005001, 		 // int ServiceObjectVersion
       2978, 2984, 0x02005001, 		 // int State
       2988, 2995, 0x0a005001, 		 // QString Suffix
       3003, 3011, 0x0a005001, 		 // QString Surname
       3019, 3025, 0x0a005001, 		 // QString Title
       3033, 3044, 0x0a005001, 		 // QString Track1Data
       3052, 3076, 0x0a005001, 		 // QString Track1DiscretionaryData
       3084, 3104, 0x0a005001, 		 // QString Track1EncryptedData
       3112, 3138, 0x02005001, 		 // int Track1EncryptedDataLength
       3142, 3153, 0x0a005001, 		 // QString Track2Data
       3161, 3185, 0x0a005001, 		 // QString Track2DiscretionaryData
       3193, 3213, 0x0a005001, 		 // QString Track2EncryptedData
       3221, 3247, 0x02005001, 		 // int Track2EncryptedDataLength
       3251, 3262, 0x0a005001, 		 // QString Track3Data
       3270, 3290, 0x0a005001, 		 // QString Track3EncryptedData
       3298, 3324, 0x02005001, 		 // int Track3EncryptedDataLength
       3328, 3339, 0x0a005001, 		 // QString Track4Data
       3347, 3367, 0x0a005001, 		 // QString Track4EncryptedData
       3375, 3401, 0x02005001, 		 // int Track4EncryptedDataLength
       3405, 3418, 0x02015003, 		 // int TracksToRead
       3422, 3436, 0x02015003, 		 // int TracksToWrite
       3440, 3458, 0x01015003, 		 // bool TransmitSentinels
       3463, 3477, 0x0a015003, 		 // QString WriteCardType
       3485, 3493, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AuthenticateDevice(QString)\0Response\0int\0\0CheckHealth(int)\0Level\0"
    "int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DeauthenticateDevice(QString)\0Response\0"
    "int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveCardProperty(QString,QString&)\0Name,pValue\0"
    "int\0\0RetrieveDeviceAuthenticationData(QString&)\0pChallenge\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDataEncryptionAlgorithm(int)\0DataEncryptionAlgorithm\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0"
    "ErrorReportingType\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0"
    "TracksToRead\0\0\0SetTracksToWrite(int)\0TracksToWrite\0\0\0SetTransmitSentinels(bool)\0TransmitSentinels\0\0\0SetWriteCardType(QString)\0WriteCardType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateKey(QString,QString)\0"
    "Key,KeyName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTracks(QVariant,int)\0Data,Timeout\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0AutoDisable\0bool\0BinaryConversion\0"
    "int\0CapCardAuthentication\0QString\0CapCompareFirmwareVersion\0bool\0CapDataEncryption\0int\0CapDeviceAuthentication\0int\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0"
    "bool\0CapTrackDataMasking\0bool\0CapTransmitSentinels\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWritableTracks\0int\0CardAuthenticationData\0QString\0CardAuthenticationDataLength\0int\0CardPropertyList\0"
    "QString\0CardType\0QString\0CardTypeList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEncryptionAlgorithm\0int\0DataEventEnabled\0bool\0"
    "DecodeData\0bool\0DeviceAuthenticated\0bool\0DeviceAuthenticationProtocol\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncodingMaxLength\0int\0ErrorReportingType\0int\0ExpirationDate\0QString\0"
    "FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceCode\0QString\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track1EncryptedData\0QString\0Track1EncryptedDataLength\0"
    "int\0Track2Data\0QString\0Track2DiscretionaryData\0QString\0Track2EncryptedData\0QString\0Track2EncryptedDataLength\0int\0Track3Data\0QString\0Track3EncryptedData\0QString\0Track3EncryptedDataLength\0int\0Track4Data\0"
    "QString\0Track4EncryptedData\0QString\0Track4EncryptedDataLength\0int\0TracksToRead\0int\0TracksToWrite\0int\0TransmitSentinels\0bool\0WriteCardType\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR(),
qt_meta_data_OPOS__IOPOSMSR }
};

void *IOPOSMSR::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR()))
        return static_cast<void*>(const_cast<IOPOSMSR*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       43,    10, // methods
       75,    225, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 186, 195, 199, 9,
       200, 217, 223, 227, 9,
       228, 245, 253, 257, 9,
       258, 271, 272, 276, 9,
       277, 300, 301, 305, 9,
       306, 314, 315, 319, 9,
       320, 357, 382, 386, 9,
       387, 417, 426, 430, 9,
       431, 459, 481, 485, 9,
       486, 500, 511, 515, 9,
       516, 532, 533, 537, 9,
       538, 563, 580, 584, 9,
       585, 624, 636, 640, 9,
       641, 684, 695, 699, 9,
       700, 729, 747, 751, 9,
       752, 764, 771, 772, 9,
       773, 803, 829, 830, 9,
       831, 857, 913, 914, 9,
       915, 942, 951, 952, 9,
       953, 967, 968, 972, 9,
       973, 993, 998, 999, 9,
       1000, 1021, 1033, 1034, 9,
       1035, 1060, 1077, 1078, 9,
       1079, 1111, 1135, 1136, 9,
       1137, 1163, 1180, 1181, 9,
       1182, 1202, 1213, 1214, 9,
       1215, 1238, 1252, 1253, 9,
       1254, 1281, 1300, 1301, 9,
       1302, 1324, 1337, 1338, 9,
       1339, 1364, 1380, 1381, 9,
       1382, 1408, 1425, 1426, 9,
       1427, 1447, 1459, 1460, 9,
       1461, 1482, 1495, 1496, 9,
       1497, 1519, 1533, 1534, 9,
       1535, 1562, 1580, 1581, 9,
       1582, 1608, 1622, 1623, 9,
       1624, 1648, 1665, 1669, 9,
       1670, 1697, 1709, 1713, 9,
       1714, 1740, 1757, 1761, 9,
       1762, 1788, 1801, 1805, 9,

 // properties: name, type, flags
       1806, 1820, 0x0a005001, 		 // QString AccountNumber
       1828, 1858, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1866, 1878, 0x01015003, 		 // bool AutoDisable
       1883, 1900, 0x02015003, 		 // int BinaryConversion
       1904, 1926, 0x0a005001, 		 // QString CapCardAuthentication
       1934, 1960, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1965, 1983, 0x02005001, 		 // int CapDataEncryption
       1987, 2011, 0x02005001, 		 // int CapDeviceAuthentication
       2015, 2022, 0x01005001, 		 // bool CapISO
       2027, 2037, 0x01005001, 		 // bool CapJISOne
       2042, 2052, 0x01005001, 		 // bool CapJISTwo
       2057, 2075, 0x02005001, 		 // int CapPowerReporting
       2079, 2102, 0x01005001, 		 // bool CapStatisticsReporting
       2107, 2127, 0x01005001, 		 // bool CapTrackDataMasking
       2132, 2153, 0x01005001, 		 // bool CapTransmitSentinels
       2158, 2176, 0x01005001, 		 // bool CapUpdateFirmware
       2181, 2201, 0x01005001, 		 // bool CapUpdateStatistics
       2206, 2224, 0x02005001, 		 // int CapWritableTracks
       2228, 2251, 0x0a005001, 		 // QString CardAuthenticationData
       2259, 2288, 0x02005001, 		 // int CardAuthenticationDataLength
       2292, 2309, 0x0a005001, 		 // QString CardPropertyList
       2317, 2326, 0x0a005001, 		 // QString CardType
       2334, 2347, 0x0a005001, 		 // QString CardTypeList
       2355, 2371, 0x0a005001, 		 // QString CheckHealthText
       2379, 2387, 0x01005001, 		 // bool Claimed
       2392, 2417, 0x0a005001, 		 // QString ControlObjectDescription
       2425, 2446, 0x02005001, 		 // int ControlObjectVersion
       2450, 2460, 0x02005001, 		 // int DataCount
       2464, 2488, 0x02015003, 		 // int DataEncryptionAlgorithm
       2492, 2509, 0x01015003, 		 // bool DataEventEnabled
       2514, 2525, 0x01015003, 		 // bool DecodeData
       2530, 2550, 0x01005001, 		 // bool DeviceAuthenticated
       2555, 2584, 0x02005001, 		 // int DeviceAuthenticationProtocol
       2588, 2606, 0x0a005001, 		 // QString DeviceDescription
       2614, 2628, 0x01015003, 		 // bool DeviceEnabled
       2633, 2644, 0x0a005001, 		 // QString DeviceName
       2652, 2670, 0x02005001, 		 // int EncodingMaxLength
       2674, 2693, 0x02015003, 		 // int ErrorReportingType
       2697, 2712, 0x0a005001, 		 // QString ExpirationDate
       2720, 2730, 0x0a005001, 		 // QString FirstName
       2738, 2751, 0x01015003, 		 // bool FreezeEvents
       2756, 2770, 0x0a005001, 		 // QString MiddleInitial
       2778, 2789, 0x02005001, 		 // int OpenResult
       2793, 2809, 0x01015003, 		 // bool ParseDecodeData
       2814, 2831, 0x01015003, 		 // bool ParseDecodedData
       2836, 2848, 0x02015003, 		 // int PowerNotify
       2852, 2863, 0x02005001, 		 // int PowerState
       2867, 2878, 0x02005001, 		 // int ResultCode
       2882, 2901, 0x02005001, 		 // int ResultCodeExtended
       2905, 2917, 0x0a005001, 		 // QString ServiceCode
       2925, 2950, 0x0a005001, 		 // QString ServiceObjectDescription
       2958, 2979, 0x02005001, 		 // int ServiceObjectVersion
       2983, 2989, 0x02005001, 		 // int State
       2993, 3000, 0x0a005001, 		 // QString Suffix
       3008, 3016, 0x0a005001, 		 // QString Surname
       3024, 3030, 0x0a005001, 		 // QString Title
       3038, 3049, 0x0a005001, 		 // QString Track1Data
       3057, 3081, 0x0a005001, 		 // QString Track1DiscretionaryData
       3089, 3109, 0x0a005001, 		 // QString Track1EncryptedData
       3117, 3143, 0x02005001, 		 // int Track1EncryptedDataLength
       3147, 3158, 0x0a005001, 		 // QString Track2Data
       3166, 3190, 0x0a005001, 		 // QString Track2DiscretionaryData
       3198, 3218, 0x0a005001, 		 // QString Track2EncryptedData
       3226, 3252, 0x02005001, 		 // int Track2EncryptedDataLength
       3256, 3267, 0x0a005001, 		 // QString Track3Data
       3275, 3295, 0x0a005001, 		 // QString Track3EncryptedData
       3303, 3329, 0x02005001, 		 // int Track3EncryptedDataLength
       3333, 3344, 0x0a005001, 		 // QString Track4Data
       3352, 3372, 0x0a005001, 		 // QString Track4EncryptedData
       3380, 3406, 0x02005001, 		 // int Track4EncryptedDataLength
       3410, 3423, 0x02015003, 		 // int TracksToRead
       3427, 3441, 0x02015003, 		 // int TracksToWrite
       3445, 3463, 0x01015003, 		 // bool TransmitSentinels
       3468, 3482, 0x0a015003, 		 // QString WriteCardType
       3490, 3498, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AuthenticateDevice(QString)\0Response\0int\0\0CheckHealth(int)\0Level\0"
    "int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DeauthenticateDevice(QString)\0Response\0"
    "int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveCardProperty(QString,QString&)\0Name,pValue\0"
    "int\0\0RetrieveDeviceAuthenticationData(QString&)\0pChallenge\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDataEncryptionAlgorithm(int)\0DataEncryptionAlgorithm\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0"
    "ErrorReportingType\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0"
    "TracksToRead\0\0\0SetTracksToWrite(int)\0TracksToWrite\0\0\0SetTransmitSentinels(bool)\0TransmitSentinels\0\0\0SetWriteCardType(QString)\0WriteCardType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateKey(QString,QString)\0"
    "Key,KeyName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTracks(QVariant,int)\0Data,Timeout\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0AutoDisable\0bool\0BinaryConversion\0"
    "int\0CapCardAuthentication\0QString\0CapCompareFirmwareVersion\0bool\0CapDataEncryption\0int\0CapDeviceAuthentication\0int\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0"
    "bool\0CapTrackDataMasking\0bool\0CapTransmitSentinels\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWritableTracks\0int\0CardAuthenticationData\0QString\0CardAuthenticationDataLength\0int\0CardPropertyList\0"
    "QString\0CardType\0QString\0CardTypeList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEncryptionAlgorithm\0int\0DataEventEnabled\0bool\0"
    "DecodeData\0bool\0DeviceAuthenticated\0bool\0DeviceAuthenticationProtocol\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncodingMaxLength\0int\0ErrorReportingType\0int\0ExpirationDate\0QString\0"
    "FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceCode\0QString\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track1EncryptedData\0QString\0Track1EncryptedDataLength\0"
    "int\0Track2Data\0QString\0Track2DiscretionaryData\0QString\0Track2EncryptedData\0QString\0Track2EncryptedDataLength\0int\0Track3Data\0QString\0Track3EncryptedData\0QString\0Track3EncryptedDataLength\0int\0Track4Data\0"
    "QString\0Track4EncryptedData\0QString\0Track4EncryptedDataLength\0int\0TracksToRead\0int\0TracksToWrite\0int\0TransmitSentinels\0bool\0WriteCardType\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR_1_12(),
qt_meta_data_OPOS__IOPOSMSR_1_12 }
};

void *IOPOSMSR_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR_1_12()))
        return static_cast<void*>(const_cast<IOPOSMSR_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR_1_10[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       36,    10, // methods
       53,    190, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 175, 181, 185, 9,
       186, 203, 211, 215, 9,
       216, 229, 230, 234, 9,
       235, 258, 259, 263, 9,
       264, 272, 273, 277, 9,
       278, 315, 340, 344, 9,
       345, 373, 395, 399, 9,
       400, 414, 425, 429, 9,
       430, 446, 447, 451, 9,
       452, 477, 494, 498, 9,
       499, 528, 546, 550, 9,
       551, 563, 570, 571, 9,
       572, 602, 628, 629, 9,
       630, 656, 712, 713, 9,
       714, 741, 750, 751, 9,
       752, 766, 767, 771, 9,
       772, 792, 797, 798, 9,
       799, 820, 832, 833, 9,
       834, 859, 876, 877, 9,
       878, 904, 921, 922, 9,
       923, 943, 954, 955, 9,
       956, 979, 993, 994, 9,
       995, 1022, 1041, 1042, 9,
       1043, 1065, 1078, 1079, 9,
       1080, 1105, 1121, 1122, 9,
       1123, 1149, 1166, 1167, 9,
       1168, 1188, 1200, 1201, 9,
       1202, 1223, 1236, 1237, 9,
       1238, 1260, 1274, 1275, 9,
       1276, 1303, 1321, 1322, 9,
       1323, 1347, 1364, 1368, 9,
       1369, 1395, 1412, 1416, 9,
       1417, 1443, 1456, 1460, 9,

 // properties: name, type, flags
       1461, 1475, 0x0a005001, 		 // QString AccountNumber
       1483, 1495, 0x01015003, 		 // bool AutoDisable
       1500, 1517, 0x02015003, 		 // int BinaryConversion
       1521, 1547, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1552, 1559, 0x01005001, 		 // bool CapISO
       1564, 1574, 0x01005001, 		 // bool CapJISOne
       1579, 1589, 0x01005001, 		 // bool CapJISTwo
       1594, 1612, 0x02005001, 		 // int CapPowerReporting
       1616, 1639, 0x01005001, 		 // bool CapStatisticsReporting
       1644, 1665, 0x01005001, 		 // bool CapTransmitSentinels
       1670, 1688, 0x01005001, 		 // bool CapUpdateFirmware
       1693, 1713, 0x01005001, 		 // bool CapUpdateStatistics
       1718, 1736, 0x02005001, 		 // int CapWritableTracks
       1740, 1756, 0x0a005001, 		 // QString CheckHealthText
       1764, 1772, 0x01005001, 		 // bool Claimed
       1777, 1802, 0x0a005001, 		 // QString ControlObjectDescription
       1810, 1831, 0x02005001, 		 // int ControlObjectVersion
       1835, 1845, 0x02005001, 		 // int DataCount
       1849, 1866, 0x01015003, 		 // bool DataEventEnabled
       1871, 1882, 0x01015003, 		 // bool DecodeData
       1887, 1905, 0x0a005001, 		 // QString DeviceDescription
       1913, 1927, 0x01015003, 		 // bool DeviceEnabled
       1932, 1943, 0x0a005001, 		 // QString DeviceName
       1951, 1969, 0x02005001, 		 // int EncodingMaxLength
       1973, 1992, 0x02015003, 		 // int ErrorReportingType
       1996, 2011, 0x0a005001, 		 // QString ExpirationDate
       2019, 2029, 0x0a005001, 		 // QString FirstName
       2037, 2050, 0x01015003, 		 // bool FreezeEvents
       2055, 2069, 0x0a005001, 		 // QString MiddleInitial
       2077, 2088, 0x02005001, 		 // int OpenResult
       2092, 2108, 0x01015003, 		 // bool ParseDecodeData
       2113, 2130, 0x01015003, 		 // bool ParseDecodedData
       2135, 2147, 0x02015003, 		 // int PowerNotify
       2151, 2162, 0x02005001, 		 // int PowerState
       2166, 2177, 0x02005001, 		 // int ResultCode
       2181, 2200, 0x02005001, 		 // int ResultCodeExtended
       2204, 2216, 0x0a005001, 		 // QString ServiceCode
       2224, 2249, 0x0a005001, 		 // QString ServiceObjectDescription
       2257, 2278, 0x02005001, 		 // int ServiceObjectVersion
       2282, 2288, 0x02005001, 		 // int State
       2292, 2299, 0x0a005001, 		 // QString Suffix
       2307, 2315, 0x0a005001, 		 // QString Surname
       2323, 2329, 0x0a005001, 		 // QString Title
       2337, 2348, 0x0a005001, 		 // QString Track1Data
       2356, 2380, 0x0a005001, 		 // QString Track1DiscretionaryData
       2388, 2399, 0x0a005001, 		 // QString Track2Data
       2407, 2431, 0x0a005001, 		 // QString Track2DiscretionaryData
       2439, 2450, 0x0a005001, 		 // QString Track3Data
       2458, 2469, 0x0a005001, 		 // QString Track4Data
       2477, 2490, 0x02015003, 		 // int TracksToRead
       2494, 2508, 0x02015003, 		 // int TracksToWrite
       2512, 2530, 0x01015003, 		 // bool TransmitSentinels
       2535, 2543, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR_1_10() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR_1_10\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0"
    "ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0ErrorReportingType\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0TracksToRead\0\0\0SetTracksToWrite(int)\0TracksToWrite\0"
    "\0\0SetTransmitSentinels(bool)\0TransmitSentinels\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTracks(QVariant,int)\0Data,Timeout\0int\0\0"
    "AccountNumber\0"
    "QString\0AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapTransmitSentinels\0bool\0CapUpdateFirmware\0"
    "bool\0CapUpdateStatistics\0bool\0CapWritableTracks\0int\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0"
    "QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncodingMaxLength\0int\0ErrorReportingType\0int\0ExpirationDate\0QString\0FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0"
    "bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceCode\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0"
    "QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track2Data\0QString\0Track2DiscretionaryData\0QString\0Track3Data\0QString\0Track4Data\0QString\0TracksToRead\0int\0TracksToWrite\0int\0TransmitSentinels\0"
    "bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR_1_10::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR_1_10(),
qt_meta_data_OPOS__IOPOSMSR_1_10 }
};

void *IOPOSMSR_1_10::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR_1_10()))
        return static_cast<void*>(const_cast<IOPOSMSR_1_10*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       33,    10, // methods
       50,    175, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       19, 58, 80, 81, 5,
       82, 107, 112, 113, 5,
       114, 140, 155, 156, 5,

 // slots: signature, parameters, type, tag, flags
       157, 174, 180, 184, 9,
       185, 202, 210, 214, 9,
       215, 228, 229, 233, 9,
       234, 242, 243, 247, 9,
       248, 285, 310, 314, 9,
       315, 343, 365, 369, 9,
       370, 384, 395, 399, 9,
       400, 416, 417, 421, 9,
       422, 447, 464, 468, 9,
       469, 498, 516, 520, 9,
       521, 533, 540, 541, 9,
       542, 572, 598, 599, 9,
       600, 626, 682, 683, 9,
       684, 711, 720, 721, 9,
       722, 736, 737, 741, 9,
       742, 762, 767, 768, 9,
       769, 790, 802, 803, 9,
       804, 829, 846, 847, 9,
       848, 874, 891, 892, 9,
       893, 913, 924, 925, 9,
       926, 949, 963, 964, 9,
       965, 992, 1011, 1012, 9,
       1013, 1035, 1048, 1049, 9,
       1050, 1075, 1091, 1092, 9,
       1093, 1119, 1136, 1137, 9,
       1138, 1158, 1170, 1171, 9,
       1172, 1193, 1206, 1207, 9,
       1208, 1235, 1253, 1254, 9,
       1255, 1279, 1296, 1300, 9,
       1301, 1327, 1344, 1348, 9,

 // properties: name, type, flags
       1349, 1363, 0x0a005001, 		 // QString AccountNumber
       1371, 1383, 0x01015003, 		 // bool AutoDisable
       1388, 1405, 0x02015003, 		 // int BinaryConversion
       1409, 1435, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1440, 1447, 0x01005001, 		 // bool CapISO
       1452, 1462, 0x01005001, 		 // bool CapJISOne
       1467, 1477, 0x01005001, 		 // bool CapJISTwo
       1482, 1500, 0x02005001, 		 // int CapPowerReporting
       1504, 1527, 0x01005001, 		 // bool CapStatisticsReporting
       1532, 1553, 0x01005001, 		 // bool CapTransmitSentinels
       1558, 1576, 0x01005001, 		 // bool CapUpdateFirmware
       1581, 1601, 0x01005001, 		 // bool CapUpdateStatistics
       1606, 1622, 0x0a005001, 		 // QString CheckHealthText
       1630, 1638, 0x01005001, 		 // bool Claimed
       1643, 1668, 0x0a005001, 		 // QString ControlObjectDescription
       1676, 1697, 0x02005001, 		 // int ControlObjectVersion
       1701, 1711, 0x02005001, 		 // int DataCount
       1715, 1732, 0x01015003, 		 // bool DataEventEnabled
       1737, 1748, 0x01015003, 		 // bool DecodeData
       1753, 1771, 0x0a005001, 		 // QString DeviceDescription
       1779, 1793, 0x01015003, 		 // bool DeviceEnabled
       1798, 1809, 0x0a005001, 		 // QString DeviceName
       1817, 1836, 0x02015003, 		 // int ErrorReportingType
       1840, 1855, 0x0a005001, 		 // QString ExpirationDate
       1863, 1873, 0x0a005001, 		 // QString FirstName
       1881, 1894, 0x01015003, 		 // bool FreezeEvents
       1899, 1913, 0x0a005001, 		 // QString MiddleInitial
       1921, 1932, 0x02005001, 		 // int OpenResult
       1936, 1952, 0x01015003, 		 // bool ParseDecodeData
       1957, 1974, 0x01015003, 		 // bool ParseDecodedData
       1979, 1991, 0x02015003, 		 // int PowerNotify
       1995, 2006, 0x02005001, 		 // int PowerState
       2010, 2021, 0x02005001, 		 // int ResultCode
       2025, 2044, 0x02005001, 		 // int ResultCodeExtended
       2048, 2060, 0x0a005001, 		 // QString ServiceCode
       2068, 2093, 0x0a005001, 		 // QString ServiceObjectDescription
       2101, 2122, 0x02005001, 		 // int ServiceObjectVersion
       2126, 2132, 0x02005001, 		 // int State
       2136, 2143, 0x0a005001, 		 // QString Suffix
       2151, 2159, 0x0a005001, 		 // QString Surname
       2167, 2173, 0x0a005001, 		 // QString Title
       2181, 2192, 0x0a005001, 		 // QString Track1Data
       2200, 2224, 0x0a005001, 		 // QString Track1DiscretionaryData
       2232, 2243, 0x0a005001, 		 // QString Track2Data
       2251, 2275, 0x0a005001, 		 // QString Track2DiscretionaryData
       2283, 2294, 0x0a005001, 		 // QString Track3Data
       2302, 2313, 0x0a005001, 		 // QString Track4Data
       2321, 2334, 0x02015003, 		 // int TracksToRead
       2338, 2356, 0x01015003, 		 // bool TransmitSentinels
       2361, 2369, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0ErrorReportingType\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0"
    "\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0TracksToRead\0\0\0SetTransmitSentinels(bool)\0TransmitSentinels\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0"
    "int\0CapStatisticsReporting\0bool\0CapTransmitSentinels\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0"
    "DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0ErrorReportingType\0int\0ExpirationDate\0QString\0FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0"
    "QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceCode\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track2Data\0QString\0Track2DiscretionaryData\0QString\0Track3Data\0QString\0Track4Data\0QString\0TracksToRead\0"
    "int\0TransmitSentinels\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR_1_9(),
qt_meta_data_OPOS__IOPOSMSR_1_9 }
};

void *IOPOSMSR_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR_1_9()))
        return static_cast<void*>(const_cast<IOPOSMSR_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       31,    10, // methods
       48,    165, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       19, 58, 80, 81, 5,
       82, 107, 112, 113, 5,
       114, 140, 155, 156, 5,

 // slots: signature, parameters, type, tag, flags
       157, 174, 180, 184, 9,
       185, 202, 210, 214, 9,
       215, 228, 229, 233, 9,
       234, 242, 243, 247, 9,
       248, 276, 298, 302, 9,
       303, 317, 328, 332, 9,
       333, 349, 350, 354, 9,
       355, 380, 397, 401, 9,
       402, 431, 449, 453, 9,
       454, 466, 473, 474, 9,
       475, 505, 531, 532, 9,
       533, 559, 615, 616, 9,
       617, 644, 653, 654, 9,
       655, 669, 670, 674, 9,
       675, 695, 700, 701, 9,
       702, 723, 735, 736, 9,
       737, 762, 779, 780, 9,
       781, 807, 824, 825, 9,
       826, 846, 857, 858, 9,
       859, 882, 896, 897, 9,
       898, 925, 944, 945, 9,
       946, 968, 981, 982, 9,
       983, 1008, 1024, 1025, 9,
       1026, 1052, 1069, 1070, 9,
       1071, 1091, 1103, 1104, 9,
       1105, 1126, 1139, 1140, 9,
       1141, 1168, 1186, 1187, 9,
       1188, 1214, 1231, 1235, 9,

 // properties: name, type, flags
       1236, 1250, 0x0a005001, 		 // QString AccountNumber
       1258, 1270, 0x01015003, 		 // bool AutoDisable
       1275, 1292, 0x02015003, 		 // int BinaryConversion
       1296, 1303, 0x01005001, 		 // bool CapISO
       1308, 1318, 0x01005001, 		 // bool CapJISOne
       1323, 1333, 0x01005001, 		 // bool CapJISTwo
       1338, 1356, 0x02005001, 		 // int CapPowerReporting
       1360, 1383, 0x01005001, 		 // bool CapStatisticsReporting
       1388, 1409, 0x01005001, 		 // bool CapTransmitSentinels
       1414, 1434, 0x01005001, 		 // bool CapUpdateStatistics
       1439, 1455, 0x0a005001, 		 // QString CheckHealthText
       1463, 1471, 0x01005001, 		 // bool Claimed
       1476, 1501, 0x0a005001, 		 // QString ControlObjectDescription
       1509, 1530, 0x02005001, 		 // int ControlObjectVersion
       1534, 1544, 0x02005001, 		 // int DataCount
       1548, 1565, 0x01015003, 		 // bool DataEventEnabled
       1570, 1581, 0x01015003, 		 // bool DecodeData
       1586, 1604, 0x0a005001, 		 // QString DeviceDescription
       1612, 1626, 0x01015003, 		 // bool DeviceEnabled
       1631, 1642, 0x0a005001, 		 // QString DeviceName
       1650, 1669, 0x02015003, 		 // int ErrorReportingType
       1673, 1688, 0x0a005001, 		 // QString ExpirationDate
       1696, 1706, 0x0a005001, 		 // QString FirstName
       1714, 1727, 0x01015003, 		 // bool FreezeEvents
       1732, 1746, 0x0a005001, 		 // QString MiddleInitial
       1754, 1765, 0x02005001, 		 // int OpenResult
       1769, 1785, 0x01015003, 		 // bool ParseDecodeData
       1790, 1807, 0x01015003, 		 // bool ParseDecodedData
       1812, 1824, 0x02015003, 		 // int PowerNotify
       1828, 1839, 0x02005001, 		 // int PowerState
       1843, 1854, 0x02005001, 		 // int ResultCode
       1858, 1877, 0x02005001, 		 // int ResultCodeExtended
       1881, 1893, 0x0a005001, 		 // QString ServiceCode
       1901, 1926, 0x0a005001, 		 // QString ServiceObjectDescription
       1934, 1955, 0x02005001, 		 // int ServiceObjectVersion
       1959, 1965, 0x02005001, 		 // int State
       1969, 1976, 0x0a005001, 		 // QString Suffix
       1984, 1992, 0x0a005001, 		 // QString Surname
       2000, 2006, 0x0a005001, 		 // QString Title
       2014, 2025, 0x0a005001, 		 // QString Track1Data
       2033, 2057, 0x0a005001, 		 // QString Track1DiscretionaryData
       2065, 2076, 0x0a005001, 		 // QString Track2Data
       2084, 2108, 0x0a005001, 		 // QString Track2DiscretionaryData
       2116, 2127, 0x0a005001, 		 // QString Track3Data
       2135, 2146, 0x0a005001, 		 // QString Track4Data
       2154, 2167, 0x02015003, 		 // int TracksToRead
       2171, 2189, 0x01015003, 		 // bool TransmitSentinels
       2194, 2202, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0"
    "pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0"
    "DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0ErrorReportingType\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0"
    "ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0TracksToRead\0\0\0SetTransmitSentinels(bool)\0TransmitSentinels\0\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapTransmitSentinels\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0"
    "Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0ErrorReportingType\0"
    "int\0ExpirationDate\0QString\0FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0ServiceCode\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track2Data\0QString\0"
    "Track2DiscretionaryData\0QString\0Track3Data\0QString\0Track4Data\0QString\0TracksToRead\0int\0TransmitSentinels\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR_1_8(),
qt_meta_data_OPOS__IOPOSMSR_1_8 }
};

void *IOPOSMSR_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR_1_8()))
        return static_cast<void*>(const_cast<IOPOSMSR_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMSR_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       28,    10, // methods
       46,    150, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       19, 58, 80, 81, 5,
       82, 107, 112, 113, 5,
       114, 140, 155, 156, 5,

 // slots: signature, parameters, type, tag, flags
       157, 174, 180, 184, 9,
       185, 202, 210, 214, 9,
       215, 228, 229, 233, 9,
       234, 242, 243, 247, 9,
       248, 276, 298, 302, 9,
       303, 317, 328, 332, 9,
       333, 349, 350, 354, 9,
       355, 367, 374, 375, 9,
       376, 406, 432, 433, 9,
       434, 460, 516, 517, 9,
       518, 545, 554, 555, 9,
       556, 570, 571, 575, 9,
       576, 596, 601, 602, 9,
       603, 624, 636, 637, 9,
       638, 663, 680, 681, 9,
       682, 708, 725, 726, 9,
       727, 747, 758, 759, 9,
       760, 783, 797, 798, 9,
       799, 826, 845, 846, 9,
       847, 869, 882, 883, 9,
       884, 909, 925, 926, 9,
       927, 953, 970, 971, 9,
       972, 992, 1004, 1005, 9,
       1006, 1027, 1040, 1041, 9,
       1042, 1069, 1087, 1088, 9,

 // properties: name, type, flags
       1089, 1103, 0x0a005001, 		 // QString AccountNumber
       1111, 1123, 0x01015003, 		 // bool AutoDisable
       1128, 1145, 0x02015003, 		 // int BinaryConversion
       1149, 1156, 0x01005001, 		 // bool CapISO
       1161, 1171, 0x01005001, 		 // bool CapJISOne
       1176, 1186, 0x01005001, 		 // bool CapJISTwo
       1191, 1209, 0x02005001, 		 // int CapPowerReporting
       1213, 1234, 0x01005001, 		 // bool CapTransmitSentinels
       1239, 1255, 0x0a005001, 		 // QString CheckHealthText
       1263, 1271, 0x01005001, 		 // bool Claimed
       1276, 1301, 0x0a005001, 		 // QString ControlObjectDescription
       1309, 1330, 0x02005001, 		 // int ControlObjectVersion
       1334, 1344, 0x02005001, 		 // int DataCount
       1348, 1365, 0x01015003, 		 // bool DataEventEnabled
       1370, 1381, 0x01015003, 		 // bool DecodeData
       1386, 1404, 0x0a005001, 		 // QString DeviceDescription
       1412, 1426, 0x01015003, 		 // bool DeviceEnabled
       1431, 1442, 0x0a005001, 		 // QString DeviceName
       1450, 1469, 0x02015003, 		 // int ErrorReportingType
       1473, 1488, 0x0a005001, 		 // QString ExpirationDate
       1496, 1506, 0x0a005001, 		 // QString FirstName
       1514, 1527, 0x01015003, 		 // bool FreezeEvents
       1532, 1546, 0x0a005001, 		 // QString MiddleInitial
       1554, 1565, 0x02005001, 		 // int OpenResult
       1569, 1585, 0x01015003, 		 // bool ParseDecodeData
       1590, 1607, 0x01015003, 		 // bool ParseDecodedData
       1612, 1624, 0x02015003, 		 // int PowerNotify
       1628, 1639, 0x02005001, 		 // int PowerState
       1643, 1654, 0x02005001, 		 // int ResultCode
       1658, 1677, 0x02005001, 		 // int ResultCodeExtended
       1681, 1693, 0x0a005001, 		 // QString ServiceCode
       1701, 1726, 0x0a005001, 		 // QString ServiceObjectDescription
       1734, 1755, 0x02005001, 		 // int ServiceObjectVersion
       1759, 1765, 0x02005001, 		 // int State
       1769, 1776, 0x0a005001, 		 // QString Suffix
       1784, 1792, 0x0a005001, 		 // QString Surname
       1800, 1806, 0x0a005001, 		 // QString Title
       1814, 1825, 0x0a005001, 		 // QString Track1Data
       1833, 1857, 0x0a005001, 		 // QString Track1DiscretionaryData
       1865, 1876, 0x0a005001, 		 // QString Track2Data
       1884, 1908, 0x0a005001, 		 // QString Track2DiscretionaryData
       1916, 1927, 0x0a005001, 		 // QString Track3Data
       1935, 1946, 0x0a005001, 		 // QString Track4Data
       1954, 1967, 0x02015003, 		 // int TracksToRead
       1971, 1989, 0x01015003, 		 // bool TransmitSentinels
       1994, 2002, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMSR_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMSR_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0"
    "\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDecodeData(bool)\0DecodeData\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetErrorReportingType(int)\0ErrorReportingType\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetParseDecodeData(bool)\0ParseDecodeData\0\0\0SetParseDecodedData(bool)\0ParseDecodedData\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTracksToRead(int)\0TracksToRead\0\0\0SetTransmitSentinels(bool)\0"
    "TransmitSentinels\0\0\0"
    "AccountNumber\0QString\0AutoDisable\0bool\0BinaryConversion\0int\0CapISO\0bool\0CapJISOne\0bool\0CapJISTwo\0bool\0CapPowerReporting\0int\0CapTransmitSentinels\0bool\0CheckHealthText\0QString\0Claimed\0"
    "bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DecodeData\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0ErrorReportingType\0int\0"
    "ExpirationDate\0QString\0FirstName\0QString\0FreezeEvents\0bool\0MiddleInitial\0QString\0OpenResult\0int\0ParseDecodeData\0bool\0ParseDecodedData\0bool\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0ServiceCode\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Suffix\0QString\0Surname\0QString\0Title\0QString\0Track1Data\0QString\0Track1DiscretionaryData\0QString\0Track2Data\0QString\0"
    "Track2DiscretionaryData\0QString\0Track3Data\0QString\0Track4Data\0QString\0TracksToRead\0int\0TransmitSentinels\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMSR_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMSR_1_5(),
qt_meta_data_OPOS__IOPOSMSR_1_5 }
};

void *IOPOSMSR_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMSR_1_5()))
        return static_cast<void*>(const_cast<IOPOSMSR_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

