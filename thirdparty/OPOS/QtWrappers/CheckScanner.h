/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSCheckScanner.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_CHECKSCANNER_H
#define QAX_DUMPCPP_CHECKSCANNER_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSCheckScannerEvents

class OPOS_EXPORT IOPOSCheckScanner : public QAxObject
{
public:
    IOPOSCheckScanner(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoContrast

    property CapAutoContrast

    */
    inline bool CapAutoContrast() const; //Returns the value of CapAutoContrast

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapContrast

    property CapContrast

    */
    inline bool CapContrast() const; //Returns the value of CapContrast

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property Contrast

    property Contrast

    */
    inline int Contrast() const; //Returns the value of Contrast
    inline void SetContrast(int value); //Sets the value of the Contrast property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSCheckScanner_1_10 : public QAxObject
{
public:
    IOPOSCheckScanner_1_10(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoContrast

    property CapAutoContrast

    */
    inline bool CapAutoContrast() const; //Returns the value of CapAutoContrast

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapContrast

    property CapContrast

    */
    inline bool CapContrast() const; //Returns the value of CapContrast

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property Contrast

    property Contrast

    */
    inline int Contrast() const; //Returns the value of Contrast
    inline void SetContrast(int value); //Sets the value of the Contrast property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSCheckScanner_1_9 : public QAxObject
{
public:
    IOPOSCheckScanner_1_9(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoContrast

    property CapAutoContrast

    */
    inline bool CapAutoContrast() const; //Returns the value of CapAutoContrast

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapContrast

    property CapContrast

    */
    inline bool CapContrast() const; //Returns the value of CapContrast

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property Contrast

    property Contrast

    */
    inline int Contrast() const; //Returns the value of Contrast
    inline void SetContrast(int value); //Sets the value of the Contrast property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSCheckScanner_1_8 : public QAxObject
{
public:
    IOPOSCheckScanner_1_8(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSCheckScanner_1_7 : public QAxObject
{
public:
    IOPOSCheckScanner_1_7(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSCheckScanner : public QAxObject
{
public:
    OPOSCheckScanner(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90232-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSCheckScanner(IOPOSCheckScanner *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSCheckScanner(IOPOSCheckScanner_1_10 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSCheckScanner(IOPOSCheckScanner_1_9 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSCheckScanner(IOPOSCheckScanner_1_8 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSCheckScanner(IOPOSCheckScanner_1_7 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoDisable

    property AutoDisable

    */
    inline bool AutoDisable() const; //Returns the value of AutoDisable
    inline void SetAutoDisable(bool value); //Sets the value of the AutoDisable property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoContrast

    property CapAutoContrast

    */
    inline bool CapAutoContrast() const; //Returns the value of CapAutoContrast

    /*
    Property CapAutoGenerateFileID

    property CapAutoGenerateFileID

    */
    inline bool CapAutoGenerateFileID() const; //Returns the value of CapAutoGenerateFileID

    /*
    Property CapAutoGenerateImageTagData

    property CapAutoGenerateImageTagData

    */
    inline bool CapAutoGenerateImageTagData() const; //Returns the value of CapAutoGenerateImageTagData

    /*
    Property CapAutoSize

    property CapAutoSize

    */
    inline bool CapAutoSize() const; //Returns the value of CapAutoSize

    /*
    Property CapColor

    property CapColor

    */
    inline int CapColor() const; //Returns the value of CapColor

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapConcurrentMICR

    property CapConcurrentMICR

    */
    inline bool CapConcurrentMICR() const; //Returns the value of CapConcurrentMICR

    /*
    Property CapContrast

    property CapContrast

    */
    inline bool CapContrast() const; //Returns the value of CapContrast

    /*
    Property CapDefineCropArea

    property CapDefineCropArea

    */
    inline bool CapDefineCropArea() const; //Returns the value of CapDefineCropArea

    /*
    Property CapImageFormat

    property CapImageFormat

    */
    inline int CapImageFormat() const; //Returns the value of CapImageFormat

    /*
    Property CapImageTagData

    property CapImageTagData

    */
    inline bool CapImageTagData() const; //Returns the value of CapImageTagData

    /*
    Property CapMICRDevice

    property CapMICRDevice

    */
    inline bool CapMICRDevice() const; //Returns the value of CapMICRDevice

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapStoreImageFiles

    property CapStoreImageFiles

    */
    inline bool CapStoreImageFiles() const; //Returns the value of CapStoreImageFiles

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapValidationDevice

    property CapValidationDevice

    */
    inline bool CapValidationDevice() const; //Returns the value of CapValidationDevice

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Color

    property Color

    */
    inline int Color() const; //Returns the value of Color
    inline void SetColor(int value); //Sets the value of the Color property

    /*
    Property ConcurrentMICR

    property ConcurrentMICR

    */
    inline bool ConcurrentMICR() const; //Returns the value of ConcurrentMICR
    inline void SetConcurrentMICR(bool value); //Sets the value of the ConcurrentMICR property

    /*
    Property Contrast

    property Contrast

    */
    inline int Contrast() const; //Returns the value of Contrast
    inline void SetContrast(int value); //Sets the value of the Contrast property

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CropAreaCount

    property CropAreaCount

    */
    inline int CropAreaCount() const; //Returns the value of CropAreaCount

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DocumentHeight

    property DocumentHeight

    */
    inline int DocumentHeight() const; //Returns the value of DocumentHeight
    inline void SetDocumentHeight(int value); //Sets the value of the DocumentHeight property

    /*
    Property DocumentWidth

    property DocumentWidth

    */
    inline int DocumentWidth() const; //Returns the value of DocumentWidth
    inline void SetDocumentWidth(int value); //Sets the value of the DocumentWidth property

    /*
    Property FileID

    property FileID

    */
    inline QString FileID() const; //Returns the value of FileID
    inline void SetFileID(const QString& value); //Sets the value of the FileID property

    /*
    Property FileIndex

    property FileIndex

    */
    inline int FileIndex() const; //Returns the value of FileIndex
    inline void SetFileIndex(int value); //Sets the value of the FileIndex property

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property ImageData

    property ImageData

    */
    inline QString ImageData() const; //Returns the value of ImageData

    /*
    Property ImageFormat

    property ImageFormat

    */
    inline int ImageFormat() const; //Returns the value of ImageFormat
    inline void SetImageFormat(int value); //Sets the value of the ImageFormat property

    /*
    Property ImageMemoryStatus

    property ImageMemoryStatus

    */
    inline int ImageMemoryStatus() const; //Returns the value of ImageMemoryStatus

    /*
    Property ImageTagData

    property ImageTagData

    */
    inline QString ImageTagData() const; //Returns the value of ImageTagData
    inline void SetImageTagData(const QString& value); //Sets the value of the ImageTagData property

    /*
    Property MapMode

    property MapMode

    */
    inline int MapMode() const; //Returns the value of MapMode
    inline void SetMapMode(int value); //Sets the value of the MapMode property

    /*
    Property MaxCropAreas

    property MaxCropAreas

    */
    inline int MaxCropAreas() const; //Returns the value of MaxCropAreas

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property QualityList

    property QualityList

    */
    inline QString QualityList() const; //Returns the value of QualityList

    /*
    Property RemainingImagesEstimate

    property RemainingImagesEstimate

    */
    inline int RemainingImagesEstimate() const; //Returns the value of RemainingImagesEstimate

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method BeginInsertion

    method BeginInsertion

    */
    inline int BeginInsertion(int Timeout);

    /*
    Method BeginRemoval

    method BeginRemoval

    */
    inline int BeginRemoval(int Timeout);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearImage

    method ClearImage

    */
    inline int ClearImage(int By);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DefineCropArea

    method DefineCropArea

    */
    inline int DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EndInsertion

    method EndInsertion

    */
    inline int EndInsertion();

    /*
    Method EndRemoval

    method EndRemoval

    */
    inline int EndRemoval();

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveImage

    method RetrieveImage

    */
    inline int RetrieveImage(int CropAreaID);

    /*
    Method RetrieveMemory

    method RetrieveMemory

    */
    inline int RetrieveMemory(int By);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StoreImage

    method StoreImage

    */
    inline int StoreImage(int CropAreaID);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSCheckScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSCheckScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int OPOSCheckScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSCheckScanner::CapAutoContrast() const
{
    QVariant qax_result = property("CapAutoContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSCheckScanner::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapContrast() const
{
    QVariant qax_result = property("CapContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSCheckScanner::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSCheckScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSCheckScanner::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSCheckScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSCheckScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSCheckScanner::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool OPOSCheckScanner::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSCheckScanner::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline int OPOSCheckScanner::Contrast() const
{
    QVariant qax_result = property("Contrast");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetContrast(int value){ setProperty("Contrast", QVariant(value)); }

inline QString OPOSCheckScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSCheckScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSCheckScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSCheckScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString OPOSCheckScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSCheckScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSCheckScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSCheckScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSCheckScanner::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int OPOSCheckScanner::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString OPOSCheckScanner::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSCheckScanner::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int OPOSCheckScanner::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool OPOSCheckScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSCheckScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString OPOSCheckScanner::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSCheckScanner::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int OPOSCheckScanner::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSCheckScanner::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSCheckScanner::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int OPOSCheckScanner::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int OPOSCheckScanner::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSCheckScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSCheckScanner::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString OPOSCheckScanner::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSCheckScanner::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSCheckScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSCheckScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSCheckScanner::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSCheckScanner::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSCheckScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSCheckScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSCheckScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSCheckScanner::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSCheckScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSCheckScanner::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int OPOSCheckScanner::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int OPOSCheckScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int OPOSCheckScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int OPOSCheckScanner::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int OPOSCheckScanner::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int OPOSCheckScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void OPOSCheckScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void OPOSCheckScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void OPOSCheckScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void OPOSCheckScanner::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline int OPOSCheckScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline void OPOSCheckScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline int OPOSCheckScanner::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline int OPOSCheckScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int OPOSCheckScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}


inline bool IOPOSCheckScanner::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSCheckScanner::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSCheckScanner::CapAutoContrast() const
{
    QVariant qax_result = property("CapAutoContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapContrast() const
{
    QVariant qax_result = property("CapContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSCheckScanner::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool IOPOSCheckScanner::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline int IOPOSCheckScanner::Contrast() const
{
    QVariant qax_result = property("Contrast");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetContrast(int value){ setProperty("Contrast", QVariant(value)); }

inline QString IOPOSCheckScanner::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int IOPOSCheckScanner::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString IOPOSCheckScanner::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int IOPOSCheckScanner::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool IOPOSCheckScanner::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString IOPOSCheckScanner::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int IOPOSCheckScanner::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int IOPOSCheckScanner::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int IOPOSCheckScanner::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSCheckScanner::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IOPOSCheckScanner::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSCheckScanner::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSCheckScanner::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSCheckScanner::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IOPOSCheckScanner::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int IOPOSCheckScanner::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void IOPOSCheckScanner::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int IOPOSCheckScanner::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int IOPOSCheckScanner::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}


inline bool IOPOSCheckScanner_1_10::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSCheckScanner_1_10::CapAutoContrast() const
{
    QVariant qax_result = property("CapAutoContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapContrast() const
{
    QVariant qax_result = property("CapContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_10::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool IOPOSCheckScanner_1_10::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::Contrast() const
{
    QVariant qax_result = property("Contrast");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetContrast(int value){ setProperty("Contrast", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_10::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool IOPOSCheckScanner_1_10::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_10::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSCheckScanner_1_10::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_10::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IOPOSCheckScanner_1_10::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_10::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_10::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_10::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSCheckScanner_1_10::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSCheckScanner_1_10::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IOPOSCheckScanner_1_10::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int IOPOSCheckScanner_1_10::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_10::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int IOPOSCheckScanner_1_10::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_10::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}


inline bool IOPOSCheckScanner_1_9::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSCheckScanner_1_9::CapAutoContrast() const
{
    QVariant qax_result = property("CapAutoContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapContrast() const
{
    QVariant qax_result = property("CapContrast");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_9::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool IOPOSCheckScanner_1_9::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::Contrast() const
{
    QVariant qax_result = property("Contrast");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetContrast(int value){ setProperty("Contrast", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_9::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool IOPOSCheckScanner_1_9::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_9::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSCheckScanner_1_9::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_9::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IOPOSCheckScanner_1_9::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_9::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_9::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_9::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSCheckScanner_1_9::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSCheckScanner_1_9::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSCheckScanner_1_9::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int IOPOSCheckScanner_1_9::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_9::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline int IOPOSCheckScanner_1_9::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_9::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}


inline bool IOPOSCheckScanner_1_8::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSCheckScanner_1_8::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_8::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool IOPOSCheckScanner_1_8::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_8::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool IOPOSCheckScanner_1_8::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_8::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSCheckScanner_1_8::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_8::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IOPOSCheckScanner_1_8::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_8::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_8::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_8::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSCheckScanner_1_8::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSCheckScanner_1_8::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSCheckScanner_1_8::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int IOPOSCheckScanner_1_8::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_8::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int IOPOSCheckScanner_1_8::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_8::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}


inline bool IOPOSCheckScanner_1_7::AutoDisable() const
{
    QVariant qax_result = property("AutoDisable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetAutoDisable(bool value){ setProperty("AutoDisable", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSCheckScanner_1_7::CapAutoGenerateFileID() const
{
    QVariant qax_result = property("CapAutoGenerateFileID");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapAutoGenerateImageTagData() const
{
    QVariant qax_result = property("CapAutoGenerateImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapAutoSize() const
{
    QVariant qax_result = property("CapAutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::CapColor() const
{
    QVariant qax_result = property("CapColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapConcurrentMICR() const
{
    QVariant qax_result = property("CapConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapDefineCropArea() const
{
    QVariant qax_result = property("CapDefineCropArea");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::CapImageFormat() const
{
    QVariant qax_result = property("CapImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapImageTagData() const
{
    QVariant qax_result = property("CapImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapMICRDevice() const
{
    QVariant qax_result = property("CapMICRDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapStoreImageFiles() const
{
    QVariant qax_result = property("CapStoreImageFiles");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::CapValidationDevice() const
{
    QVariant qax_result = property("CapValidationDevice");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_7::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetColor(int value){ setProperty("Color", QVariant(value)); }

inline bool IOPOSCheckScanner_1_7::ConcurrentMICR() const
{
    QVariant qax_result = property("ConcurrentMICR");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetConcurrentMICR(bool value){ setProperty("ConcurrentMICR", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::CropAreaCount() const
{
    QVariant qax_result = property("CropAreaCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSCheckScanner_1_7::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::DocumentHeight() const
{
    QVariant qax_result = property("DocumentHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetDocumentHeight(int value){ setProperty("DocumentHeight", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::DocumentWidth() const
{
    QVariant qax_result = property("DocumentWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetDocumentWidth(int value){ setProperty("DocumentWidth", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::FileID() const
{
    QVariant qax_result = property("FileID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetFileID(const QString& value){ setProperty("FileID", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::FileIndex() const
{
    QVariant qax_result = property("FileIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetFileIndex(int value){ setProperty("FileIndex", QVariant(value)); }

inline bool IOPOSCheckScanner_1_7::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::ImageData() const
{
    QVariant qax_result = property("ImageData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::ImageFormat() const
{
    QVariant qax_result = property("ImageFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetImageFormat(int value){ setProperty("ImageFormat", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::ImageMemoryStatus() const
{
    QVariant qax_result = property("ImageMemoryStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_7::ImageTagData() const
{
    QVariant qax_result = property("ImageTagData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetImageTagData(const QString& value){ setProperty("ImageTagData", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::MapMode() const
{
    QVariant qax_result = property("MapMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetMapMode(int value){ setProperty("MapMode", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::MaxCropAreas() const
{
    QVariant qax_result = property("MaxCropAreas");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSCheckScanner_1_7::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSCheckScanner_1_7::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IOPOSCheckScanner_1_7::QualityList() const
{
    QVariant qax_result = property("QualityList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::RemainingImagesEstimate() const
{
    QVariant qax_result = property("RemainingImagesEstimate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSCheckScanner_1_7::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSCheckScanner_1_7::BeginInsertion(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::BeginRemoval(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::ClearImage(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::DefineCropArea(int CropAreaID, int X, int Y, int CX, int CY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID, (void*)&X, (void*)&Y, (void*)&CX, (void*)&CY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::EndInsertion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::EndRemoval()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::RetrieveImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSCheckScanner_1_7::RetrieveMemory(int By)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&By};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_7::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSCheckScanner_1_7::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSCheckScanner_1_7::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSCheckScanner_1_7::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int IOPOSCheckScanner_1_7::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void IOPOSCheckScanner_1_7::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int IOPOSCheckScanner_1_7::StoreImage(int CropAreaID)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CropAreaID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSCheckScanner *t)
{ Q_ASSERT(!t); return new OPOS::OPOSCheckScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSCheckScanner *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSCheckScanner; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSCheckScanner_1_10 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSCheckScanner_1_10; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSCheckScanner_1_9 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSCheckScanner_1_9; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSCheckScanner_1_8 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSCheckScanner_1_8; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSCheckScanner_1_7 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSCheckScanner_1_7; }

#endif

