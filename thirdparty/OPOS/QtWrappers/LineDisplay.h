/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSLineDisplay.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_LINEDISPLAY_H
#define QAX_DUMPCPP_LINEDISPLAY_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSLineDisplayEvents

class OPOS_EXPORT IOPOSLineDisplay : public QAxObject
{
public:
    IOPOSLineDisplay(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBitmap

    property CapBitmap

    */
    inline bool CapBitmap() const; //Returns the value of CapBitmap

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapMapCharacterSet

    property CapMapCharacterSet

    */
    inline bool CapMapCharacterSet() const; //Returns the value of CapMapCharacterSet

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapScreenMode

    property CapScreenMode

    */
    inline bool CapScreenMode() const; //Returns the value of CapScreenMode

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MapCharacterSet

    property MapCharacterSet

    */
    inline bool MapCharacterSet() const; //Returns the value of MapCharacterSet
    inline void SetMapCharacterSet(bool value); //Sets the value of the MapCharacterSet property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property MaximumX

    property MaximumX

    */
    inline int MaximumX() const; //Returns the value of MaximumX

    /*
    Property MaximumY

    property MaximumY

    */
    inline int MaximumY() const; //Returns the value of MaximumY

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ScreenMode

    property ScreenMode

    */
    inline int ScreenMode() const; //Returns the value of ScreenMode
    inline void SetScreenMode(int value); //Sets the value of the ScreenMode property

    /*
    Property ScreenModeList

    property ScreenModeList

    */
    inline QString ScreenModeList() const; //Returns the value of ScreenModeList

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayBitmap

    method DisplayBitmap

    */
    inline int DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetBitmap

    method SetBitmap

    */
    inline int SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSLineDisplay_1_9 : public QAxObject
{
public:
    IOPOSLineDisplay_1_9(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBitmap

    property CapBitmap

    */
    inline bool CapBitmap() const; //Returns the value of CapBitmap

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapMapCharacterSet

    property CapMapCharacterSet

    */
    inline bool CapMapCharacterSet() const; //Returns the value of CapMapCharacterSet

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapScreenMode

    property CapScreenMode

    */
    inline bool CapScreenMode() const; //Returns the value of CapScreenMode

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MapCharacterSet

    property MapCharacterSet

    */
    inline bool MapCharacterSet() const; //Returns the value of MapCharacterSet
    inline void SetMapCharacterSet(bool value); //Sets the value of the MapCharacterSet property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property MaximumX

    property MaximumX

    */
    inline int MaximumX() const; //Returns the value of MaximumX

    /*
    Property MaximumY

    property MaximumY

    */
    inline int MaximumY() const; //Returns the value of MaximumY

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ScreenMode

    property ScreenMode

    */
    inline int ScreenMode() const; //Returns the value of ScreenMode
    inline void SetScreenMode(int value); //Sets the value of the ScreenMode property

    /*
    Property ScreenModeList

    property ScreenModeList

    */
    inline QString ScreenModeList() const; //Returns the value of ScreenModeList

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayBitmap

    method DisplayBitmap

    */
    inline int DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetBitmap

    method SetBitmap

    */
    inline int SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSLineDisplay_1_8 : public QAxObject
{
public:
    IOPOSLineDisplay_1_8(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBitmap

    property CapBitmap

    */
    inline bool CapBitmap() const; //Returns the value of CapBitmap

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapMapCharacterSet

    property CapMapCharacterSet

    */
    inline bool CapMapCharacterSet() const; //Returns the value of CapMapCharacterSet

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapScreenMode

    property CapScreenMode

    */
    inline bool CapScreenMode() const; //Returns the value of CapScreenMode

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MapCharacterSet

    property MapCharacterSet

    */
    inline bool MapCharacterSet() const; //Returns the value of MapCharacterSet
    inline void SetMapCharacterSet(bool value); //Sets the value of the MapCharacterSet property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property MaximumX

    property MaximumX

    */
    inline int MaximumX() const; //Returns the value of MaximumX

    /*
    Property MaximumY

    property MaximumY

    */
    inline int MaximumY() const; //Returns the value of MaximumY

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ScreenMode

    property ScreenMode

    */
    inline int ScreenMode() const; //Returns the value of ScreenMode
    inline void SetScreenMode(int value); //Sets the value of the ScreenMode property

    /*
    Property ScreenModeList

    property ScreenModeList

    */
    inline QString ScreenModeList() const; //Returns the value of ScreenModeList

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayBitmap

    method DisplayBitmap

    */
    inline int DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetBitmap

    method SetBitmap

    */
    inline int SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSLineDisplay_1_7 : public QAxObject
{
public:
    IOPOSLineDisplay_1_7(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBitmap

    property CapBitmap

    */
    inline bool CapBitmap() const; //Returns the value of CapBitmap

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapMapCharacterSet

    property CapMapCharacterSet

    */
    inline bool CapMapCharacterSet() const; //Returns the value of CapMapCharacterSet

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapScreenMode

    property CapScreenMode

    */
    inline bool CapScreenMode() const; //Returns the value of CapScreenMode

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MapCharacterSet

    property MapCharacterSet

    */
    inline bool MapCharacterSet() const; //Returns the value of MapCharacterSet
    inline void SetMapCharacterSet(bool value); //Sets the value of the MapCharacterSet property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property MaximumX

    property MaximumX

    */
    inline int MaximumX() const; //Returns the value of MaximumX

    /*
    Property MaximumY

    property MaximumY

    */
    inline int MaximumY() const; //Returns the value of MaximumY

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ScreenMode

    property ScreenMode

    */
    inline int ScreenMode() const; //Returns the value of ScreenMode
    inline void SetScreenMode(int value); //Sets the value of the ScreenMode property

    /*
    Property ScreenModeList

    property ScreenModeList

    */
    inline QString ScreenModeList() const; //Returns the value of ScreenModeList

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayBitmap

    method DisplayBitmap

    */
    inline int DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetBitmap

    method SetBitmap

    */
    inline int SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSLineDisplay_1_6 : public QAxObject
{
public:
    IOPOSLineDisplay_1_6(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSLineDisplay : public QAxObject
{
public:
    OPOSLineDisplay(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90102-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSLineDisplay(IOPOSLineDisplay *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSLineDisplay(IOPOSLineDisplay_1_9 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSLineDisplay(IOPOSLineDisplay_1_8 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSLineDisplay(IOPOSLineDisplay_1_7 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSLineDisplay(IOPOSLineDisplay_1_6 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property BlinkRate

    property BlinkRate

    */
    inline int BlinkRate() const; //Returns the value of BlinkRate
    inline void SetBlinkRate(int value); //Sets the value of the BlinkRate property

    /*
    Property CapBitmap

    property CapBitmap

    */
    inline bool CapBitmap() const; //Returns the value of CapBitmap

    /*
    Property CapBlink

    property CapBlink

    */
    inline int CapBlink() const; //Returns the value of CapBlink

    /*
    Property CapBlinkRate

    property CapBlinkRate

    */
    inline bool CapBlinkRate() const; //Returns the value of CapBlinkRate

    /*
    Property CapBrightness

    property CapBrightness

    */
    inline bool CapBrightness() const; //Returns the value of CapBrightness

    /*
    Property CapCharacterSet

    property CapCharacterSet

    */
    inline int CapCharacterSet() const; //Returns the value of CapCharacterSet

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapCursorType

    property CapCursorType

    */
    inline int CapCursorType() const; //Returns the value of CapCursorType

    /*
    Property CapCustomGlyph

    property CapCustomGlyph

    */
    inline bool CapCustomGlyph() const; //Returns the value of CapCustomGlyph

    /*
    Property CapDescriptors

    property CapDescriptors

    */
    inline bool CapDescriptors() const; //Returns the value of CapDescriptors

    /*
    Property CapHMarquee

    property CapHMarquee

    */
    inline bool CapHMarquee() const; //Returns the value of CapHMarquee

    /*
    Property CapICharWait

    property CapICharWait

    */
    inline bool CapICharWait() const; //Returns the value of CapICharWait

    /*
    Property CapMapCharacterSet

    property CapMapCharacterSet

    */
    inline bool CapMapCharacterSet() const; //Returns the value of CapMapCharacterSet

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapReadBack

    property CapReadBack

    */
    inline int CapReadBack() const; //Returns the value of CapReadBack

    /*
    Property CapReverse

    property CapReverse

    */
    inline int CapReverse() const; //Returns the value of CapReverse

    /*
    Property CapScreenMode

    property CapScreenMode

    */
    inline bool CapScreenMode() const; //Returns the value of CapScreenMode

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVMarquee

    property CapVMarquee

    */
    inline bool CapVMarquee() const; //Returns the value of CapVMarquee

    /*
    Property CharacterSet

    property CharacterSet

    */
    inline int CharacterSet() const; //Returns the value of CharacterSet
    inline void SetCharacterSet(int value); //Sets the value of the CharacterSet property

    /*
    Property CharacterSetList

    property CharacterSetList

    */
    inline QString CharacterSetList() const; //Returns the value of CharacterSetList

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property Columns

    property Columns

    */
    inline int Columns() const; //Returns the value of Columns

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property CurrentWindow

    property CurrentWindow

    */
    inline int CurrentWindow() const; //Returns the value of CurrentWindow
    inline void SetCurrentWindow(int value); //Sets the value of the CurrentWindow property

    /*
    Property CursorColumn

    property CursorColumn

    */
    inline int CursorColumn() const; //Returns the value of CursorColumn
    inline void SetCursorColumn(int value); //Sets the value of the CursorColumn property

    /*
    Property CursorRow

    property CursorRow

    */
    inline int CursorRow() const; //Returns the value of CursorRow
    inline void SetCursorRow(int value); //Sets the value of the CursorRow property

    /*
    Property CursorType

    property CursorType

    */
    inline int CursorType() const; //Returns the value of CursorType
    inline void SetCursorType(int value); //Sets the value of the CursorType property

    /*
    Property CursorUpdate

    property CursorUpdate

    */
    inline bool CursorUpdate() const; //Returns the value of CursorUpdate
    inline void SetCursorUpdate(bool value); //Sets the value of the CursorUpdate property

    /*
    Property CustomGlyphList

    property CustomGlyphList

    */
    inline QString CustomGlyphList() const; //Returns the value of CustomGlyphList

    /*
    Property DeviceBrightness

    property DeviceBrightness

    */
    inline int DeviceBrightness() const; //Returns the value of DeviceBrightness
    inline void SetDeviceBrightness(int value); //Sets the value of the DeviceBrightness property

    /*
    Property DeviceColumns

    property DeviceColumns

    */
    inline int DeviceColumns() const; //Returns the value of DeviceColumns

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceDescriptors

    property DeviceDescriptors

    */
    inline int DeviceDescriptors() const; //Returns the value of DeviceDescriptors

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property DeviceRows

    property DeviceRows

    */
    inline int DeviceRows() const; //Returns the value of DeviceRows

    /*
    Property DeviceWindows

    property DeviceWindows

    */
    inline int DeviceWindows() const; //Returns the value of DeviceWindows

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property GlyphHeight

    property GlyphHeight

    */
    inline int GlyphHeight() const; //Returns the value of GlyphHeight

    /*
    Property GlyphWidth

    property GlyphWidth

    */
    inline int GlyphWidth() const; //Returns the value of GlyphWidth

    /*
    Property InterCharacterWait

    property InterCharacterWait

    */
    inline int InterCharacterWait() const; //Returns the value of InterCharacterWait
    inline void SetInterCharacterWait(int value); //Sets the value of the InterCharacterWait property

    /*
    Property MapCharacterSet

    property MapCharacterSet

    */
    inline bool MapCharacterSet() const; //Returns the value of MapCharacterSet
    inline void SetMapCharacterSet(bool value); //Sets the value of the MapCharacterSet property

    /*
    Property MarqueeFormat

    property MarqueeFormat

    */
    inline int MarqueeFormat() const; //Returns the value of MarqueeFormat
    inline void SetMarqueeFormat(int value); //Sets the value of the MarqueeFormat property

    /*
    Property MarqueeRepeatWait

    property MarqueeRepeatWait

    */
    inline int MarqueeRepeatWait() const; //Returns the value of MarqueeRepeatWait
    inline void SetMarqueeRepeatWait(int value); //Sets the value of the MarqueeRepeatWait property

    /*
    Property MarqueeType

    property MarqueeType

    */
    inline int MarqueeType() const; //Returns the value of MarqueeType
    inline void SetMarqueeType(int value); //Sets the value of the MarqueeType property

    /*
    Property MarqueeUnitWait

    property MarqueeUnitWait

    */
    inline int MarqueeUnitWait() const; //Returns the value of MarqueeUnitWait
    inline void SetMarqueeUnitWait(int value); //Sets the value of the MarqueeUnitWait property

    /*
    Property MaximumX

    property MaximumX

    */
    inline int MaximumX() const; //Returns the value of MaximumX

    /*
    Property MaximumY

    property MaximumY

    */
    inline int MaximumY() const; //Returns the value of MaximumY

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property Rows

    property Rows

    */
    inline int Rows() const; //Returns the value of Rows

    /*
    Property ScreenMode

    property ScreenMode

    */
    inline int ScreenMode() const; //Returns the value of ScreenMode
    inline void SetScreenMode(int value); //Sets the value of the ScreenMode property

    /*
    Property ScreenModeList

    property ScreenModeList

    */
    inline QString ScreenModeList() const; //Returns the value of ScreenModeList

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearDescriptors

    method ClearDescriptors

    */
    inline int ClearDescriptors();

    /*
    Method ClearText

    method ClearText

    */
    inline int ClearText();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method CreateWindow

    method CreateWindow

    */
    inline int CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth);

    /*
    Method DefineGlyph

    method DefineGlyph

    */
    inline int DefineGlyph(int GlyphCode, const QString& Glyph);

    /*
    Method DestroyWindow

    method DestroyWindow

    */
    inline int DestroyWindow();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method DisplayBitmap

    method DisplayBitmap

    */
    inline int DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method DisplayText

    method DisplayText

    */
    inline int DisplayText(const QString& Data, int Attribute);

    /*
    Method DisplayTextAt

    method DisplayTextAt

    */
    inline int DisplayTextAt(int Row, int Column, const QString& Data, int Attribute);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReadCharacterAtCursor

    method ReadCharacterAtCursor

    */
    inline int ReadCharacterAtCursor(int& pChar);

    /*
    Method RefreshWindow

    method RefreshWindow

    */
    inline int RefreshWindow(int Window);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method ScrollText

    method ScrollText

    */
    inline int ScrollText(int Direction, int Units);

    /*
    Method SetBitmap

    method SetBitmap

    */
    inline int SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY);

    /*
    Method SetDescriptor

    method SetDescriptor

    */
    inline int SetDescriptor(int Descriptor, int Attribute);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline int OPOSLineDisplay::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int OPOSLineDisplay::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline bool OPOSLineDisplay::CapBitmap() const
{
    QVariant qax_result = property("CapBitmap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapMapCharacterSet() const
{
    QVariant qax_result = property("CapMapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapScreenMode() const
{
    QVariant qax_result = property("CapScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSLineDisplay::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString OPOSLineDisplay::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSLineDisplay::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSLineDisplay::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSLineDisplay::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSLineDisplay::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSLineDisplay::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int OPOSLineDisplay::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int OPOSLineDisplay::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int OPOSLineDisplay::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool OPOSLineDisplay::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSLineDisplay::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString OPOSLineDisplay::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSLineDisplay::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int OPOSLineDisplay::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSLineDisplay::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSLineDisplay::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSLineDisplay::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSLineDisplay::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSLineDisplay::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSLineDisplay::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSLineDisplay::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int OPOSLineDisplay::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline bool OPOSLineDisplay::MapCharacterSet() const
{
    QVariant qax_result = property("MapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSLineDisplay::SetMapCharacterSet(bool value){ setProperty("MapCharacterSet", QVariant(value)); }

inline int OPOSLineDisplay::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int OPOSLineDisplay::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int OPOSLineDisplay::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int OPOSLineDisplay::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int OPOSLineDisplay::MaximumX() const
{
    QVariant qax_result = property("MaximumX");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::MaximumY() const
{
    QVariant qax_result = property("MaximumY");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSLineDisplay::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::ScreenMode() const
{
    QVariant qax_result = property("ScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSLineDisplay::SetScreenMode(int value){ setProperty("ScreenMode", QVariant(value)); }

inline QString OPOSLineDisplay::ScreenModeList() const
{
    QVariant qax_result = property("ScreenModeList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSLineDisplay::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSLineDisplay::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSLineDisplay::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSLineDisplay::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSLineDisplay::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSLineDisplay::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSLineDisplay::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSLineDisplay::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int OPOSLineDisplay::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int OPOSLineDisplay::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int OPOSLineDisplay::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void OPOSLineDisplay::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void OPOSLineDisplay::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void OPOSLineDisplay::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void OPOSLineDisplay::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int OPOSLineDisplay::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline void OPOSLineDisplay::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline int OPOSLineDisplay::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int OPOSLineDisplay::SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&BitmapNumber, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int OPOSLineDisplay::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int OPOSLineDisplay::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int OPOSLineDisplay::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}


inline int IOPOSLineDisplay::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSLineDisplay::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline bool IOPOSLineDisplay::CapBitmap() const
{
    QVariant qax_result = property("CapBitmap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapMapCharacterSet() const
{
    QVariant qax_result = property("CapMapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapScreenMode() const
{
    QVariant qax_result = property("CapScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString IOPOSLineDisplay::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSLineDisplay::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int IOPOSLineDisplay::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int IOPOSLineDisplay::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int IOPOSLineDisplay::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool IOPOSLineDisplay::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString IOPOSLineDisplay::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int IOPOSLineDisplay::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSLineDisplay::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSLineDisplay::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline bool IOPOSLineDisplay::MapCharacterSet() const
{
    QVariant qax_result = property("MapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetMapCharacterSet(bool value){ setProperty("MapCharacterSet", QVariant(value)); }

inline int IOPOSLineDisplay::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int IOPOSLineDisplay::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int IOPOSLineDisplay::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int IOPOSLineDisplay::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int IOPOSLineDisplay::MaximumX() const
{
    QVariant qax_result = property("MaximumX");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::MaximumY() const
{
    QVariant qax_result = property("MaximumY");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSLineDisplay::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::ScreenMode() const
{
    QVariant qax_result = property("ScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay::SetScreenMode(int value){ setProperty("ScreenMode", QVariant(value)); }

inline QString IOPOSLineDisplay::ScreenModeList() const
{
    QVariant qax_result = property("ScreenModeList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSLineDisplay::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSLineDisplay::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSLineDisplay::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IOPOSLineDisplay::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int IOPOSLineDisplay::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void IOPOSLineDisplay::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int IOPOSLineDisplay::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&BitmapNumber, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int IOPOSLineDisplay::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}


inline int IOPOSLineDisplay_1_9::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline bool IOPOSLineDisplay_1_9::CapBitmap() const
{
    QVariant qax_result = property("CapBitmap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapMapCharacterSet() const
{
    QVariant qax_result = property("CapMapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapScreenMode() const
{
    QVariant qax_result = property("CapScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString IOPOSLineDisplay_1_9::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_9::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_9::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool IOPOSLineDisplay_1_9::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString IOPOSLineDisplay_1_9::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_9::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSLineDisplay_1_9::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_9::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline bool IOPOSLineDisplay_1_9::MapCharacterSet() const
{
    QVariant qax_result = property("MapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetMapCharacterSet(bool value){ setProperty("MapCharacterSet", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::MaximumX() const
{
    QVariant qax_result = property("MaximumX");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::MaximumY() const
{
    QVariant qax_result = property("MaximumY");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSLineDisplay_1_9::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::ScreenMode() const
{
    QVariant qax_result = property("ScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_9::SetScreenMode(int value){ setProperty("ScreenMode", QVariant(value)); }

inline QString IOPOSLineDisplay_1_9::ScreenModeList() const
{
    QVariant qax_result = property("ScreenModeList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_9::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_9::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_9::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSLineDisplay_1_9::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSLineDisplay_1_9::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IOPOSLineDisplay_1_9::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int IOPOSLineDisplay_1_9::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_9::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int IOPOSLineDisplay_1_9::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&BitmapNumber, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_9::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}


inline int IOPOSLineDisplay_1_8::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline bool IOPOSLineDisplay_1_8::CapBitmap() const
{
    QVariant qax_result = property("CapBitmap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapMapCharacterSet() const
{
    QVariant qax_result = property("CapMapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapScreenMode() const
{
    QVariant qax_result = property("CapScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString IOPOSLineDisplay_1_8::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_8::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_8::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool IOPOSLineDisplay_1_8::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString IOPOSLineDisplay_1_8::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_8::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSLineDisplay_1_8::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_8::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline bool IOPOSLineDisplay_1_8::MapCharacterSet() const
{
    QVariant qax_result = property("MapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetMapCharacterSet(bool value){ setProperty("MapCharacterSet", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::MaximumX() const
{
    QVariant qax_result = property("MaximumX");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::MaximumY() const
{
    QVariant qax_result = property("MaximumY");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSLineDisplay_1_8::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::ScreenMode() const
{
    QVariant qax_result = property("ScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_8::SetScreenMode(int value){ setProperty("ScreenMode", QVariant(value)); }

inline QString IOPOSLineDisplay_1_8::ScreenModeList() const
{
    QVariant qax_result = property("ScreenModeList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_8::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_8::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_8::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSLineDisplay_1_8::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IOPOSLineDisplay_1_8::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IOPOSLineDisplay_1_8::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int IOPOSLineDisplay_1_8::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_8::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline int IOPOSLineDisplay_1_8::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&BitmapNumber, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_8::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}


inline int IOPOSLineDisplay_1_7::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline bool IOPOSLineDisplay_1_7::CapBitmap() const
{
    QVariant qax_result = property("CapBitmap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapMapCharacterSet() const
{
    QVariant qax_result = property("CapMapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapScreenMode() const
{
    QVariant qax_result = property("CapScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString IOPOSLineDisplay_1_7::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_7::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_7::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool IOPOSLineDisplay_1_7::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString IOPOSLineDisplay_1_7::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_7::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSLineDisplay_1_7::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_7::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline bool IOPOSLineDisplay_1_7::MapCharacterSet() const
{
    QVariant qax_result = property("MapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetMapCharacterSet(bool value){ setProperty("MapCharacterSet", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::MaximumX() const
{
    QVariant qax_result = property("MaximumX");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::MaximumY() const
{
    QVariant qax_result = property("MaximumY");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSLineDisplay_1_7::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::ScreenMode() const
{
    QVariant qax_result = property("ScreenMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_7::SetScreenMode(int value){ setProperty("ScreenMode", QVariant(value)); }

inline QString IOPOSLineDisplay_1_7::ScreenModeList() const
{
    QVariant qax_result = property("ScreenModeList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_7::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_7::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DisplayBitmap(const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_7::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSLineDisplay_1_7::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSLineDisplay_1_7::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IOPOSLineDisplay_1_7::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int IOPOSLineDisplay_1_7::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_7::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int IOPOSLineDisplay_1_7::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::SetBitmap(int BitmapNumber, const QString& FileName, int Width, int AlignmentX, int AlignmentY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&BitmapNumber, (void*)&FileName, (void*)&Width, (void*)&AlignmentX, (void*)&AlignmentY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_7::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}


inline int IOPOSLineDisplay_1_6::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::BlinkRate() const
{
    QVariant qax_result = property("BlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetBlinkRate(int value){ setProperty("BlinkRate", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::CapBlink() const
{
    QVariant qax_result = property("CapBlink");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapBlinkRate() const
{
    QVariant qax_result = property("CapBlinkRate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapBrightness() const
{
    QVariant qax_result = property("CapBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CapCharacterSet() const
{
    QVariant qax_result = property("CapCharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CapCursorType() const
{
    QVariant qax_result = property("CapCursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapCustomGlyph() const
{
    QVariant qax_result = property("CapCustomGlyph");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapDescriptors() const
{
    QVariant qax_result = property("CapDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapHMarquee() const
{
    QVariant qax_result = property("CapHMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapICharWait() const
{
    QVariant qax_result = property("CapICharWait");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CapReadBack() const
{
    QVariant qax_result = property("CapReadBack");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CapReverse() const
{
    QVariant qax_result = property("CapReverse");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::CapVMarquee() const
{
    QVariant qax_result = property("CapVMarquee");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CharacterSet() const
{
    QVariant qax_result = property("CharacterSet");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCharacterSet(int value){ setProperty("CharacterSet", QVariant(value)); }

inline QString IOPOSLineDisplay_1_6::CharacterSetList() const
{
    QVariant qax_result = property("CharacterSetList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_6::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::Columns() const
{
    QVariant qax_result = property("Columns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_6::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CurrentWindow() const
{
    QVariant qax_result = property("CurrentWindow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCurrentWindow(int value){ setProperty("CurrentWindow", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::CursorColumn() const
{
    QVariant qax_result = property("CursorColumn");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCursorColumn(int value){ setProperty("CursorColumn", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::CursorRow() const
{
    QVariant qax_result = property("CursorRow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCursorRow(int value){ setProperty("CursorRow", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::CursorType() const
{
    QVariant qax_result = property("CursorType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCursorType(int value){ setProperty("CursorType", QVariant(value)); }

inline bool IOPOSLineDisplay_1_6::CursorUpdate() const
{
    QVariant qax_result = property("CursorUpdate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetCursorUpdate(bool value){ setProperty("CursorUpdate", QVariant(value)); }

inline QString IOPOSLineDisplay_1_6::CustomGlyphList() const
{
    QVariant qax_result = property("CustomGlyphList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::DeviceBrightness() const
{
    QVariant qax_result = property("DeviceBrightness");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetDeviceBrightness(int value){ setProperty("DeviceBrightness", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::DeviceColumns() const
{
    QVariant qax_result = property("DeviceColumns");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_6::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::DeviceDescriptors() const
{
    QVariant qax_result = property("DeviceDescriptors");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSLineDisplay_1_6::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::DeviceRows() const
{
    QVariant qax_result = property("DeviceRows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::DeviceWindows() const
{
    QVariant qax_result = property("DeviceWindows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSLineDisplay_1_6::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::GlyphHeight() const
{
    QVariant qax_result = property("GlyphHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::GlyphWidth() const
{
    QVariant qax_result = property("GlyphWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::InterCharacterWait() const
{
    QVariant qax_result = property("InterCharacterWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetInterCharacterWait(int value){ setProperty("InterCharacterWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::MarqueeFormat() const
{
    QVariant qax_result = property("MarqueeFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetMarqueeFormat(int value){ setProperty("MarqueeFormat", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::MarqueeRepeatWait() const
{
    QVariant qax_result = property("MarqueeRepeatWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetMarqueeRepeatWait(int value){ setProperty("MarqueeRepeatWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::MarqueeType() const
{
    QVariant qax_result = property("MarqueeType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetMarqueeType(int value){ setProperty("MarqueeType", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::MarqueeUnitWait() const
{
    QVariant qax_result = property("MarqueeUnitWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetMarqueeUnitWait(int value){ setProperty("MarqueeUnitWait", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSLineDisplay_1_6::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSLineDisplay_1_6::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::Rows() const
{
    QVariant qax_result = property("Rows");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSLineDisplay_1_6::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSLineDisplay_1_6::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::ClearDescriptors()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::ClearText()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::CreateWindow(int ViewportRow, int ViewportColumn, int ViewportHeight, int ViewportWidth, int WindowHeight, int WindowWidth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ViewportRow, (void*)&ViewportColumn, (void*)&ViewportHeight, (void*)&ViewportWidth, (void*)&WindowHeight, (void*)&WindowWidth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::DefineGlyph(int GlyphCode, const QString& Glyph)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GlyphCode, (void*)&Glyph};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::DestroyWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::DisplayText(const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::DisplayTextAt(int Row, int Column, const QString& Data, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Row, (void*)&Column, (void*)&Data, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::ReadCharacterAtCursor(int& pChar)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::RefreshWindow(int Window)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Window};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_6::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSLineDisplay_1_6::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSLineDisplay_1_6::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSLineDisplay_1_6::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int IOPOSLineDisplay_1_6::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void IOPOSLineDisplay_1_6::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int IOPOSLineDisplay_1_6::ScrollText(int Direction, int Units)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Units};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int IOPOSLineDisplay_1_6::SetDescriptor(int Descriptor, int Attribute)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Descriptor, (void*)&Attribute};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSLineDisplay *t)
{ Q_ASSERT(!t); return new OPOS::OPOSLineDisplay; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSLineDisplay *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSLineDisplay; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSLineDisplay_1_9 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSLineDisplay_1_9; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSLineDisplay_1_8 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSLineDisplay_1_8; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSLineDisplay_1_7 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSLineDisplay_1_7; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSLineDisplay_1_6 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSLineDisplay_1_6; }

#endif

