/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSLineDisplay.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\LineDisplay.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSLineDisplay[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       54,    22, // methods
       65,    292, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       22, 40, 
       64, 76, 
       93, 105, 
       126, 138, 
       159, 171, 
       192, 204, 

 // signals: signature, parameters, type, tag, flags
       225, 258, 284, 285, 5,
       286, 309, 314, 315, 5,
       316, 355, 377, 378, 5,
       379, 404, 409, 410, 5,
       411, 437, 452, 453, 5,

 // slots: signature, parameters, type, tag, flags
       454, 471, 477, 481, 9,
       482, 499, 507, 511, 9,
       512, 531, 532, 536, 9,
       537, 549, 550, 554, 9,
       555, 563, 564, 568, 9,
       569, 606, 631, 635, 9,
       636, 674, 755, 759, 9,
       760, 785, 801, 805, 9,
       806, 822, 823, 827, 9,
       828, 856, 878, 882, 9,
       883, 918, 955, 959, 9,
       960, 985, 1000, 1004, 9,
       1005, 1040, 1066, 1070, 9,
       1071, 1085, 1096, 1100, 9,
       1101, 1129, 1135, 1139, 9,
       1140, 1159, 1166, 1170, 9,
       1171, 1187, 1188, 1192, 9,
       1193, 1218, 1235, 1239, 9,
       1240, 1269, 1287, 1291, 9,
       1292, 1309, 1316, 1317, 9,
       1318, 1348, 1374, 1375, 9,
       1376, 1407, 1463, 1464, 9,
       1465, 1492, 1501, 1502, 9,
       1503, 1517, 1518, 1522, 9,
       1523, 1543, 1548, 1549, 9,
       1550, 1570, 1586, 1590, 9,
       1591, 1616, 1633, 1634, 9,
       1635, 1670, 1720, 1724, 9,
       1725, 1743, 1753, 1754, 9,
       1755, 1776, 1789, 1790, 9,
       1791, 1813, 1827, 1828, 9,
       1829, 1850, 1863, 1864, 9,
       1865, 1883, 1893, 1894, 9,
       1895, 1914, 1925, 1926, 9,
       1927, 1949, 1962, 1963, 9,
       1964, 1987, 2008, 2012, 9,
       2013, 2038, 2055, 2056, 9,
       2057, 2080, 2094, 2095, 9,
       2096, 2118, 2131, 2132, 9,
       2133, 2160, 2179, 2180, 9,
       2181, 2206, 2222, 2223, 9,
       2224, 2246, 2260, 2261, 9,
       2262, 2288, 2306, 2307, 9,
       2308, 2328, 2340, 2341, 9,
       2342, 2366, 2382, 2383, 9,
       2384, 2404, 2416, 2417, 9,
       2418, 2437, 2448, 2449, 9,
       2450, 2474, 2491, 2495, 9,
       2496, 2522, 2539, 2543, 9,

 // properties: name, type, flags
       2544, 2561, 0x02015003, 		 // int BinaryConversion
       2565, 2575, 0x02015003, 		 // int BlinkRate
       2579, 2589, 0x01005001, 		 // bool CapBitmap
       2594, 2603, 0x02005001, 		 // int CapBlink
       2607, 2620, 0x01005001, 		 // bool CapBlinkRate
       2625, 2639, 0x01005001, 		 // bool CapBrightness
       2644, 2660, 0x02005001, 		 // int CapCharacterSet
       2664, 2690, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2695, 2709, 0x02005001, 		 // int CapCursorType
       2713, 2728, 0x01005001, 		 // bool CapCustomGlyph
       2733, 2748, 0x01005001, 		 // bool CapDescriptors
       2753, 2765, 0x01005001, 		 // bool CapHMarquee
       2770, 2783, 0x01005001, 		 // bool CapICharWait
       2788, 2807, 0x01005001, 		 // bool CapMapCharacterSet
       2812, 2830, 0x02005001, 		 // int CapPowerReporting
       2834, 2846, 0x02005001, 		 // int CapReadBack
       2850, 2861, 0x02005001, 		 // int CapReverse
       2865, 2879, 0x01005001, 		 // bool CapScreenMode
       2884, 2907, 0x01005001, 		 // bool CapStatisticsReporting
       2912, 2930, 0x01005001, 		 // bool CapUpdateFirmware
       2935, 2955, 0x01005001, 		 // bool CapUpdateStatistics
       2960, 2972, 0x01005001, 		 // bool CapVMarquee
       2977, 2990, 0x02015003, 		 // int CharacterSet
       2994, 3011, 0x0a005001, 		 // QString CharacterSetList
       3019, 3035, 0x0a005001, 		 // QString CheckHealthText
       3043, 3051, 0x01005001, 		 // bool Claimed
       3056, 3064, 0x02005001, 		 // int Columns
       3068, 3093, 0x0a005001, 		 // QString ControlObjectDescription
       3101, 3122, 0x02005001, 		 // int ControlObjectVersion
       3126, 3140, 0x02015003, 		 // int CurrentWindow
       3144, 3157, 0x02015003, 		 // int CursorColumn
       3161, 3171, 0x02015003, 		 // int CursorRow
       3175, 3186, 0x02015003, 		 // int CursorType
       3190, 3203, 0x01015003, 		 // bool CursorUpdate
       3208, 3224, 0x0a005001, 		 // QString CustomGlyphList
       3232, 3249, 0x02015003, 		 // int DeviceBrightness
       3253, 3267, 0x02005001, 		 // int DeviceColumns
       3271, 3289, 0x0a005001, 		 // QString DeviceDescription
       3297, 3315, 0x02005001, 		 // int DeviceDescriptors
       3319, 3333, 0x01015003, 		 // bool DeviceEnabled
       3338, 3349, 0x0a005001, 		 // QString DeviceName
       3357, 3368, 0x02005001, 		 // int DeviceRows
       3372, 3386, 0x02005001, 		 // int DeviceWindows
       3390, 3403, 0x01015003, 		 // bool FreezeEvents
       3408, 3420, 0x02005001, 		 // int GlyphHeight
       3424, 3435, 0x02005001, 		 // int GlyphWidth
       3439, 3458, 0x02015003, 		 // int InterCharacterWait
       3462, 3478, 0x01015003, 		 // bool MapCharacterSet
       3483, 3497, 0x02015003, 		 // int MarqueeFormat
       3501, 3519, 0x02015003, 		 // int MarqueeRepeatWait
       3523, 3535, 0x02015003, 		 // int MarqueeType
       3539, 3555, 0x02015003, 		 // int MarqueeUnitWait
       3559, 3568, 0x02005001, 		 // int MaximumX
       3572, 3581, 0x02005001, 		 // int MaximumY
       3585, 3596, 0x02005001, 		 // int OpenResult
       3600, 3612, 0x02015003, 		 // int PowerNotify
       3616, 3627, 0x02005001, 		 // int PowerState
       3631, 3642, 0x02005001, 		 // int ResultCode
       3646, 3665, 0x02005001, 		 // int ResultCodeExtended
       3669, 3674, 0x02005001, 		 // int Rows
       3678, 3689, 0x02015003, 		 // int ScreenMode
       3693, 3708, 0x0a005001, 		 // QString ScreenModeList
       3716, 3741, 0x0a005001, 		 // QString ServiceObjectDescription
       3749, 3770, 0x02005001, 		 // int ServiceObjectVersion
       3774, 3780, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSLineDisplay() {
    static const char stringdata0[] = {
    "OPOS::OPOSLineDisplay\0"
    "Event Interface 5\0_IOPOSLineDisplayEvents\0Interface 0\0IOPOSLineDisplay\0Interface 1\0IOPOSLineDisplay_1_9\0Interface 2\0IOPOSLineDisplay_1_8\0Interface 3\0IOPOSLineDisplay_1_7\0Interface 4\0IOPOSLineDisplay_1_6\0"
    ""
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0"
    "name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0CreateWindow(int,int,int,int,int,int)\0"
    "ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0"
    "int\0\0DisplayBitmap(QString,int,int,int)\0FileName,Width,AlignmentX,AlignmentY\0int\0\0DisplayText(QString,int)\0Data,Attribute\0int\0\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0int\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetBitmap(int,QString,int,int,int)\0BitmapNumber,FileName,Width,AlignmentX,AlignmentY\0"
    "int\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0CursorRow\0\0\0SetCursorType(int)\0CursorType\0"
    "\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMapCharacterSet(bool)\0MapCharacterSet\0\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0\0\0SetMarqueeType(int)\0MarqueeType\0"
    "\0\0SetMarqueeUnitWait(int)\0MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetScreenMode(int)\0ScreenMode\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0"
    "\0"
    "BinaryConversion\0int\0BlinkRate\0int\0CapBitmap\0bool\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0bool\0CapCharacterSet\0int\0CapCompareFirmwareVersion\0bool\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0"
    "bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapMapCharacterSet\0bool\0CapPowerReporting\0int\0CapReadBack\0int\0CapReverse\0int\0CapScreenMode\0bool\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0"
    "bool\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0Columns\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0"
    "int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0int\0DeviceColumns\0int\0DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0"
    "int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0int\0MapCharacterSet\0bool\0MarqueeFormat\0int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0MaximumX\0int\0"
    "MaximumY\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0Rows\0int\0ScreenMode\0int\0ScreenModeList\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0"
    "State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSLineDisplay::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSLineDisplay(),
qt_meta_data_OPOS__OPOSLineDisplay }
};

void *OPOSLineDisplay::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSLineDisplay()))
        return static_cast<void*>(const_cast<OPOSLineDisplay*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLineDisplay[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       52,    10, // methods
       66,    270, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 238, 239, 243, 9,
       244, 256, 257, 261, 9,
       262, 270, 271, 275, 9,
       276, 313, 338, 342, 9,
       343, 381, 462, 466, 9,
       467, 492, 508, 512, 9,
       513, 529, 530, 534, 9,
       535, 563, 585, 589, 9,
       590, 625, 662, 666, 9,
       667, 692, 707, 711, 9,
       712, 747, 773, 777, 9,
       778, 792, 803, 807, 9,
       808, 836, 842, 846, 9,
       847, 866, 873, 877, 9,
       878, 894, 895, 899, 9,
       900, 925, 942, 946, 9,
       947, 976, 994, 998, 9,
       999, 1016, 1023, 1024, 9,
       1025, 1055, 1081, 1082, 9,
       1083, 1114, 1170, 1171, 9,
       1172, 1199, 1208, 1209, 9,
       1210, 1224, 1225, 1229, 9,
       1230, 1250, 1255, 1256, 9,
       1257, 1277, 1293, 1297, 9,
       1298, 1323, 1340, 1341, 9,
       1342, 1377, 1427, 1431, 9,
       1432, 1450, 1460, 1461, 9,
       1462, 1483, 1496, 1497, 9,
       1498, 1520, 1534, 1535, 9,
       1536, 1557, 1570, 1571, 9,
       1572, 1590, 1600, 1601, 9,
       1602, 1621, 1632, 1633, 9,
       1634, 1656, 1669, 1670, 9,
       1671, 1694, 1715, 1719, 9,
       1720, 1745, 1762, 1763, 9,
       1764, 1787, 1801, 1802, 9,
       1803, 1825, 1838, 1839, 9,
       1840, 1867, 1886, 1887, 9,
       1888, 1913, 1929, 1930, 9,
       1931, 1953, 1967, 1968, 9,
       1969, 1995, 2013, 2014, 9,
       2015, 2035, 2047, 2048, 9,
       2049, 2073, 2089, 2090, 9,
       2091, 2111, 2123, 2124, 9,
       2125, 2144, 2155, 2156, 9,
       2157, 2181, 2198, 2202, 9,
       2203, 2229, 2246, 2250, 9,

 // properties: name, type, flags
       2251, 2268, 0x02015003, 		 // int BinaryConversion
       2272, 2282, 0x02015003, 		 // int BlinkRate
       2286, 2296, 0x01005001, 		 // bool CapBitmap
       2301, 2310, 0x02005001, 		 // int CapBlink
       2314, 2327, 0x01005001, 		 // bool CapBlinkRate
       2332, 2346, 0x01005001, 		 // bool CapBrightness
       2351, 2367, 0x02005001, 		 // int CapCharacterSet
       2371, 2397, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2402, 2416, 0x02005001, 		 // int CapCursorType
       2420, 2435, 0x01005001, 		 // bool CapCustomGlyph
       2440, 2455, 0x01005001, 		 // bool CapDescriptors
       2460, 2472, 0x01005001, 		 // bool CapHMarquee
       2477, 2490, 0x01005001, 		 // bool CapICharWait
       2495, 2514, 0x01005001, 		 // bool CapMapCharacterSet
       2519, 2537, 0x02005001, 		 // int CapPowerReporting
       2541, 2553, 0x02005001, 		 // int CapReadBack
       2557, 2568, 0x02005001, 		 // int CapReverse
       2572, 2586, 0x01005001, 		 // bool CapScreenMode
       2591, 2614, 0x01005001, 		 // bool CapStatisticsReporting
       2619, 2637, 0x01005001, 		 // bool CapUpdateFirmware
       2642, 2662, 0x01005001, 		 // bool CapUpdateStatistics
       2667, 2679, 0x01005001, 		 // bool CapVMarquee
       2684, 2697, 0x02015003, 		 // int CharacterSet
       2701, 2718, 0x0a005001, 		 // QString CharacterSetList
       2726, 2742, 0x0a005001, 		 // QString CheckHealthText
       2750, 2758, 0x01005001, 		 // bool Claimed
       2763, 2771, 0x02005001, 		 // int Columns
       2775, 2800, 0x0a005001, 		 // QString ControlObjectDescription
       2808, 2829, 0x02005001, 		 // int ControlObjectVersion
       2833, 2847, 0x02015003, 		 // int CurrentWindow
       2851, 2864, 0x02015003, 		 // int CursorColumn
       2868, 2878, 0x02015003, 		 // int CursorRow
       2882, 2893, 0x02015003, 		 // int CursorType
       2897, 2910, 0x01015003, 		 // bool CursorUpdate
       2915, 2931, 0x0a005001, 		 // QString CustomGlyphList
       2939, 2956, 0x02015003, 		 // int DeviceBrightness
       2960, 2974, 0x02005001, 		 // int DeviceColumns
       2978, 2996, 0x0a005001, 		 // QString DeviceDescription
       3004, 3022, 0x02005001, 		 // int DeviceDescriptors
       3026, 3040, 0x01015003, 		 // bool DeviceEnabled
       3045, 3056, 0x0a005001, 		 // QString DeviceName
       3064, 3075, 0x02005001, 		 // int DeviceRows
       3079, 3093, 0x02005001, 		 // int DeviceWindows
       3097, 3110, 0x01015003, 		 // bool FreezeEvents
       3115, 3127, 0x02005001, 		 // int GlyphHeight
       3131, 3142, 0x02005001, 		 // int GlyphWidth
       3146, 3165, 0x02015003, 		 // int InterCharacterWait
       3169, 3185, 0x01015003, 		 // bool MapCharacterSet
       3190, 3204, 0x02015003, 		 // int MarqueeFormat
       3208, 3226, 0x02015003, 		 // int MarqueeRepeatWait
       3230, 3242, 0x02015003, 		 // int MarqueeType
       3246, 3262, 0x02015003, 		 // int MarqueeUnitWait
       3266, 3275, 0x02005001, 		 // int MaximumX
       3279, 3288, 0x02005001, 		 // int MaximumY
       3292, 3303, 0x02005001, 		 // int OpenResult
       3307, 3319, 0x02015003, 		 // int PowerNotify
       3323, 3334, 0x02005001, 		 // int PowerState
       3338, 3349, 0x02005001, 		 // int ResultCode
       3353, 3372, 0x02005001, 		 // int ResultCodeExtended
       3376, 3381, 0x02005001, 		 // int Rows
       3385, 3396, 0x02015003, 		 // int ScreenMode
       3400, 3415, 0x0a005001, 		 // QString ScreenModeList
       3423, 3448, 0x0a005001, 		 // QString ServiceObjectDescription
       3456, 3477, 0x02005001, 		 // int ServiceObjectVersion
       3481, 3487, 0x02005001, 		 // int State
       3491, 3499, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLineDisplay() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLineDisplay\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0"
    "\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0CreateWindow(int,int,int,int,int,int)\0ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0"
    "int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisplayBitmap(QString,int,int,int)\0FileName,Width,AlignmentX,AlignmentY\0int\0"
    "\0DisplayText(QString,int)\0Data,Attribute\0int\0\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0"
    "int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0"
    "int\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetBitmap(int,QString,int,int,int)\0BitmapNumber,FileName,Width,AlignmentX,AlignmentY\0int\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0"
    "\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0CursorRow\0\0\0SetCursorType(int)\0CursorType\0\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0"
    "int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMapCharacterSet(bool)\0MapCharacterSet\0"
    "\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0\0\0SetMarqueeType(int)\0MarqueeType\0\0\0SetMarqueeUnitWait(int)\0MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetScreenMode(int)\0"
    "ScreenMode\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0BlinkRate\0int\0CapBitmap\0bool\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0"
    "bool\0CapCharacterSet\0int\0CapCompareFirmwareVersion\0bool\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapMapCharacterSet\0bool\0CapPowerReporting\0int\0CapReadBack\0"
    "int\0CapReverse\0int\0CapScreenMode\0bool\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0QString\0Claimed\0"
    "bool\0Columns\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0int\0"
    "DeviceColumns\0int\0DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0"
    "int\0MapCharacterSet\0bool\0MarqueeFormat\0int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0MaximumX\0int\0MaximumY\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0Rows\0int\0ScreenMode\0int\0ScreenModeList\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLineDisplay::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLineDisplay(),
qt_meta_data_OPOS__IOPOSLineDisplay }
};

void *IOPOSLineDisplay::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLineDisplay()))
        return static_cast<void*>(const_cast<IOPOSLineDisplay*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLineDisplay_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       52,    10, // methods
       66,    270, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       27, 66, 88, 89, 5,
       90, 115, 120, 121, 5,
       122, 148, 163, 164, 5,

 // slots: signature, parameters, type, tag, flags
       165, 182, 188, 192, 9,
       193, 210, 218, 222, 9,
       223, 242, 243, 247, 9,
       248, 260, 261, 265, 9,
       266, 274, 275, 279, 9,
       280, 317, 342, 346, 9,
       347, 385, 466, 470, 9,
       471, 496, 512, 516, 9,
       517, 533, 534, 538, 9,
       539, 567, 589, 593, 9,
       594, 629, 666, 670, 9,
       671, 696, 711, 715, 9,
       716, 751, 777, 781, 9,
       782, 796, 807, 811, 9,
       812, 840, 846, 850, 9,
       851, 870, 877, 881, 9,
       882, 898, 899, 903, 9,
       904, 929, 946, 950, 9,
       951, 980, 998, 1002, 9,
       1003, 1020, 1027, 1028, 9,
       1029, 1059, 1085, 1086, 9,
       1087, 1118, 1174, 1175, 9,
       1176, 1203, 1212, 1213, 9,
       1214, 1228, 1229, 1233, 9,
       1234, 1254, 1259, 1260, 9,
       1261, 1281, 1297, 1301, 9,
       1302, 1327, 1344, 1345, 9,
       1346, 1381, 1431, 1435, 9,
       1436, 1454, 1464, 1465, 9,
       1466, 1487, 1500, 1501, 9,
       1502, 1524, 1538, 1539, 9,
       1540, 1561, 1574, 1575, 9,
       1576, 1594, 1604, 1605, 9,
       1606, 1625, 1636, 1637, 9,
       1638, 1660, 1673, 1674, 9,
       1675, 1698, 1719, 1723, 9,
       1724, 1749, 1766, 1767, 9,
       1768, 1791, 1805, 1806, 9,
       1807, 1829, 1842, 1843, 9,
       1844, 1871, 1890, 1891, 9,
       1892, 1917, 1933, 1934, 9,
       1935, 1957, 1971, 1972, 9,
       1973, 1999, 2017, 2018, 9,
       2019, 2039, 2051, 2052, 9,
       2053, 2077, 2093, 2094, 9,
       2095, 2115, 2127, 2128, 9,
       2129, 2148, 2159, 2160, 9,
       2161, 2185, 2202, 2206, 9,
       2207, 2233, 2250, 2254, 9,

 // properties: name, type, flags
       2255, 2272, 0x02015003, 		 // int BinaryConversion
       2276, 2286, 0x02015003, 		 // int BlinkRate
       2290, 2300, 0x01005001, 		 // bool CapBitmap
       2305, 2314, 0x02005001, 		 // int CapBlink
       2318, 2331, 0x01005001, 		 // bool CapBlinkRate
       2336, 2350, 0x01005001, 		 // bool CapBrightness
       2355, 2371, 0x02005001, 		 // int CapCharacterSet
       2375, 2401, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2406, 2420, 0x02005001, 		 // int CapCursorType
       2424, 2439, 0x01005001, 		 // bool CapCustomGlyph
       2444, 2459, 0x01005001, 		 // bool CapDescriptors
       2464, 2476, 0x01005001, 		 // bool CapHMarquee
       2481, 2494, 0x01005001, 		 // bool CapICharWait
       2499, 2518, 0x01005001, 		 // bool CapMapCharacterSet
       2523, 2541, 0x02005001, 		 // int CapPowerReporting
       2545, 2557, 0x02005001, 		 // int CapReadBack
       2561, 2572, 0x02005001, 		 // int CapReverse
       2576, 2590, 0x01005001, 		 // bool CapScreenMode
       2595, 2618, 0x01005001, 		 // bool CapStatisticsReporting
       2623, 2641, 0x01005001, 		 // bool CapUpdateFirmware
       2646, 2666, 0x01005001, 		 // bool CapUpdateStatistics
       2671, 2683, 0x01005001, 		 // bool CapVMarquee
       2688, 2701, 0x02015003, 		 // int CharacterSet
       2705, 2722, 0x0a005001, 		 // QString CharacterSetList
       2730, 2746, 0x0a005001, 		 // QString CheckHealthText
       2754, 2762, 0x01005001, 		 // bool Claimed
       2767, 2775, 0x02005001, 		 // int Columns
       2779, 2804, 0x0a005001, 		 // QString ControlObjectDescription
       2812, 2833, 0x02005001, 		 // int ControlObjectVersion
       2837, 2851, 0x02015003, 		 // int CurrentWindow
       2855, 2868, 0x02015003, 		 // int CursorColumn
       2872, 2882, 0x02015003, 		 // int CursorRow
       2886, 2897, 0x02015003, 		 // int CursorType
       2901, 2914, 0x01015003, 		 // bool CursorUpdate
       2919, 2935, 0x0a005001, 		 // QString CustomGlyphList
       2943, 2960, 0x02015003, 		 // int DeviceBrightness
       2964, 2978, 0x02005001, 		 // int DeviceColumns
       2982, 3000, 0x0a005001, 		 // QString DeviceDescription
       3008, 3026, 0x02005001, 		 // int DeviceDescriptors
       3030, 3044, 0x01015003, 		 // bool DeviceEnabled
       3049, 3060, 0x0a005001, 		 // QString DeviceName
       3068, 3079, 0x02005001, 		 // int DeviceRows
       3083, 3097, 0x02005001, 		 // int DeviceWindows
       3101, 3114, 0x01015003, 		 // bool FreezeEvents
       3119, 3131, 0x02005001, 		 // int GlyphHeight
       3135, 3146, 0x02005001, 		 // int GlyphWidth
       3150, 3169, 0x02015003, 		 // int InterCharacterWait
       3173, 3189, 0x01015003, 		 // bool MapCharacterSet
       3194, 3208, 0x02015003, 		 // int MarqueeFormat
       3212, 3230, 0x02015003, 		 // int MarqueeRepeatWait
       3234, 3246, 0x02015003, 		 // int MarqueeType
       3250, 3266, 0x02015003, 		 // int MarqueeUnitWait
       3270, 3279, 0x02005001, 		 // int MaximumX
       3283, 3292, 0x02005001, 		 // int MaximumY
       3296, 3307, 0x02005001, 		 // int OpenResult
       3311, 3323, 0x02015003, 		 // int PowerNotify
       3327, 3338, 0x02005001, 		 // int PowerState
       3342, 3353, 0x02005001, 		 // int ResultCode
       3357, 3376, 0x02005001, 		 // int ResultCodeExtended
       3380, 3385, 0x02005001, 		 // int Rows
       3389, 3400, 0x02015003, 		 // int ScreenMode
       3404, 3419, 0x0a005001, 		 // QString ScreenModeList
       3427, 3452, 0x0a005001, 		 // QString ServiceObjectDescription
       3460, 3481, 0x02005001, 		 // int ServiceObjectVersion
       3485, 3491, 0x02005001, 		 // int State
       3495, 3503, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLineDisplay_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0"
    "\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0CreateWindow(int,int,int,int,int,int)\0ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0"
    "int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisplayBitmap(QString,int,int,int)\0FileName,Width,AlignmentX,AlignmentY\0int\0"
    "\0DisplayText(QString,int)\0Data,Attribute\0int\0\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0"
    "int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0"
    "int\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetBitmap(int,QString,int,int,int)\0BitmapNumber,FileName,Width,AlignmentX,AlignmentY\0int\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0"
    "\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0CursorRow\0\0\0SetCursorType(int)\0CursorType\0\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0"
    "int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMapCharacterSet(bool)\0MapCharacterSet\0"
    "\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0\0\0SetMarqueeType(int)\0MarqueeType\0\0\0SetMarqueeUnitWait(int)\0MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetScreenMode(int)\0"
    "ScreenMode\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0BlinkRate\0int\0CapBitmap\0bool\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0"
    "bool\0CapCharacterSet\0int\0CapCompareFirmwareVersion\0bool\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapMapCharacterSet\0bool\0CapPowerReporting\0int\0CapReadBack\0"
    "int\0CapReverse\0int\0CapScreenMode\0bool\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0QString\0Claimed\0"
    "bool\0Columns\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0int\0"
    "DeviceColumns\0int\0DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0"
    "int\0MapCharacterSet\0bool\0MarqueeFormat\0int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0MaximumX\0int\0MaximumY\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0Rows\0int\0ScreenMode\0int\0ScreenModeList\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLineDisplay_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_9(),
qt_meta_data_OPOS__IOPOSLineDisplay_1_9 }
};

void *IOPOSLineDisplay_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_9()))
        return static_cast<void*>(const_cast<IOPOSLineDisplay_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLineDisplay_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       50,    10, // methods
       64,    260, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       27, 66, 88, 89, 5,
       90, 115, 120, 121, 5,
       122, 148, 163, 164, 5,

 // slots: signature, parameters, type, tag, flags
       165, 182, 188, 192, 9,
       193, 210, 218, 222, 9,
       223, 242, 243, 247, 9,
       248, 260, 261, 265, 9,
       266, 274, 275, 279, 9,
       280, 318, 399, 403, 9,
       404, 429, 445, 449, 9,
       450, 466, 467, 471, 9,
       472, 500, 522, 526, 9,
       527, 562, 599, 603, 9,
       604, 629, 644, 648, 9,
       649, 684, 710, 714, 9,
       715, 729, 740, 744, 9,
       745, 773, 779, 783, 9,
       784, 803, 810, 814, 9,
       815, 831, 832, 836, 9,
       837, 862, 879, 883, 9,
       884, 913, 931, 935, 9,
       936, 953, 960, 961, 9,
       962, 992, 1018, 1019, 9,
       1020, 1051, 1107, 1108, 9,
       1109, 1136, 1145, 1146, 9,
       1147, 1161, 1162, 1166, 9,
       1167, 1187, 1192, 1193, 9,
       1194, 1214, 1230, 1234, 9,
       1235, 1260, 1277, 1278, 9,
       1279, 1314, 1364, 1368, 9,
       1369, 1387, 1397, 1398, 9,
       1399, 1420, 1433, 1434, 9,
       1435, 1457, 1471, 1472, 9,
       1473, 1494, 1507, 1508, 9,
       1509, 1527, 1537, 1538, 9,
       1539, 1558, 1569, 1570, 9,
       1571, 1593, 1606, 1607, 9,
       1608, 1631, 1652, 1656, 9,
       1657, 1682, 1699, 1700, 9,
       1701, 1724, 1738, 1739, 9,
       1740, 1762, 1775, 1776, 9,
       1777, 1804, 1823, 1824, 9,
       1825, 1850, 1866, 1867, 9,
       1868, 1890, 1904, 1905, 9,
       1906, 1932, 1950, 1951, 9,
       1952, 1972, 1984, 1985, 9,
       1986, 2010, 2026, 2027, 9,
       2028, 2048, 2060, 2061, 9,
       2062, 2081, 2092, 2093, 9,
       2094, 2120, 2137, 2141, 9,

 // properties: name, type, flags
       2142, 2159, 0x02015003, 		 // int BinaryConversion
       2163, 2173, 0x02015003, 		 // int BlinkRate
       2177, 2187, 0x01005001, 		 // bool CapBitmap
       2192, 2201, 0x02005001, 		 // int CapBlink
       2205, 2218, 0x01005001, 		 // bool CapBlinkRate
       2223, 2237, 0x01005001, 		 // bool CapBrightness
       2242, 2258, 0x02005001, 		 // int CapCharacterSet
       2262, 2276, 0x02005001, 		 // int CapCursorType
       2280, 2295, 0x01005001, 		 // bool CapCustomGlyph
       2300, 2315, 0x01005001, 		 // bool CapDescriptors
       2320, 2332, 0x01005001, 		 // bool CapHMarquee
       2337, 2350, 0x01005001, 		 // bool CapICharWait
       2355, 2374, 0x01005001, 		 // bool CapMapCharacterSet
       2379, 2397, 0x02005001, 		 // int CapPowerReporting
       2401, 2413, 0x02005001, 		 // int CapReadBack
       2417, 2428, 0x02005001, 		 // int CapReverse
       2432, 2446, 0x01005001, 		 // bool CapScreenMode
       2451, 2474, 0x01005001, 		 // bool CapStatisticsReporting
       2479, 2499, 0x01005001, 		 // bool CapUpdateStatistics
       2504, 2516, 0x01005001, 		 // bool CapVMarquee
       2521, 2534, 0x02015003, 		 // int CharacterSet
       2538, 2555, 0x0a005001, 		 // QString CharacterSetList
       2563, 2579, 0x0a005001, 		 // QString CheckHealthText
       2587, 2595, 0x01005001, 		 // bool Claimed
       2600, 2608, 0x02005001, 		 // int Columns
       2612, 2637, 0x0a005001, 		 // QString ControlObjectDescription
       2645, 2666, 0x02005001, 		 // int ControlObjectVersion
       2670, 2684, 0x02015003, 		 // int CurrentWindow
       2688, 2701, 0x02015003, 		 // int CursorColumn
       2705, 2715, 0x02015003, 		 // int CursorRow
       2719, 2730, 0x02015003, 		 // int CursorType
       2734, 2747, 0x01015003, 		 // bool CursorUpdate
       2752, 2768, 0x0a005001, 		 // QString CustomGlyphList
       2776, 2793, 0x02015003, 		 // int DeviceBrightness
       2797, 2811, 0x02005001, 		 // int DeviceColumns
       2815, 2833, 0x0a005001, 		 // QString DeviceDescription
       2841, 2859, 0x02005001, 		 // int DeviceDescriptors
       2863, 2877, 0x01015003, 		 // bool DeviceEnabled
       2882, 2893, 0x0a005001, 		 // QString DeviceName
       2901, 2912, 0x02005001, 		 // int DeviceRows
       2916, 2930, 0x02005001, 		 // int DeviceWindows
       2934, 2947, 0x01015003, 		 // bool FreezeEvents
       2952, 2964, 0x02005001, 		 // int GlyphHeight
       2968, 2979, 0x02005001, 		 // int GlyphWidth
       2983, 3002, 0x02015003, 		 // int InterCharacterWait
       3006, 3022, 0x01015003, 		 // bool MapCharacterSet
       3027, 3041, 0x02015003, 		 // int MarqueeFormat
       3045, 3063, 0x02015003, 		 // int MarqueeRepeatWait
       3067, 3079, 0x02015003, 		 // int MarqueeType
       3083, 3099, 0x02015003, 		 // int MarqueeUnitWait
       3103, 3112, 0x02005001, 		 // int MaximumX
       3116, 3125, 0x02005001, 		 // int MaximumY
       3129, 3140, 0x02005001, 		 // int OpenResult
       3144, 3156, 0x02015003, 		 // int PowerNotify
       3160, 3171, 0x02005001, 		 // int PowerState
       3175, 3186, 0x02005001, 		 // int ResultCode
       3190, 3209, 0x02005001, 		 // int ResultCodeExtended
       3213, 3218, 0x02005001, 		 // int Rows
       3222, 3233, 0x02015003, 		 // int ScreenMode
       3237, 3252, 0x0a005001, 		 // QString ScreenModeList
       3260, 3285, 0x0a005001, 		 // QString ServiceObjectDescription
       3293, 3314, 0x02005001, 		 // int ServiceObjectVersion
       3318, 3324, 0x02005001, 		 // int State
       3328, 3336, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLineDisplay_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0"
    "\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CreateWindow(int,int,int,int,int,int)\0ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0"
    "int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisplayBitmap(QString,int,int,int)\0FileName,Width,AlignmentX,AlignmentY\0int\0\0DisplayText(QString,int)\0Data,Attribute\0int\0"
    "\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0int\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetBitmap(int,QString,int,int,int)\0"
    "BitmapNumber,FileName,Width,AlignmentX,AlignmentY\0int\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0"
    "CursorRow\0\0\0SetCursorType(int)\0CursorType\0\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMapCharacterSet(bool)\0MapCharacterSet\0\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0"
    "\0\0SetMarqueeType(int)\0MarqueeType\0\0\0SetMarqueeUnitWait(int)\0MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetScreenMode(int)\0ScreenMode\0\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0"
    "int\0BlinkRate\0int\0CapBitmap\0bool\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0bool\0CapCharacterSet\0int\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapMapCharacterSet\0"
    "bool\0CapPowerReporting\0int\0CapReadBack\0int\0CapReverse\0int\0CapScreenMode\0bool\0CapStatisticsReporting\0bool\0CapUpdateStatistics\0bool\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0"
    "QString\0Claimed\0bool\0Columns\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0"
    "int\0DeviceColumns\0int\0DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0"
    "int\0MapCharacterSet\0bool\0MarqueeFormat\0int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0MaximumX\0int\0MaximumY\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0Rows\0int\0ScreenMode\0int\0ScreenModeList\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLineDisplay_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_8(),
qt_meta_data_OPOS__IOPOSLineDisplay_1_8 }
};

void *IOPOSLineDisplay_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_8()))
        return static_cast<void*>(const_cast<IOPOSLineDisplay_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLineDisplay_1_7[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       47,    10, // methods
       62,    245, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       27, 66, 88, 89, 5,
       90, 115, 120, 121, 5,
       122, 148, 163, 164, 5,

 // slots: signature, parameters, type, tag, flags
       165, 182, 188, 192, 9,
       193, 210, 218, 222, 9,
       223, 242, 243, 247, 9,
       248, 260, 261, 265, 9,
       266, 274, 275, 279, 9,
       280, 318, 399, 403, 9,
       404, 429, 445, 449, 9,
       450, 466, 467, 471, 9,
       472, 500, 522, 526, 9,
       527, 562, 599, 603, 9,
       604, 629, 644, 648, 9,
       649, 684, 710, 714, 9,
       715, 729, 740, 744, 9,
       745, 773, 779, 783, 9,
       784, 803, 810, 814, 9,
       815, 831, 832, 836, 9,
       837, 854, 861, 862, 9,
       863, 893, 919, 920, 9,
       921, 952, 1008, 1009, 9,
       1010, 1037, 1046, 1047, 9,
       1048, 1062, 1063, 1067, 9,
       1068, 1088, 1093, 1094, 9,
       1095, 1115, 1131, 1135, 9,
       1136, 1161, 1178, 1179, 9,
       1180, 1215, 1265, 1269, 9,
       1270, 1288, 1298, 1299, 9,
       1300, 1321, 1334, 1335, 9,
       1336, 1358, 1372, 1373, 9,
       1374, 1395, 1408, 1409, 9,
       1410, 1428, 1438, 1439, 9,
       1440, 1459, 1470, 1471, 9,
       1472, 1494, 1507, 1508, 9,
       1509, 1532, 1553, 1557, 9,
       1558, 1583, 1600, 1601, 9,
       1602, 1625, 1639, 1640, 9,
       1641, 1663, 1676, 1677, 9,
       1678, 1705, 1724, 1725, 9,
       1726, 1751, 1767, 1768, 9,
       1769, 1791, 1805, 1806, 9,
       1807, 1833, 1851, 1852, 9,
       1853, 1873, 1885, 1886, 9,
       1887, 1911, 1927, 1928, 9,
       1929, 1949, 1961, 1962, 9,
       1963, 1982, 1993, 1994, 9,

 // properties: name, type, flags
       1995, 2012, 0x02015003, 		 // int BinaryConversion
       2016, 2026, 0x02015003, 		 // int BlinkRate
       2030, 2040, 0x01005001, 		 // bool CapBitmap
       2045, 2054, 0x02005001, 		 // int CapBlink
       2058, 2071, 0x01005001, 		 // bool CapBlinkRate
       2076, 2090, 0x01005001, 		 // bool CapBrightness
       2095, 2111, 0x02005001, 		 // int CapCharacterSet
       2115, 2129, 0x02005001, 		 // int CapCursorType
       2133, 2148, 0x01005001, 		 // bool CapCustomGlyph
       2153, 2168, 0x01005001, 		 // bool CapDescriptors
       2173, 2185, 0x01005001, 		 // bool CapHMarquee
       2190, 2203, 0x01005001, 		 // bool CapICharWait
       2208, 2227, 0x01005001, 		 // bool CapMapCharacterSet
       2232, 2250, 0x02005001, 		 // int CapPowerReporting
       2254, 2266, 0x02005001, 		 // int CapReadBack
       2270, 2281, 0x02005001, 		 // int CapReverse
       2285, 2299, 0x01005001, 		 // bool CapScreenMode
       2304, 2316, 0x01005001, 		 // bool CapVMarquee
       2321, 2334, 0x02015003, 		 // int CharacterSet
       2338, 2355, 0x0a005001, 		 // QString CharacterSetList
       2363, 2379, 0x0a005001, 		 // QString CheckHealthText
       2387, 2395, 0x01005001, 		 // bool Claimed
       2400, 2408, 0x02005001, 		 // int Columns
       2412, 2437, 0x0a005001, 		 // QString ControlObjectDescription
       2445, 2466, 0x02005001, 		 // int ControlObjectVersion
       2470, 2484, 0x02015003, 		 // int CurrentWindow
       2488, 2501, 0x02015003, 		 // int CursorColumn
       2505, 2515, 0x02015003, 		 // int CursorRow
       2519, 2530, 0x02015003, 		 // int CursorType
       2534, 2547, 0x01015003, 		 // bool CursorUpdate
       2552, 2568, 0x0a005001, 		 // QString CustomGlyphList
       2576, 2593, 0x02015003, 		 // int DeviceBrightness
       2597, 2611, 0x02005001, 		 // int DeviceColumns
       2615, 2633, 0x0a005001, 		 // QString DeviceDescription
       2641, 2659, 0x02005001, 		 // int DeviceDescriptors
       2663, 2677, 0x01015003, 		 // bool DeviceEnabled
       2682, 2693, 0x0a005001, 		 // QString DeviceName
       2701, 2712, 0x02005001, 		 // int DeviceRows
       2716, 2730, 0x02005001, 		 // int DeviceWindows
       2734, 2747, 0x01015003, 		 // bool FreezeEvents
       2752, 2764, 0x02005001, 		 // int GlyphHeight
       2768, 2779, 0x02005001, 		 // int GlyphWidth
       2783, 2802, 0x02015003, 		 // int InterCharacterWait
       2806, 2822, 0x01015003, 		 // bool MapCharacterSet
       2827, 2841, 0x02015003, 		 // int MarqueeFormat
       2845, 2863, 0x02015003, 		 // int MarqueeRepeatWait
       2867, 2879, 0x02015003, 		 // int MarqueeType
       2883, 2899, 0x02015003, 		 // int MarqueeUnitWait
       2903, 2912, 0x02005001, 		 // int MaximumX
       2916, 2925, 0x02005001, 		 // int MaximumY
       2929, 2940, 0x02005001, 		 // int OpenResult
       2944, 2956, 0x02015003, 		 // int PowerNotify
       2960, 2971, 0x02005001, 		 // int PowerState
       2975, 2986, 0x02005001, 		 // int ResultCode
       2990, 3009, 0x02005001, 		 // int ResultCodeExtended
       3013, 3018, 0x02005001, 		 // int Rows
       3022, 3033, 0x02015003, 		 // int ScreenMode
       3037, 3052, 0x0a005001, 		 // QString ScreenModeList
       3060, 3085, 0x0a005001, 		 // QString ServiceObjectDescription
       3093, 3114, 0x02005001, 		 // int ServiceObjectVersion
       3118, 3124, 0x02005001, 		 // int State
       3128, 3136, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_7() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLineDisplay_1_7\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0"
    "\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CreateWindow(int,int,int,int,int,int)\0ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0"
    "int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisplayBitmap(QString,int,int,int)\0FileName,Width,AlignmentX,AlignmentY\0int\0\0DisplayText(QString,int)\0Data,Attribute\0int\0"
    "\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0int\0\0ReleaseDevice()\0\0int\0\0SODataDummy(int)\0"
    "Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0"
    "\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0int\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetBitmap(int,QString,int,int,int)\0BitmapNumber,FileName,Width,AlignmentX,AlignmentY\0"
    "int\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0CursorRow\0\0\0SetCursorType(int)\0CursorType\0"
    "\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMapCharacterSet(bool)\0MapCharacterSet\0\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0\0\0SetMarqueeType(int)\0MarqueeType\0"
    "\0\0SetMarqueeUnitWait(int)\0MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetScreenMode(int)\0ScreenMode\0\0\0"
    "BinaryConversion\0int\0BlinkRate\0int\0CapBitmap\0bool\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0"
    "bool\0CapCharacterSet\0int\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapMapCharacterSet\0bool\0CapPowerReporting\0int\0CapReadBack\0int\0CapReverse\0int\0CapScreenMode\0"
    "bool\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0Columns\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0"
    "int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0int\0DeviceColumns\0int\0DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0"
    "int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0int\0MapCharacterSet\0bool\0MarqueeFormat\0int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0MaximumX\0int\0"
    "MaximumY\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0Rows\0int\0ScreenMode\0int\0ScreenModeList\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0"
    "State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLineDisplay_1_7::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_7(),
qt_meta_data_OPOS__IOPOSLineDisplay_1_7 }
};

void *IOPOSLineDisplay_1_7::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_7()))
        return static_cast<void*>(const_cast<IOPOSLineDisplay_1_7*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLineDisplay_1_6[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       43,    10, // methods
       54,    225, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       27, 66, 88, 89, 5,
       90, 115, 120, 121, 5,
       122, 148, 163, 164, 5,

 // slots: signature, parameters, type, tag, flags
       165, 182, 188, 192, 9,
       193, 210, 218, 222, 9,
       223, 242, 243, 247, 9,
       248, 260, 261, 265, 9,
       266, 274, 275, 279, 9,
       280, 318, 399, 403, 9,
       404, 429, 445, 449, 9,
       450, 466, 467, 471, 9,
       472, 500, 522, 526, 9,
       527, 552, 567, 571, 9,
       572, 607, 633, 637, 9,
       638, 652, 663, 667, 9,
       668, 696, 702, 706, 9,
       707, 726, 733, 737, 9,
       738, 754, 755, 759, 9,
       760, 777, 784, 785, 9,
       786, 816, 842, 843, 9,
       844, 875, 931, 932, 9,
       933, 960, 969, 970, 9,
       971, 985, 986, 990, 9,
       991, 1011, 1016, 1017, 9,
       1018, 1038, 1054, 1058, 9,
       1059, 1084, 1101, 1102, 9,
       1103, 1121, 1131, 1132, 9,
       1133, 1154, 1167, 1168, 9,
       1169, 1191, 1205, 1206, 9,
       1207, 1228, 1241, 1242, 9,
       1243, 1261, 1271, 1272, 9,
       1273, 1292, 1303, 1304, 9,
       1305, 1327, 1340, 1341, 9,
       1342, 1365, 1386, 1390, 9,
       1391, 1416, 1433, 1434, 9,
       1435, 1458, 1472, 1473, 9,
       1474, 1496, 1509, 1510, 9,
       1511, 1538, 1557, 1558, 9,
       1559, 1581, 1595, 1596, 9,
       1597, 1623, 1641, 1642, 9,
       1643, 1663, 1675, 1676, 9,
       1677, 1701, 1717, 1718, 9,
       1719, 1739, 1751, 1752, 9,

 // properties: name, type, flags
       1753, 1770, 0x02015003, 		 // int BinaryConversion
       1774, 1784, 0x02015003, 		 // int BlinkRate
       1788, 1797, 0x02005001, 		 // int CapBlink
       1801, 1814, 0x01005001, 		 // bool CapBlinkRate
       1819, 1833, 0x01005001, 		 // bool CapBrightness
       1838, 1854, 0x02005001, 		 // int CapCharacterSet
       1858, 1872, 0x02005001, 		 // int CapCursorType
       1876, 1891, 0x01005001, 		 // bool CapCustomGlyph
       1896, 1911, 0x01005001, 		 // bool CapDescriptors
       1916, 1928, 0x01005001, 		 // bool CapHMarquee
       1933, 1946, 0x01005001, 		 // bool CapICharWait
       1951, 1969, 0x02005001, 		 // int CapPowerReporting
       1973, 1985, 0x02005001, 		 // int CapReadBack
       1989, 2000, 0x02005001, 		 // int CapReverse
       2004, 2016, 0x01005001, 		 // bool CapVMarquee
       2021, 2034, 0x02015003, 		 // int CharacterSet
       2038, 2055, 0x0a005001, 		 // QString CharacterSetList
       2063, 2079, 0x0a005001, 		 // QString CheckHealthText
       2087, 2095, 0x01005001, 		 // bool Claimed
       2100, 2108, 0x02005001, 		 // int Columns
       2112, 2137, 0x0a005001, 		 // QString ControlObjectDescription
       2145, 2166, 0x02005001, 		 // int ControlObjectVersion
       2170, 2184, 0x02015003, 		 // int CurrentWindow
       2188, 2201, 0x02015003, 		 // int CursorColumn
       2205, 2215, 0x02015003, 		 // int CursorRow
       2219, 2230, 0x02015003, 		 // int CursorType
       2234, 2247, 0x01015003, 		 // bool CursorUpdate
       2252, 2268, 0x0a005001, 		 // QString CustomGlyphList
       2276, 2293, 0x02015003, 		 // int DeviceBrightness
       2297, 2311, 0x02005001, 		 // int DeviceColumns
       2315, 2333, 0x0a005001, 		 // QString DeviceDescription
       2341, 2359, 0x02005001, 		 // int DeviceDescriptors
       2363, 2377, 0x01015003, 		 // bool DeviceEnabled
       2382, 2393, 0x0a005001, 		 // QString DeviceName
       2401, 2412, 0x02005001, 		 // int DeviceRows
       2416, 2430, 0x02005001, 		 // int DeviceWindows
       2434, 2447, 0x01015003, 		 // bool FreezeEvents
       2452, 2464, 0x02005001, 		 // int GlyphHeight
       2468, 2479, 0x02005001, 		 // int GlyphWidth
       2483, 2502, 0x02015003, 		 // int InterCharacterWait
       2506, 2520, 0x02015003, 		 // int MarqueeFormat
       2524, 2542, 0x02015003, 		 // int MarqueeRepeatWait
       2546, 2558, 0x02015003, 		 // int MarqueeType
       2562, 2578, 0x02015003, 		 // int MarqueeUnitWait
       2582, 2593, 0x02005001, 		 // int OpenResult
       2597, 2609, 0x02015003, 		 // int PowerNotify
       2613, 2624, 0x02005001, 		 // int PowerState
       2628, 2639, 0x02005001, 		 // int ResultCode
       2643, 2662, 0x02005001, 		 // int ResultCodeExtended
       2666, 2671, 0x02005001, 		 // int Rows
       2675, 2700, 0x0a005001, 		 // QString ServiceObjectDescription
       2708, 2729, 0x02005001, 		 // int ServiceObjectVersion
       2733, 2739, 0x02005001, 		 // int State
       2743, 2751, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_6() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLineDisplay_1_6\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearDescriptors()\0"
    "\0int\0\0ClearText()\0\0int\0\0Close()\0\0int\0\0CreateWindow(int,int,int,int,int,int)\0ViewportRow,ViewportColumn,ViewportHeight,ViewportWidth,WindowHeight,WindowWidth\0int\0\0DefineGlyph(int,QString)\0GlyphCode,Glyph\0"
    "int\0\0DestroyWindow()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisplayText(QString,int)\0Data,Attribute\0int\0\0DisplayTextAt(int,int,QString,int)\0Row,Column,Data,Attribute\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0ReadCharacterAtCursor(int&)\0pChar\0int\0\0RefreshWindow(int)\0Window\0int\0\0ReleaseDevice()\0\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0ScrollText(int,int)\0Direction,Units\0int\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetBlinkRate(int)\0BlinkRate\0\0\0SetCharacterSet(int)\0CharacterSet\0\0\0SetCurrentWindow(int)\0CurrentWindow\0\0\0SetCursorColumn(int)\0CursorColumn\0\0\0SetCursorRow(int)\0CursorRow\0\0\0SetCursorType(int)\0"
    "CursorType\0\0\0SetCursorUpdate(bool)\0CursorUpdate\0\0\0SetDescriptor(int,int)\0Descriptor,Attribute\0int\0\0SetDeviceBrightness(int)\0DeviceBrightness\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetInterCharacterWait(int)\0InterCharacterWait\0\0\0SetMarqueeFormat(int)\0MarqueeFormat\0\0\0SetMarqueeRepeatWait(int)\0MarqueeRepeatWait\0\0\0SetMarqueeType(int)\0MarqueeType\0\0\0SetMarqueeUnitWait(int)\0"
    "MarqueeUnitWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0"
    "BinaryConversion\0int\0BlinkRate\0int\0CapBlink\0int\0CapBlinkRate\0bool\0CapBrightness\0bool\0CapCharacterSet\0int\0CapCursorType\0int\0CapCustomGlyph\0bool\0CapDescriptors\0"
    "bool\0CapHMarquee\0bool\0CapICharWait\0bool\0CapPowerReporting\0int\0CapReadBack\0int\0CapReverse\0int\0CapVMarquee\0bool\0CharacterSet\0int\0CharacterSetList\0QString\0CheckHealthText\0QString\0Claimed\0bool\0Columns\0int\0"
    "ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentWindow\0int\0CursorColumn\0int\0CursorRow\0int\0CursorType\0int\0CursorUpdate\0bool\0CustomGlyphList\0QString\0DeviceBrightness\0int\0DeviceColumns\0int\0"
    "DeviceDescription\0QString\0DeviceDescriptors\0int\0DeviceEnabled\0bool\0DeviceName\0QString\0DeviceRows\0int\0DeviceWindows\0int\0FreezeEvents\0bool\0GlyphHeight\0int\0GlyphWidth\0int\0InterCharacterWait\0int\0MarqueeFormat\0"
    "int\0MarqueeRepeatWait\0int\0MarqueeType\0int\0MarqueeUnitWait\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0Rows\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLineDisplay_1_6::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_6(),
qt_meta_data_OPOS__IOPOSLineDisplay_1_6 }
};

void *IOPOSLineDisplay_1_6::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLineDisplay_1_6()))
        return static_cast<void*>(const_cast<IOPOSLineDisplay_1_6*>(this));
    return QAxObject::qt_metacast(_clname);
}

