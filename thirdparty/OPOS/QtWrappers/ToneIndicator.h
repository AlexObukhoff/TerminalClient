/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSToneIndicator.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_TONEINDICATOR_H
#define QAX_DUMPCPP_TONEINDICATOR_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSToneIndicatorEvents

class OPOS_EXPORT IOPOSToneIndicator : public QAxObject
{
public:
    IOPOSToneIndicator(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapMelody

    property CapMelody

    */
    inline int CapMelody() const; //Returns the value of CapMelody

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property MelodyType

    property MelodyType

    */
    inline int MelodyType() const; //Returns the value of MelodyType
    inline void SetMelodyType(int value); //Sets the value of the MelodyType property

    /*
    Property MelodyVolume

    property MelodyVolume

    */
    inline int MelodyVolume() const; //Returns the value of MelodyVolume
    inline void SetMelodyVolume(int value); //Sets the value of the MelodyVolume property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSToneIndicator_1_13 : public QAxObject
{
public:
    IOPOSToneIndicator_1_13(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapMelody

    property CapMelody

    */
    inline int CapMelody() const; //Returns the value of CapMelody

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property MelodyType

    property MelodyType

    */
    inline int MelodyType() const; //Returns the value of MelodyType
    inline void SetMelodyType(int value); //Sets the value of the MelodyType property

    /*
    Property MelodyVolume

    property MelodyVolume

    */
    inline int MelodyVolume() const; //Returns the value of MelodyVolume
    inline void SetMelodyVolume(int value); //Sets the value of the MelodyVolume property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSToneIndicator_1_9 : public QAxObject
{
public:
    IOPOSToneIndicator_1_9(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSToneIndicator_1_8 : public QAxObject
{
public:
    IOPOSToneIndicator_1_8(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSToneIndicator_1_5 : public QAxObject
{
public:
    IOPOSToneIndicator_1_5(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSToneIndicator_1_9_zz : public QAxObject
{
public:
    IOPOSToneIndicator_1_9_zz(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSToneIndicator : public QAxObject
{
public:
    OPOSToneIndicator(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90202-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSToneIndicator(IOPOSToneIndicator *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSToneIndicator(IOPOSToneIndicator_1_13 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSToneIndicator(IOPOSToneIndicator_1_9 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSToneIndicator(IOPOSToneIndicator_1_8 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSToneIndicator(IOPOSToneIndicator_1_5 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AsyncMode

    property AsyncMode

    */
    inline bool AsyncMode() const; //Returns the value of AsyncMode
    inline void SetAsyncMode(bool value); //Sets the value of the AsyncMode property

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapMelody

    property CapMelody

    */
    inline int CapMelody() const; //Returns the value of CapMelody

    /*
    Property CapPitch

    property CapPitch

    */
    inline bool CapPitch() const; //Returns the value of CapPitch

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CapVolume

    property CapVolume

    */
    inline bool CapVolume() const; //Returns the value of CapVolume

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property InterToneWait

    property InterToneWait

    */
    inline int InterToneWait() const; //Returns the value of InterToneWait
    inline void SetInterToneWait(int value); //Sets the value of the InterToneWait property

    /*
    Property MelodyType

    property MelodyType

    */
    inline int MelodyType() const; //Returns the value of MelodyType
    inline void SetMelodyType(int value); //Sets the value of the MelodyType property

    /*
    Property MelodyVolume

    property MelodyVolume

    */
    inline int MelodyVolume() const; //Returns the value of MelodyVolume
    inline void SetMelodyVolume(int value); //Sets the value of the MelodyVolume property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property OutputID

    property OutputID

    */
    inline int OutputID() const; //Returns the value of OutputID

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property Tone1Duration

    property Tone1Duration

    */
    inline int Tone1Duration() const; //Returns the value of Tone1Duration
    inline void SetTone1Duration(int value); //Sets the value of the Tone1Duration property

    /*
    Property Tone1Pitch

    property Tone1Pitch

    */
    inline int Tone1Pitch() const; //Returns the value of Tone1Pitch
    inline void SetTone1Pitch(int value); //Sets the value of the Tone1Pitch property

    /*
    Property Tone1Volume

    property Tone1Volume

    */
    inline int Tone1Volume() const; //Returns the value of Tone1Volume
    inline void SetTone1Volume(int value); //Sets the value of the Tone1Volume property

    /*
    Property Tone2Duration

    property Tone2Duration

    */
    inline int Tone2Duration() const; //Returns the value of Tone2Duration
    inline void SetTone2Duration(int value); //Sets the value of the Tone2Duration property

    /*
    Property Tone2Pitch

    property Tone2Pitch

    */
    inline int Tone2Pitch() const; //Returns the value of Tone2Pitch
    inline void SetTone2Pitch(int value); //Sets the value of the Tone2Pitch property

    /*
    Property Tone2Volume

    property Tone2Volume

    */
    inline int Tone2Volume() const; //Returns the value of Tone2Volume
    inline void SetTone2Volume(int value); //Sets the value of the Tone2Volume property

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearOutput

    method ClearOutput

    */
    inline int ClearOutput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputComplete

    method SOOutputComplete

    */
    inline void SOOutputComplete(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method Sound

    method Sound

    */
    inline int Sound(int NumberOfCycles, int InterSoundWait);

    /*
    Method SoundImmediate

    method SoundImmediate

    */
    inline int SoundImmediate();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSToneIndicator::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSToneIndicator::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int OPOSToneIndicator::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSToneIndicator::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSToneIndicator::CapMelody() const
{
    QVariant qax_result = property("CapMelody");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSToneIndicator::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSToneIndicator::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSToneIndicator::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSToneIndicator::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSToneIndicator::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSToneIndicator::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSToneIndicator::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSToneIndicator::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSToneIndicator::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSToneIndicator::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSToneIndicator::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSToneIndicator::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSToneIndicator::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSToneIndicator::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSToneIndicator::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSToneIndicator::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int OPOSToneIndicator::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int OPOSToneIndicator::MelodyType() const
{
    QVariant qax_result = property("MelodyType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetMelodyType(int value){ setProperty("MelodyType", QVariant(value)); }

inline int OPOSToneIndicator::MelodyVolume() const
{
    QVariant qax_result = property("MelodyVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetMelodyVolume(int value){ setProperty("MelodyVolume", QVariant(value)); }

inline int OPOSToneIndicator::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSToneIndicator::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSToneIndicator::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSToneIndicator::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSToneIndicator::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int OPOSToneIndicator::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int OPOSToneIndicator::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int OPOSToneIndicator::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int OPOSToneIndicator::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int OPOSToneIndicator::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSToneIndicator::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int OPOSToneIndicator::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSToneIndicator::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSToneIndicator::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSToneIndicator::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSToneIndicator::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSToneIndicator::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSToneIndicator::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSToneIndicator::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSToneIndicator::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSToneIndicator::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void OPOSToneIndicator::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void OPOSToneIndicator::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void OPOSToneIndicator::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void OPOSToneIndicator::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline int OPOSToneIndicator::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void OPOSToneIndicator::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int OPOSToneIndicator::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int OPOSToneIndicator::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int OPOSToneIndicator::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int OPOSToneIndicator::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator::CapMelody() const
{
    QVariant qax_result = property("CapMelody");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator::MelodyType() const
{
    QVariant qax_result = property("MelodyType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetMelodyType(int value){ setProperty("MelodyType", QVariant(value)); }

inline int IOPOSToneIndicator::MelodyVolume() const
{
    QVariant qax_result = property("MelodyVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetMelodyVolume(int value){ setProperty("MelodyVolume", QVariant(value)); }

inline int IOPOSToneIndicator::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void IOPOSToneIndicator::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSToneIndicator::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSToneIndicator::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSToneIndicator::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline int IOPOSToneIndicator::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSToneIndicator::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline int IOPOSToneIndicator::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int IOPOSToneIndicator::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator_1_13::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator_1_13::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::CapMelody() const
{
    QVariant qax_result = property("CapMelody");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_13::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_13::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_13::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator_1_13::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_13::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::MelodyType() const
{
    QVariant qax_result = property("MelodyType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetMelodyType(int value){ setProperty("MelodyType", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::MelodyVolume() const
{
    QVariant qax_result = property("MelodyVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetMelodyVolume(int value){ setProperty("MelodyVolume", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_13::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_13::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_13::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_13::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_13::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSToneIndicator_1_13::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSToneIndicator_1_13::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSToneIndicator_1_13::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline int IOPOSToneIndicator_1_13::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_13::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline int IOPOSToneIndicator_1_13::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_13::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator_1_9::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator_1_9::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator_1_9::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_9::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_9::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSToneIndicator_1_9::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSToneIndicator_1_9::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSToneIndicator_1_9::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline int IOPOSToneIndicator_1_9::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_9::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline int IOPOSToneIndicator_1_9::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator_1_8::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator_1_8::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_8::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_8::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_8::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator_1_8::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_8::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_8::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_8::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_8::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_8::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_8::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSToneIndicator_1_8::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSToneIndicator_1_8::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSToneIndicator_1_8::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int IOPOSToneIndicator_1_8::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_8::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSToneIndicator_1_8::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_8::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator_1_5::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator_1_5::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_5::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_5::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_5::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_5::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_5::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_5::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator_1_5::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_5::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_5::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_5::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_5::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_5::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_5::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void IOPOSToneIndicator_1_5::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IOPOSToneIndicator_1_5::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSToneIndicator_1_5::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline int IOPOSToneIndicator_1_5::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_5::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int IOPOSToneIndicator_1_5::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_5::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}


inline bool IOPOSToneIndicator_1_9_zz::AsyncMode() const
{
    QVariant qax_result = property("AsyncMode");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetAsyncMode(bool value){ setProperty("AsyncMode", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSToneIndicator_1_9_zz::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::CapPitch() const
{
    QVariant qax_result = property("CapPitch");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::CapVolume() const
{
    QVariant qax_result = property("CapVolume");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9_zz::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9_zz::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9_zz::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSToneIndicator_1_9_zz::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSToneIndicator_1_9_zz::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::InterToneWait() const
{
    QVariant qax_result = property("InterToneWait");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetInterToneWait(int value){ setProperty("InterToneWait", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::OutputID() const
{
    QVariant qax_result = property("OutputID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSToneIndicator_1_9_zz::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSToneIndicator_1_9_zz::Tone1Duration() const
{
    QVariant qax_result = property("Tone1Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone1Duration(int value){ setProperty("Tone1Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::Tone1Pitch() const
{
    QVariant qax_result = property("Tone1Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone1Pitch(int value){ setProperty("Tone1Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::Tone1Volume() const
{
    QVariant qax_result = property("Tone1Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone1Volume(int value){ setProperty("Tone1Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::Tone2Duration() const
{
    QVariant qax_result = property("Tone2Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone2Duration(int value){ setProperty("Tone2Duration", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::Tone2Pitch() const
{
    QVariant qax_result = property("Tone2Pitch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone2Pitch(int value){ setProperty("Tone2Pitch", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::Tone2Volume() const
{
    QVariant qax_result = property("Tone2Volume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSToneIndicator_1_9_zz::SetTone2Volume(int value){ setProperty("Tone2Volume", QVariant(value)); }

inline int IOPOSToneIndicator_1_9_zz::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::ClearOutput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_9_zz::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSToneIndicator_1_9_zz::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSToneIndicator_1_9_zz::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSToneIndicator_1_9_zz::SOOutputComplete(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline int IOPOSToneIndicator_1_9_zz::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSToneIndicator_1_9_zz::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline int IOPOSToneIndicator_1_9_zz::Sound(int NumberOfCycles, int InterSoundWait)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&NumberOfCycles, (void*)&InterSoundWait};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::SoundImmediate()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int IOPOSToneIndicator_1_9_zz::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSToneIndicator *t)
{ Q_ASSERT(!t); return new OPOS::OPOSToneIndicator; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator_1_13 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator_1_13; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator_1_9 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator_1_9; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator_1_8 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator_1_8; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator_1_5 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator_1_5; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSToneIndicator_1_9_zz *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSToneIndicator_1_9_zz; }

#endif

