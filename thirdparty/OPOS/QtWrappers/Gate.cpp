/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSGate.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\Gate.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSGate[] = {

 // content:
       1,       // revision
       0,       // classname
       3,    10, // classinfo
       28,    16, // methods
       24,    156, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       15, 33, 
       50, 62, 
       72, 84, 

 // signals: signature, parameters, type, tag, flags
       99, 132, 158, 159, 5,
       160, 183, 188, 189, 5,
       190, 229, 251, 252, 5,
       253, 278, 283, 284, 5,
       285, 311, 326, 327, 5,

 // slots: signature, parameters, type, tag, flags
       328, 345, 351, 355, 9,
       356, 373, 381, 385, 9,
       386, 394, 395, 399, 9,
       400, 437, 462, 466, 9,
       467, 495, 517, 521, 9,
       522, 536, 547, 551, 9,
       552, 563, 564, 568, 9,
       569, 585, 586, 590, 9,
       591, 616, 633, 637, 9,
       638, 667, 685, 689, 9,
       690, 707, 714, 715, 9,
       716, 746, 772, 773, 9,
       774, 805, 861, 862, 9,
       863, 890, 899, 900, 9,
       901, 915, 916, 920, 9,
       921, 941, 946, 947, 9,
       948, 973, 990, 991, 9,
       992, 1015, 1029, 1030, 9,
       1031, 1053, 1066, 1067, 9,
       1068, 1088, 1100, 1101, 9,
       1102, 1126, 1143, 1147, 9,
       1148, 1174, 1191, 1195, 9,
       1196, 1218, 1226, 1230, 9,

 // properties: name, type, flags
       1231, 1248, 0x02015003, 		 // int BinaryConversion
       1252, 1278, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1283, 1297, 0x01005001, 		 // bool CapGateStatus
       1302, 1320, 0x02005001, 		 // int CapPowerReporting
       1324, 1347, 0x01005001, 		 // bool CapStatisticsReporting
       1352, 1370, 0x01005001, 		 // bool CapUpdateFirmware
       1375, 1395, 0x01005001, 		 // bool CapUpdateStatistics
       1400, 1416, 0x0a005001, 		 // QString CheckHealthText
       1424, 1432, 0x01005001, 		 // bool Claimed
       1437, 1462, 0x0a005001, 		 // QString ControlObjectDescription
       1470, 1491, 0x02005001, 		 // int ControlObjectVersion
       1495, 1513, 0x0a005001, 		 // QString DeviceDescription
       1521, 1535, 0x01015003, 		 // bool DeviceEnabled
       1540, 1551, 0x0a005001, 		 // QString DeviceName
       1559, 1572, 0x01015003, 		 // bool FreezeEvents
       1577, 1588, 0x02005001, 		 // int GateStatus
       1592, 1603, 0x02005001, 		 // int OpenResult
       1607, 1619, 0x02015003, 		 // int PowerNotify
       1623, 1634, 0x02005001, 		 // int PowerState
       1638, 1649, 0x02005001, 		 // int ResultCode
       1653, 1672, 0x02005001, 		 // int ResultCodeExtended
       1676, 1701, 0x0a005001, 		 // QString ServiceObjectDescription
       1709, 1730, 0x02005001, 		 // int ServiceObjectVersion
       1734, 1740, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSGate() {
    static const char stringdata0[] = {
    "OPOS::OPOSGate\0"
    "Event Interface 2\0_IOPOSGateEvents\0Interface 0\0IOPOSGate\0Interface 1\0IOPOSGate_1_12\0"
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0"
    "code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0"
    "FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0OpenGate()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WaitForGateClose(int)\0Timeout\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0"
    "bool\0CapGateStatus\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0GateStatus\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSGate::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSGate(),
qt_meta_data_OPOS__OPOSGate }
};

void *OPOSGate::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSGate()))
        return static_cast<void*>(const_cast<OPOSGate*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSGate[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       25,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       16, 55, 77, 78, 5,
       79, 104, 109, 110, 5,
       111, 137, 152, 153, 5,

 // slots: signature, parameters, type, tag, flags
       154, 171, 177, 181, 9,
       182, 199, 207, 211, 9,
       212, 220, 221, 225, 9,
       226, 263, 288, 292, 9,
       293, 321, 343, 347, 9,
       348, 362, 373, 377, 9,
       378, 389, 390, 394, 9,
       395, 411, 412, 416, 9,
       417, 442, 459, 463, 9,
       464, 493, 511, 515, 9,
       516, 533, 540, 541, 9,
       542, 572, 598, 599, 9,
       600, 631, 687, 688, 9,
       689, 716, 725, 726, 9,
       727, 741, 742, 746, 9,
       747, 767, 772, 773, 9,
       774, 799, 816, 817, 9,
       818, 841, 855, 856, 9,
       857, 879, 892, 893, 9,
       894, 914, 926, 927, 9,
       928, 952, 969, 973, 9,
       974, 1000, 1017, 1021, 9,
       1022, 1044, 1052, 1056, 9,

 // properties: name, type, flags
       1057, 1074, 0x02015003, 		 // int BinaryConversion
       1078, 1104, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1109, 1123, 0x01005001, 		 // bool CapGateStatus
       1128, 1146, 0x02005001, 		 // int CapPowerReporting
       1150, 1173, 0x01005001, 		 // bool CapStatisticsReporting
       1178, 1196, 0x01005001, 		 // bool CapUpdateFirmware
       1201, 1221, 0x01005001, 		 // bool CapUpdateStatistics
       1226, 1242, 0x0a005001, 		 // QString CheckHealthText
       1250, 1258, 0x01005001, 		 // bool Claimed
       1263, 1288, 0x0a005001, 		 // QString ControlObjectDescription
       1296, 1317, 0x02005001, 		 // int ControlObjectVersion
       1321, 1339, 0x0a005001, 		 // QString DeviceDescription
       1347, 1361, 0x01015003, 		 // bool DeviceEnabled
       1366, 1377, 0x0a005001, 		 // QString DeviceName
       1385, 1398, 0x01015003, 		 // bool FreezeEvents
       1403, 1414, 0x02005001, 		 // int GateStatus
       1418, 1429, 0x02005001, 		 // int OpenResult
       1433, 1445, 0x02015003, 		 // int PowerNotify
       1449, 1460, 0x02005001, 		 // int PowerState
       1464, 1475, 0x02005001, 		 // int ResultCode
       1479, 1498, 0x02005001, 		 // int ResultCodeExtended
       1502, 1527, 0x0a005001, 		 // QString ServiceObjectDescription
       1535, 1556, 0x02005001, 		 // int ServiceObjectVersion
       1560, 1566, 0x02005001, 		 // int State
       1570, 1578, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSGate() {
    static const char stringdata0[] = {
    "OPOS::IOPOSGate\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0OpenGate()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WaitForGateClose(int)\0Timeout\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0"
    "bool\0CapGateStatus\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0GateStatus\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSGate::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSGate(),
qt_meta_data_OPOS__IOPOSGate }
};

void *IOPOSGate::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSGate()))
        return static_cast<void*>(const_cast<IOPOSGate*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSGate_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       25,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       21, 60, 82, 83, 5,
       84, 109, 114, 115, 5,
       116, 142, 157, 158, 5,

 // slots: signature, parameters, type, tag, flags
       159, 176, 182, 186, 9,
       187, 204, 212, 216, 9,
       217, 225, 226, 230, 9,
       231, 268, 293, 297, 9,
       298, 326, 348, 352, 9,
       353, 367, 378, 382, 9,
       383, 394, 395, 399, 9,
       400, 416, 417, 421, 9,
       422, 447, 464, 468, 9,
       469, 498, 516, 520, 9,
       521, 538, 545, 546, 9,
       547, 577, 603, 604, 9,
       605, 636, 692, 693, 9,
       694, 721, 730, 731, 9,
       732, 746, 747, 751, 9,
       752, 772, 777, 778, 9,
       779, 804, 821, 822, 9,
       823, 846, 860, 861, 9,
       862, 884, 897, 898, 9,
       899, 919, 931, 932, 9,
       933, 957, 974, 978, 9,
       979, 1005, 1022, 1026, 9,
       1027, 1049, 1057, 1061, 9,

 // properties: name, type, flags
       1062, 1079, 0x02015003, 		 // int BinaryConversion
       1083, 1109, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1114, 1128, 0x01005001, 		 // bool CapGateStatus
       1133, 1151, 0x02005001, 		 // int CapPowerReporting
       1155, 1178, 0x01005001, 		 // bool CapStatisticsReporting
       1183, 1201, 0x01005001, 		 // bool CapUpdateFirmware
       1206, 1226, 0x01005001, 		 // bool CapUpdateStatistics
       1231, 1247, 0x0a005001, 		 // QString CheckHealthText
       1255, 1263, 0x01005001, 		 // bool Claimed
       1268, 1293, 0x0a005001, 		 // QString ControlObjectDescription
       1301, 1322, 0x02005001, 		 // int ControlObjectVersion
       1326, 1344, 0x0a005001, 		 // QString DeviceDescription
       1352, 1366, 0x01015003, 		 // bool DeviceEnabled
       1371, 1382, 0x0a005001, 		 // QString DeviceName
       1390, 1403, 0x01015003, 		 // bool FreezeEvents
       1408, 1419, 0x02005001, 		 // int GateStatus
       1423, 1434, 0x02005001, 		 // int OpenResult
       1438, 1450, 0x02015003, 		 // int PowerNotify
       1454, 1465, 0x02005001, 		 // int PowerState
       1469, 1480, 0x02005001, 		 // int ResultCode
       1484, 1503, 0x02005001, 		 // int ResultCodeExtended
       1507, 1532, 0x0a005001, 		 // QString ServiceObjectDescription
       1540, 1561, 0x02005001, 		 // int ServiceObjectVersion
       1565, 1571, 0x02005001, 		 // int State
       1575, 1583, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSGate_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSGate_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0OpenGate()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WaitForGateClose(int)\0Timeout\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0"
    "bool\0CapGateStatus\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0GateStatus\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSGate_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSGate_1_12(),
qt_meta_data_OPOS__IOPOSGate_1_12 }
};

void *IOPOSGate_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSGate_1_12()))
        return static_cast<void*>(const_cast<IOPOSGate_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

