/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSFiscalPrinter.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\FiscalPrinter.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSFiscalPrinter[] = {

 // content:
       1,       // revision
       0,       // classname
       7,    10, // classinfo
       107,    24, // methods
       123,    559, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       24, 42, 
       68, 80, 
       99, 111, 
       135, 147, 
       171, 183, 
       206, 218, 
       241, 253, 

 // signals: signature, parameters, type, tag, flags
       276, 309, 335, 336, 5,
       337, 366, 422, 423, 5,
       424, 449, 458, 459, 5,
       460, 483, 488, 489, 5,
       490, 529, 551, 552, 5,
       553, 578, 583, 584, 5,
       585, 611, 626, 627, 5,

 // slots: signature, parameters, type, tag, flags
       628, 653, 668, 672, 9,
       673, 698, 710, 714, 9,
       715, 741, 762, 766, 9,
       767, 787, 795, 799, 9,
       800, 819, 825, 829, 9,
       830, 847, 848, 852, 9,
       853, 871, 879, 883, 9,
       884, 900, 901, 905, 9,
       906, 923, 929, 933, 9,
       934, 951, 959, 963, 9,
       964, 977, 978, 982, 9,
       983, 997, 998, 1002, 9,
       1003, 1011, 1012, 1016, 9,
       1017, 1054, 1079, 1083, 9,
       1084, 1112, 1134, 1138, 9,
       1139, 1159, 1160, 1164, 9,
       1165, 1188, 1200, 1204, 9,
       1205, 1222, 1223, 1227, 9,
       1228, 1243, 1244, 1248, 9,
       1249, 1263, 1264, 1268, 9,
       1269, 1284, 1285, 1289, 9,
       1290, 1303, 1304, 1308, 9,
       1309, 1323, 1324, 1328, 9,
       1329, 1356, 1378, 1382, 9,
       1383, 1401, 1406, 1410, 9,
       1411, 1442, 1461, 1465, 9,
       1466, 1492, 1514, 1518, 9,
       1519, 1533, 1544, 1548, 9,
       1549, 1573, 1574, 1578, 9,
       1579, 1612, 1625, 1629, 9,
       1630, 1664, 1693, 1697, 9,
       1698, 1723, 1736, 1740, 9,
       1741, 1784, 1796, 1800, 9,
       1801, 1824, 1825, 1829, 9,
       1830, 1854, 1861, 1865, 9,
       1866, 1924, 1978, 1982, 9,
       1983, 2033, 2075, 2079, 9,
       2080, 2134, 2176, 2180, 9,
       2181, 2261, 2341, 2345, 9,
       2346, 2400, 2437, 2441, 9,
       2442, 2506, 2562, 2566, 9,
       2567, 2635, 2691, 2695, 9,
       2696, 2758, 2812, 2816, 9,
       2817, 2842, 2850, 2854, 9,
       2855, 2890, 2909, 2913, 9,
       2914, 2953, 2982, 2986, 9,
       2987, 3034, 3075, 3079, 9,
       3080, 3118, 3145, 3149, 9,
       3150, 3192, 3219, 3223, 9,
       3224, 3252, 3259, 3263, 9,
       3264, 3306, 3328, 3332, 9,
       3333, 3383, 3417, 3421, 9,
       3422, 3445, 3451, 3455, 9,
       3456, 3499, 3525, 3529, 9,
       3530, 3552, 3564, 3568, 9,
       3569, 3627, 3689, 3693, 9,
       3694, 3727, 3754, 3758, 9,
       3759, 3774, 3775, 3779, 9,
       3780, 3795, 3796, 3800, 9,
       3801, 3817, 3818, 3822, 9,
       3823, 3838, 3839, 3843, 9,
       3844, 3869, 3886, 3890, 9,
       3891, 3920, 3938, 3942, 9,
       3943, 3960, 3967, 3968, 9,
       3969, 3999, 4025, 4026, 9,
       4027, 4053, 4109, 4110, 9,
       4111, 4133, 4142, 4143, 9,
       4144, 4158, 4159, 4163, 9,
       4164, 4184, 4189, 4190, 9,
       4191, 4220, 4237, 4238, 9,
       4239, 4269, 4287, 4288, 9,
       4289, 4308, 4318, 4319, 9,
       4320, 4345, 4362, 4363, 9,
       4364, 4386, 4396, 4397, 9,
       4398, 4418, 4429, 4430, 9,
       4431, 4452, 4465, 4466, 9,
       4467, 4484, 4496, 4500, 9,
       4501, 4518, 4523, 4527, 9,
       4528, 4545, 4554, 4555, 9,
       4556, 4579, 4593, 4594, 9,
       4595, 4621, 4638, 4639, 9,
       4640, 4669, 4690, 4691, 9,
       4692, 4718, 4736, 4737, 9,
       4738, 4760, 4773, 4774, 9,
       4775, 4797, 4810, 4811, 9,
       4812, 4844, 4872, 4876, 9,
       4877, 4897, 4909, 4910, 9,
       4911, 4937, 4953, 4957, 9,
       4958, 4979, 4988, 4989, 9,
       4990, 5010, 5022, 5023, 9,
       5024, 5044, 5052, 5053, 9,
       5054, 5076, 5090, 5091, 9,
       5092, 5118, 5121, 5125, 9,
       5126, 5148, 5162, 5163, 9,
       5164, 5197, 5225, 5229, 9,
       5230, 5244, 5245, 5249, 9,
       5250, 5275, 5290, 5294, 9,
       5295, 5319, 5336, 5340, 9,
       5341, 5367, 5384, 5388, 9,
       5389, 5413, 5428, 5432, 9,

 // properties: name, type, flags
       5433, 5448, 0x02005001, 		 // int ActualCurrency
       5452, 5469, 0x0a015003, 		 // QString AdditionalHeader
       5477, 5495, 0x0a015003, 		 // QString AdditionalTrailer
       5503, 5523, 0x02005001, 		 // int AmountDecimalPlaces
       5527, 5537, 0x01015003, 		 // bool AsyncMode
       5542, 5559, 0x02015003, 		 // int BinaryConversion
       5563, 5583, 0x01005001, 		 // bool CapAdditionalHeader
       5588, 5607, 0x01005001, 		 // bool CapAdditionalLines
       5612, 5633, 0x01005001, 		 // bool CapAdditionalTrailer
       5638, 5658, 0x01005001, 		 // bool CapAmountAdjustment
       5663, 5680, 0x01005001, 		 // bool CapAmountNotPaid
       5685, 5698, 0x01005001, 		 // bool CapChangeDue
       5703, 5717, 0x01005001, 		 // bool CapCheckTotal
       5722, 5748, 0x01005001, 		 // bool CapCompareFirmwareVersion
       5753, 5768, 0x01005001, 		 // bool CapCoverSensor
       5773, 5788, 0x01005001, 		 // bool CapDoubleWidth
       5793, 5813, 0x01005001, 		 // bool CapDuplicateReceipt
       5818, 5844, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       5849, 5873, 0x01005001, 		 // bool CapFiscalReceiptStation
       5878, 5899, 0x01005001, 		 // bool CapFiscalReceiptType
       5904, 5919, 0x01005001, 		 // bool CapFixedOutput
       5924, 5939, 0x01005001, 		 // bool CapHasVatTable
       5944, 5965, 0x01005001, 		 // bool CapIndependentHeader
       5970, 5982, 0x01005001, 		 // bool CapItemList
       5987, 6005, 0x01005001, 		 // bool CapJrnEmptySensor
       6010, 6030, 0x01005001, 		 // bool CapJrnNearEndSensor
       6035, 6049, 0x01005001, 		 // bool CapJrnPresent
       6054, 6073, 0x01005001, 		 // bool CapMultiContractor
       6078, 6095, 0x01005001, 		 // bool CapNonFiscalMode
       6100, 6120, 0x01005001, 		 // bool CapOnlyVoidLastItem
       6125, 6149, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       6154, 6175, 0x01005001, 		 // bool CapPackageAdjustment
       6180, 6201, 0x01005001, 		 // bool CapPercentAdjustment
       6206, 6228, 0x01005001, 		 // bool CapPositiveAdjustment
       6233, 6263, 0x01005001, 		 // bool CapPositiveSubtotalAdjustment
       6268, 6283, 0x01005001, 		 // bool CapPostPreLine
       6288, 6307, 0x01005001, 		 // bool CapPowerLossReport
       6312, 6330, 0x02005001, 		 // int CapPowerReporting
       6334, 6360, 0x01005001, 		 // bool CapPredefinedPaymentLines
       6365, 6383, 0x01005001, 		 // bool CapRecEmptySensor
       6388, 6408, 0x01005001, 		 // bool CapRecNearEndSensor
       6413, 6427, 0x01005001, 		 // bool CapRecPresent
       6432, 6450, 0x01005001, 		 // bool CapReceiptNotPaid
       6455, 6480, 0x01005001, 		 // bool CapRemainingFiscalMemory
       6485, 6501, 0x01005001, 		 // bool CapReservedWord
       6506, 6521, 0x01005001, 		 // bool CapSetCurrency
       6526, 6539, 0x01005001, 		 // bool CapSetHeader
       6544, 6556, 0x01005001, 		 // bool CapSetPOSID
       6561, 6581, 0x01005001, 		 // bool CapSetStoreFiscalID
       6586, 6600, 0x01005001, 		 // bool CapSetTrailer
       6605, 6620, 0x01005001, 		 // bool CapSetVatTable
       6625, 6643, 0x01005001, 		 // bool CapSlpEmptySensor
       6648, 6669, 0x01005001, 		 // bool CapSlpFiscalDocument
       6674, 6689, 0x01005001, 		 // bool CapSlpFullSlip
       6694, 6714, 0x01005001, 		 // bool CapSlpNearEndSensor
       6719, 6733, 0x01005001, 		 // bool CapSlpPresent
       6738, 6755, 0x01005001, 		 // bool CapSlpValidation
       6760, 6783, 0x01005001, 		 // bool CapStatisticsReporting
       6788, 6811, 0x01005001, 		 // bool CapSubAmountAdjustment
       6816, 6840, 0x01005001, 		 // bool CapSubPercentAdjustment
       6845, 6857, 0x01005001, 		 // bool CapSubtotal
       6862, 6879, 0x01005001, 		 // bool CapTotalizerType
       6884, 6900, 0x01005001, 		 // bool CapTrainingMode
       6905, 6923, 0x01005001, 		 // bool CapUpdateFirmware
       6928, 6948, 0x01005001, 		 // bool CapUpdateStatistics
       6953, 6972, 0x01005001, 		 // bool CapValidateJournal
       6977, 6988, 0x01005001, 		 // bool CapXReport
       6993, 7003, 0x0a015003, 		 // QString ChangeDue
       7011, 7027, 0x0a005001, 		 // QString CheckHealthText
       7035, 7046, 0x01015003, 		 // bool CheckTotal
       7051, 7059, 0x01005001, 		 // bool Claimed
       7064, 7077, 0x02015003, 		 // int ContractorId
       7081, 7106, 0x0a005001, 		 // QString ControlObjectDescription
       7114, 7135, 0x02005001, 		 // int ControlObjectVersion
       7139, 7151, 0x02005001, 		 // int CountryCode
       7155, 7165, 0x01005001, 		 // bool CoverOpen
       7170, 7179, 0x02015003, 		 // int DateType
       7183, 7193, 0x01005001, 		 // bool DayOpened
       7198, 7216, 0x02005001, 		 // int DescriptionLength
       7220, 7238, 0x0a005001, 		 // QString DeviceDescription
       7246, 7260, 0x01015003, 		 // bool DeviceEnabled
       7265, 7276, 0x0a005001, 		 // QString DeviceName
       7284, 7301, 0x01015003, 		 // bool DuplicateReceipt
       7306, 7317, 0x02005001, 		 // int ErrorLevel
       7321, 7332, 0x02005001, 		 // int ErrorOutID
       7336, 7347, 0x02005001, 		 // int ErrorState
       7351, 7364, 0x02005001, 		 // int ErrorStation
       7368, 7380, 0x0a005001, 		 // QString ErrorString
       7388, 7409, 0x02015003, 		 // int FiscalReceiptStation
       7413, 7431, 0x02015003, 		 // int FiscalReceiptType
       7435, 7448, 0x01015003, 		 // bool FlagWhenIdle
       7453, 7466, 0x01015003, 		 // bool FreezeEvents
       7471, 7480, 0x01005001, 		 // bool JrnEmpty
       7485, 7496, 0x01005001, 		 // bool JrnNearEnd
       7501, 7515, 0x02005001, 		 // int MessageLength
       7519, 7531, 0x02015003, 		 // int MessageType
       7535, 7550, 0x02005001, 		 // int NumHeaderLines
       7554, 7570, 0x02005001, 		 // int NumTrailerLines
       7574, 7586, 0x02005001, 		 // int NumVatRates
       7590, 7601, 0x02005001, 		 // int OpenResult
       7605, 7614, 0x02005001, 		 // int OutputID
       7618, 7627, 0x0a015003, 		 // QString PostLine
       7635, 7647, 0x02015003, 		 // int PowerNotify
       7651, 7662, 0x02005001, 		 // int PowerState
       7666, 7674, 0x0a015003, 		 // QString PreLine
       7682, 7705, 0x0a005001, 		 // QString PredefinedPaymentLines
       7713, 7726, 0x02005001, 		 // int PrinterState
       7730, 7752, 0x02005001, 		 // int QuantityDecimalPlaces
       7756, 7771, 0x02005001, 		 // int QuantityLength
       7775, 7784, 0x01005001, 		 // bool RecEmpty
       7789, 7800, 0x01005001, 		 // bool RecNearEnd
       7805, 7827, 0x02005001, 		 // int RemainingFiscalMemory
       7831, 7844, 0x0a005001, 		 // QString ReservedWord
       7852, 7863, 0x02005001, 		 // int ResultCode
       7867, 7886, 0x02005001, 		 // int ResultCodeExtended
       7890, 7915, 0x0a005001, 		 // QString ServiceObjectDescription
       7923, 7944, 0x02005001, 		 // int ServiceObjectVersion
       7948, 7962, 0x02015003, 		 // int SlipSelection
       7966, 7975, 0x01005001, 		 // bool SlpEmpty
       7980, 7991, 0x01005001, 		 // bool SlpNearEnd
       7996, 8002, 0x02005001, 		 // int State
       8006, 8020, 0x02015003, 		 // int TotalizerType
       8024, 8043, 0x01005001, 		 // bool TrainingModeActive

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSFiscalPrinter() {
    static const char stringdata0[] = {
    "OPOS::OPOSFiscalPrinter\0"
    "Event Interface 6\0_IOPOSFiscalPrinterEvents\0Interface 0\0IOPOSFiscalPrinter\0Interface 1\0IOPOSFiscalPrinter_1_12\0Interface 2\0IOPOSFiscalPrinter_1_11\0Interface 3\0IOPOSFiscalPrinter_1_9\0Interface 4\0IOPOSFiscalPrinter_1_8\0"
    "Interface 5\0IOPOSFiscalPrinter_1_6\0"
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0OutputCompleteEvent(int)\0"
    "OutputID\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0"
    "DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0"
    "Timeout\0int\0\0BeginTraining()\0\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0"
    "int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0"
    "\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0"
    "VatID,OptArgs,VatRate\0int\0\0Open(QString)\0DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0"
    "int\0\0PrintNormal(int,QString)\0Station,Data\0int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0"
    "Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemAdjustmentVoid(int,QString,qlonglong,int)\0"
    "AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0"
    "int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecItemRefund(QString,qlonglong,int,int,qlonglong,QString)\0Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0"
    "int\0\0PrintRecItemRefundVoid(QString,qlonglong,int,int,qlonglong,QString)\0Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0int\0\0PrintRecItemVoid(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0"
    "int\0\0PrintRecMessage(QString)\0Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0"
    "AdjustmentType,Description,VatAdjustment\0int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0"
    "Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0int\0\0PrintRecTaxID(QString)\0TaxID\0int\0"
    "\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0"
    "int\0\0PrintReport(int,QString,QString)\0ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0"
    "\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0"
    "\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0NewCurrency\0int\0\0SetDate(QString)\0Date\0"
    "int\0\0SetDateType(int)\0DateType\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0"
    "\0\0SetFlagWhenIdle(bool)\0FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0MessageType\0\0\0SetPOSID(QString,QString)\0"
    "POSID,CashierID\0int\0\0SetPostLine(QString)\0PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0ID\0int\0\0SetTotalizerType(int)\0"
    "TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0"
    "bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCompareFirmwareVersion\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0"
    "bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0"
    "bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0"
    "CapPositiveAdjustment\0bool\0CapPositiveSubtotalAdjustment\0bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0"
    "bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0"
    "bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0"
    "bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0"
    "bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0"
    "bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0"
    "QString\0PredefinedPaymentLines\0QString\0PrinterState\0int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSFiscalPrinter::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSFiscalPrinter(),
qt_meta_data_OPOS__OPOSFiscalPrinter }
};

void *OPOSFiscalPrinter::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSFiscalPrinter()))
        return static_cast<void*>(const_cast<OPOSFiscalPrinter*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       103,    10, // methods
       124,    525, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       25, 64, 86, 87, 5,
       88, 113, 118, 119, 5,
       120, 146, 161, 162, 5,

 // slots: signature, parameters, type, tag, flags
       163, 188, 203, 207, 9,
       208, 233, 245, 249, 9,
       250, 276, 297, 301, 9,
       302, 322, 330, 334, 9,
       335, 354, 360, 364, 9,
       365, 382, 383, 387, 9,
       388, 406, 414, 418, 9,
       419, 435, 436, 440, 9,
       441, 458, 464, 468, 9,
       469, 486, 494, 498, 9,
       499, 512, 513, 517, 9,
       518, 532, 533, 537, 9,
       538, 546, 547, 551, 9,
       552, 589, 614, 618, 9,
       619, 647, 669, 673, 9,
       674, 694, 695, 699, 9,
       700, 723, 735, 739, 9,
       740, 757, 758, 762, 9,
       763, 778, 779, 783, 9,
       784, 798, 799, 803, 9,
       804, 819, 820, 824, 9,
       825, 838, 839, 843, 9,
       844, 858, 859, 863, 9,
       864, 891, 913, 917, 9,
       918, 936, 941, 945, 9,
       946, 977, 996, 1000, 9,
       1001, 1027, 1049, 1053, 9,
       1054, 1068, 1079, 1083, 9,
       1084, 1108, 1109, 1113, 9,
       1114, 1147, 1160, 1164, 9,
       1165, 1199, 1228, 1232, 9,
       1233, 1258, 1271, 1275, 9,
       1276, 1319, 1331, 1335, 9,
       1336, 1359, 1360, 1364, 9,
       1365, 1389, 1396, 1400, 9,
       1401, 1459, 1513, 1517, 9,
       1518, 1568, 1610, 1614, 9,
       1615, 1669, 1711, 1715, 9,
       1716, 1796, 1876, 1880, 9,
       1881, 1935, 1972, 1976, 9,
       1977, 2041, 2097, 2101, 9,
       2102, 2170, 2226, 2230, 9,
       2231, 2293, 2347, 2351, 9,
       2352, 2377, 2385, 2389, 9,
       2390, 2425, 2444, 2448, 9,
       2449, 2488, 2517, 2521, 9,
       2522, 2569, 2610, 2614, 9,
       2615, 2653, 2680, 2684, 9,
       2685, 2727, 2754, 2758, 9,
       2759, 2787, 2794, 2798, 9,
       2799, 2841, 2863, 2867, 9,
       2868, 2918, 2952, 2956, 9,
       2957, 2980, 2986, 2990, 9,
       2991, 3034, 3060, 3064, 9,
       3065, 3087, 3099, 3103, 9,
       3104, 3162, 3224, 3228, 9,
       3229, 3262, 3289, 3293, 9,
       3294, 3309, 3310, 3314, 9,
       3315, 3330, 3331, 3335, 9,
       3336, 3352, 3353, 3357, 9,
       3358, 3373, 3374, 3378, 9,
       3379, 3404, 3421, 3425, 9,
       3426, 3455, 3473, 3477, 9,
       3478, 3495, 3502, 3503, 9,
       3504, 3534, 3560, 3561, 9,
       3562, 3588, 3644, 3645, 9,
       3646, 3668, 3677, 3678, 9,
       3679, 3693, 3694, 3698, 9,
       3699, 3719, 3724, 3725, 9,
       3726, 3755, 3772, 3773, 9,
       3774, 3804, 3822, 3823, 9,
       3824, 3843, 3853, 3854, 9,
       3855, 3880, 3897, 3898, 9,
       3899, 3921, 3931, 3932, 9,
       3933, 3953, 3964, 3965, 9,
       3966, 3987, 4000, 4001, 9,
       4002, 4019, 4031, 4035, 9,
       4036, 4053, 4058, 4062, 9,
       4063, 4080, 4089, 4090, 9,
       4091, 4114, 4128, 4129, 9,
       4130, 4156, 4173, 4174, 9,
       4175, 4204, 4225, 4226, 9,
       4227, 4253, 4271, 4272, 9,
       4273, 4295, 4308, 4309, 9,
       4310, 4332, 4345, 4346, 9,
       4347, 4379, 4407, 4411, 9,
       4412, 4432, 4444, 4445, 9,
       4446, 4472, 4488, 4492, 9,
       4493, 4514, 4523, 4524, 9,
       4525, 4545, 4557, 4558, 9,
       4559, 4579, 4587, 4588, 9,
       4589, 4611, 4625, 4626, 9,
       4627, 4653, 4656, 4660, 9,
       4661, 4683, 4697, 4698, 9,
       4699, 4732, 4760, 4764, 9,
       4765, 4779, 4780, 4784, 9,
       4785, 4810, 4825, 4829, 9,
       4830, 4854, 4871, 4875, 9,
       4876, 4902, 4919, 4923, 9,
       4924, 4948, 4963, 4967, 9,

 // properties: name, type, flags
       4968, 4983, 0x02005001, 		 // int ActualCurrency
       4987, 5004, 0x0a015003, 		 // QString AdditionalHeader
       5012, 5030, 0x0a015003, 		 // QString AdditionalTrailer
       5038, 5058, 0x02005001, 		 // int AmountDecimalPlaces
       5062, 5072, 0x01015003, 		 // bool AsyncMode
       5077, 5094, 0x02015003, 		 // int BinaryConversion
       5098, 5118, 0x01005001, 		 // bool CapAdditionalHeader
       5123, 5142, 0x01005001, 		 // bool CapAdditionalLines
       5147, 5168, 0x01005001, 		 // bool CapAdditionalTrailer
       5173, 5193, 0x01005001, 		 // bool CapAmountAdjustment
       5198, 5215, 0x01005001, 		 // bool CapAmountNotPaid
       5220, 5233, 0x01005001, 		 // bool CapChangeDue
       5238, 5252, 0x01005001, 		 // bool CapCheckTotal
       5257, 5283, 0x01005001, 		 // bool CapCompareFirmwareVersion
       5288, 5303, 0x01005001, 		 // bool CapCoverSensor
       5308, 5323, 0x01005001, 		 // bool CapDoubleWidth
       5328, 5348, 0x01005001, 		 // bool CapDuplicateReceipt
       5353, 5379, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       5384, 5408, 0x01005001, 		 // bool CapFiscalReceiptStation
       5413, 5434, 0x01005001, 		 // bool CapFiscalReceiptType
       5439, 5454, 0x01005001, 		 // bool CapFixedOutput
       5459, 5474, 0x01005001, 		 // bool CapHasVatTable
       5479, 5500, 0x01005001, 		 // bool CapIndependentHeader
       5505, 5517, 0x01005001, 		 // bool CapItemList
       5522, 5540, 0x01005001, 		 // bool CapJrnEmptySensor
       5545, 5565, 0x01005001, 		 // bool CapJrnNearEndSensor
       5570, 5584, 0x01005001, 		 // bool CapJrnPresent
       5589, 5608, 0x01005001, 		 // bool CapMultiContractor
       5613, 5630, 0x01005001, 		 // bool CapNonFiscalMode
       5635, 5655, 0x01005001, 		 // bool CapOnlyVoidLastItem
       5660, 5684, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       5689, 5710, 0x01005001, 		 // bool CapPackageAdjustment
       5715, 5736, 0x01005001, 		 // bool CapPercentAdjustment
       5741, 5763, 0x01005001, 		 // bool CapPositiveAdjustment
       5768, 5798, 0x01005001, 		 // bool CapPositiveSubtotalAdjustment
       5803, 5818, 0x01005001, 		 // bool CapPostPreLine
       5823, 5842, 0x01005001, 		 // bool CapPowerLossReport
       5847, 5865, 0x02005001, 		 // int CapPowerReporting
       5869, 5895, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5900, 5918, 0x01005001, 		 // bool CapRecEmptySensor
       5923, 5943, 0x01005001, 		 // bool CapRecNearEndSensor
       5948, 5962, 0x01005001, 		 // bool CapRecPresent
       5967, 5985, 0x01005001, 		 // bool CapReceiptNotPaid
       5990, 6015, 0x01005001, 		 // bool CapRemainingFiscalMemory
       6020, 6036, 0x01005001, 		 // bool CapReservedWord
       6041, 6056, 0x01005001, 		 // bool CapSetCurrency
       6061, 6074, 0x01005001, 		 // bool CapSetHeader
       6079, 6091, 0x01005001, 		 // bool CapSetPOSID
       6096, 6116, 0x01005001, 		 // bool CapSetStoreFiscalID
       6121, 6135, 0x01005001, 		 // bool CapSetTrailer
       6140, 6155, 0x01005001, 		 // bool CapSetVatTable
       6160, 6178, 0x01005001, 		 // bool CapSlpEmptySensor
       6183, 6204, 0x01005001, 		 // bool CapSlpFiscalDocument
       6209, 6224, 0x01005001, 		 // bool CapSlpFullSlip
       6229, 6249, 0x01005001, 		 // bool CapSlpNearEndSensor
       6254, 6268, 0x01005001, 		 // bool CapSlpPresent
       6273, 6290, 0x01005001, 		 // bool CapSlpValidation
       6295, 6318, 0x01005001, 		 // bool CapStatisticsReporting
       6323, 6346, 0x01005001, 		 // bool CapSubAmountAdjustment
       6351, 6375, 0x01005001, 		 // bool CapSubPercentAdjustment
       6380, 6392, 0x01005001, 		 // bool CapSubtotal
       6397, 6414, 0x01005001, 		 // bool CapTotalizerType
       6419, 6435, 0x01005001, 		 // bool CapTrainingMode
       6440, 6458, 0x01005001, 		 // bool CapUpdateFirmware
       6463, 6483, 0x01005001, 		 // bool CapUpdateStatistics
       6488, 6507, 0x01005001, 		 // bool CapValidateJournal
       6512, 6523, 0x01005001, 		 // bool CapXReport
       6528, 6538, 0x0a015003, 		 // QString ChangeDue
       6546, 6562, 0x0a005001, 		 // QString CheckHealthText
       6570, 6581, 0x01015003, 		 // bool CheckTotal
       6586, 6594, 0x01005001, 		 // bool Claimed
       6599, 6612, 0x02015003, 		 // int ContractorId
       6616, 6641, 0x0a005001, 		 // QString ControlObjectDescription
       6649, 6670, 0x02005001, 		 // int ControlObjectVersion
       6674, 6686, 0x02005001, 		 // int CountryCode
       6690, 6700, 0x01005001, 		 // bool CoverOpen
       6705, 6714, 0x02015003, 		 // int DateType
       6718, 6728, 0x01005001, 		 // bool DayOpened
       6733, 6751, 0x02005001, 		 // int DescriptionLength
       6755, 6773, 0x0a005001, 		 // QString DeviceDescription
       6781, 6795, 0x01015003, 		 // bool DeviceEnabled
       6800, 6811, 0x0a005001, 		 // QString DeviceName
       6819, 6836, 0x01015003, 		 // bool DuplicateReceipt
       6841, 6852, 0x02005001, 		 // int ErrorLevel
       6856, 6867, 0x02005001, 		 // int ErrorOutID
       6871, 6882, 0x02005001, 		 // int ErrorState
       6886, 6899, 0x02005001, 		 // int ErrorStation
       6903, 6915, 0x0a005001, 		 // QString ErrorString
       6923, 6944, 0x02015003, 		 // int FiscalReceiptStation
       6948, 6966, 0x02015003, 		 // int FiscalReceiptType
       6970, 6983, 0x01015003, 		 // bool FlagWhenIdle
       6988, 7001, 0x01015003, 		 // bool FreezeEvents
       7006, 7015, 0x01005001, 		 // bool JrnEmpty
       7020, 7031, 0x01005001, 		 // bool JrnNearEnd
       7036, 7050, 0x02005001, 		 // int MessageLength
       7054, 7066, 0x02015003, 		 // int MessageType
       7070, 7085, 0x02005001, 		 // int NumHeaderLines
       7089, 7105, 0x02005001, 		 // int NumTrailerLines
       7109, 7121, 0x02005001, 		 // int NumVatRates
       7125, 7136, 0x02005001, 		 // int OpenResult
       7140, 7149, 0x02005001, 		 // int OutputID
       7153, 7162, 0x0a015003, 		 // QString PostLine
       7170, 7182, 0x02015003, 		 // int PowerNotify
       7186, 7197, 0x02005001, 		 // int PowerState
       7201, 7209, 0x0a015003, 		 // QString PreLine
       7217, 7240, 0x0a005001, 		 // QString PredefinedPaymentLines
       7248, 7261, 0x02005001, 		 // int PrinterState
       7265, 7287, 0x02005001, 		 // int QuantityDecimalPlaces
       7291, 7306, 0x02005001, 		 // int QuantityLength
       7310, 7319, 0x01005001, 		 // bool RecEmpty
       7324, 7335, 0x01005001, 		 // bool RecNearEnd
       7340, 7362, 0x02005001, 		 // int RemainingFiscalMemory
       7366, 7379, 0x0a005001, 		 // QString ReservedWord
       7387, 7398, 0x02005001, 		 // int ResultCode
       7402, 7421, 0x02005001, 		 // int ResultCodeExtended
       7425, 7450, 0x0a005001, 		 // QString ServiceObjectDescription
       7458, 7479, 0x02005001, 		 // int ServiceObjectVersion
       7483, 7497, 0x02015003, 		 // int SlipSelection
       7501, 7510, 0x01005001, 		 // bool SlpEmpty
       7515, 7526, 0x01005001, 		 // bool SlpNearEnd
       7531, 7537, 0x02005001, 		 // int State
       7541, 7555, 0x02015003, 		 // int TotalizerType
       7559, 7578, 0x01005001, 		 // bool TrainingModeActive
       7583, 7591, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0"
    "\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0"
    "int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0"
    "int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemAdjustmentVoid(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0"
    "\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0"
    "Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecItemRefund(QString,qlonglong,int,int,qlonglong,QString)\0Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0int\0\0PrintRecItemRefundVoid(QString,qlonglong,int,int,qlonglong,QString)\0"
    "Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0int\0\0PrintRecItemVoid(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecMessage(QString)\0"
    "Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0"
    "int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0"
    "AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0"
    "int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0"
    "ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0"
    "FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0"
    "PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0"
    "LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0"
    "ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0"
    "bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCompareFirmwareVersion\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0"
    "bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0"
    "bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0CapPositiveSubtotalAdjustment\0"
    "bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0"
    "bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0"
    "bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0"
    "int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0"
    "MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0QString\0PredefinedPaymentLines\0QString\0PrinterState\0"
    "int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter(),
qt_meta_data_OPOS__IOPOSFiscalPrinter }
};

void *IOPOSFiscalPrinter::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       103,    10, // methods
       124,    525, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 193, 208, 212, 9,
       213, 238, 250, 254, 9,
       255, 281, 302, 306, 9,
       307, 327, 335, 339, 9,
       340, 359, 365, 369, 9,
       370, 387, 388, 392, 9,
       393, 411, 419, 423, 9,
       424, 440, 441, 445, 9,
       446, 463, 469, 473, 9,
       474, 491, 499, 503, 9,
       504, 517, 518, 522, 9,
       523, 537, 538, 542, 9,
       543, 551, 552, 556, 9,
       557, 594, 619, 623, 9,
       624, 652, 674, 678, 9,
       679, 699, 700, 704, 9,
       705, 728, 740, 744, 9,
       745, 762, 763, 767, 9,
       768, 783, 784, 788, 9,
       789, 803, 804, 808, 9,
       809, 824, 825, 829, 9,
       830, 843, 844, 848, 9,
       849, 863, 864, 868, 9,
       869, 896, 918, 922, 9,
       923, 941, 946, 950, 9,
       951, 982, 1001, 1005, 9,
       1006, 1032, 1054, 1058, 9,
       1059, 1073, 1084, 1088, 9,
       1089, 1113, 1114, 1118, 9,
       1119, 1152, 1165, 1169, 9,
       1170, 1204, 1233, 1237, 9,
       1238, 1263, 1276, 1280, 9,
       1281, 1324, 1336, 1340, 9,
       1341, 1364, 1365, 1369, 9,
       1370, 1394, 1401, 1405, 9,
       1406, 1464, 1518, 1522, 9,
       1523, 1573, 1615, 1619, 9,
       1620, 1674, 1716, 1720, 9,
       1721, 1801, 1881, 1885, 9,
       1886, 1940, 1977, 1981, 9,
       1982, 2046, 2102, 2106, 9,
       2107, 2175, 2231, 2235, 9,
       2236, 2298, 2352, 2356, 9,
       2357, 2382, 2390, 2394, 9,
       2395, 2430, 2449, 2453, 9,
       2454, 2493, 2522, 2526, 9,
       2527, 2574, 2615, 2619, 9,
       2620, 2658, 2685, 2689, 9,
       2690, 2732, 2759, 2763, 9,
       2764, 2792, 2799, 2803, 9,
       2804, 2846, 2868, 2872, 9,
       2873, 2923, 2957, 2961, 9,
       2962, 2985, 2991, 2995, 9,
       2996, 3039, 3065, 3069, 9,
       3070, 3092, 3104, 3108, 9,
       3109, 3167, 3229, 3233, 9,
       3234, 3267, 3294, 3298, 9,
       3299, 3314, 3315, 3319, 9,
       3320, 3335, 3336, 3340, 9,
       3341, 3357, 3358, 3362, 9,
       3363, 3378, 3379, 3383, 9,
       3384, 3409, 3426, 3430, 9,
       3431, 3460, 3478, 3482, 9,
       3483, 3500, 3507, 3508, 9,
       3509, 3539, 3565, 3566, 9,
       3567, 3593, 3649, 3650, 9,
       3651, 3673, 3682, 3683, 9,
       3684, 3698, 3699, 3703, 9,
       3704, 3724, 3729, 3730, 9,
       3731, 3760, 3777, 3778, 9,
       3779, 3809, 3827, 3828, 9,
       3829, 3848, 3858, 3859, 9,
       3860, 3885, 3902, 3903, 9,
       3904, 3926, 3936, 3937, 9,
       3938, 3958, 3969, 3970, 9,
       3971, 3992, 4005, 4006, 9,
       4007, 4024, 4036, 4040, 9,
       4041, 4058, 4063, 4067, 9,
       4068, 4085, 4094, 4095, 9,
       4096, 4119, 4133, 4134, 9,
       4135, 4161, 4178, 4179, 9,
       4180, 4209, 4230, 4231, 9,
       4232, 4258, 4276, 4277, 9,
       4278, 4300, 4313, 4314, 9,
       4315, 4337, 4350, 4351, 9,
       4352, 4384, 4412, 4416, 9,
       4417, 4437, 4449, 4450, 9,
       4451, 4477, 4493, 4497, 9,
       4498, 4519, 4528, 4529, 9,
       4530, 4550, 4562, 4563, 9,
       4564, 4584, 4592, 4593, 9,
       4594, 4616, 4630, 4631, 9,
       4632, 4658, 4661, 4665, 9,
       4666, 4688, 4702, 4703, 9,
       4704, 4737, 4765, 4769, 9,
       4770, 4784, 4785, 4789, 9,
       4790, 4815, 4830, 4834, 9,
       4835, 4859, 4876, 4880, 9,
       4881, 4907, 4924, 4928, 9,
       4929, 4953, 4968, 4972, 9,

 // properties: name, type, flags
       4973, 4988, 0x02005001, 		 // int ActualCurrency
       4992, 5009, 0x0a015003, 		 // QString AdditionalHeader
       5017, 5035, 0x0a015003, 		 // QString AdditionalTrailer
       5043, 5063, 0x02005001, 		 // int AmountDecimalPlaces
       5067, 5077, 0x01015003, 		 // bool AsyncMode
       5082, 5099, 0x02015003, 		 // int BinaryConversion
       5103, 5123, 0x01005001, 		 // bool CapAdditionalHeader
       5128, 5147, 0x01005001, 		 // bool CapAdditionalLines
       5152, 5173, 0x01005001, 		 // bool CapAdditionalTrailer
       5178, 5198, 0x01005001, 		 // bool CapAmountAdjustment
       5203, 5220, 0x01005001, 		 // bool CapAmountNotPaid
       5225, 5238, 0x01005001, 		 // bool CapChangeDue
       5243, 5257, 0x01005001, 		 // bool CapCheckTotal
       5262, 5288, 0x01005001, 		 // bool CapCompareFirmwareVersion
       5293, 5308, 0x01005001, 		 // bool CapCoverSensor
       5313, 5328, 0x01005001, 		 // bool CapDoubleWidth
       5333, 5353, 0x01005001, 		 // bool CapDuplicateReceipt
       5358, 5384, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       5389, 5413, 0x01005001, 		 // bool CapFiscalReceiptStation
       5418, 5439, 0x01005001, 		 // bool CapFiscalReceiptType
       5444, 5459, 0x01005001, 		 // bool CapFixedOutput
       5464, 5479, 0x01005001, 		 // bool CapHasVatTable
       5484, 5505, 0x01005001, 		 // bool CapIndependentHeader
       5510, 5522, 0x01005001, 		 // bool CapItemList
       5527, 5545, 0x01005001, 		 // bool CapJrnEmptySensor
       5550, 5570, 0x01005001, 		 // bool CapJrnNearEndSensor
       5575, 5589, 0x01005001, 		 // bool CapJrnPresent
       5594, 5613, 0x01005001, 		 // bool CapMultiContractor
       5618, 5635, 0x01005001, 		 // bool CapNonFiscalMode
       5640, 5660, 0x01005001, 		 // bool CapOnlyVoidLastItem
       5665, 5689, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       5694, 5715, 0x01005001, 		 // bool CapPackageAdjustment
       5720, 5741, 0x01005001, 		 // bool CapPercentAdjustment
       5746, 5768, 0x01005001, 		 // bool CapPositiveAdjustment
       5773, 5803, 0x01005001, 		 // bool CapPositiveSubtotalAdjustment
       5808, 5823, 0x01005001, 		 // bool CapPostPreLine
       5828, 5847, 0x01005001, 		 // bool CapPowerLossReport
       5852, 5870, 0x02005001, 		 // int CapPowerReporting
       5874, 5900, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5905, 5923, 0x01005001, 		 // bool CapRecEmptySensor
       5928, 5948, 0x01005001, 		 // bool CapRecNearEndSensor
       5953, 5967, 0x01005001, 		 // bool CapRecPresent
       5972, 5990, 0x01005001, 		 // bool CapReceiptNotPaid
       5995, 6020, 0x01005001, 		 // bool CapRemainingFiscalMemory
       6025, 6041, 0x01005001, 		 // bool CapReservedWord
       6046, 6061, 0x01005001, 		 // bool CapSetCurrency
       6066, 6079, 0x01005001, 		 // bool CapSetHeader
       6084, 6096, 0x01005001, 		 // bool CapSetPOSID
       6101, 6121, 0x01005001, 		 // bool CapSetStoreFiscalID
       6126, 6140, 0x01005001, 		 // bool CapSetTrailer
       6145, 6160, 0x01005001, 		 // bool CapSetVatTable
       6165, 6183, 0x01005001, 		 // bool CapSlpEmptySensor
       6188, 6209, 0x01005001, 		 // bool CapSlpFiscalDocument
       6214, 6229, 0x01005001, 		 // bool CapSlpFullSlip
       6234, 6254, 0x01005001, 		 // bool CapSlpNearEndSensor
       6259, 6273, 0x01005001, 		 // bool CapSlpPresent
       6278, 6295, 0x01005001, 		 // bool CapSlpValidation
       6300, 6323, 0x01005001, 		 // bool CapStatisticsReporting
       6328, 6351, 0x01005001, 		 // bool CapSubAmountAdjustment
       6356, 6380, 0x01005001, 		 // bool CapSubPercentAdjustment
       6385, 6397, 0x01005001, 		 // bool CapSubtotal
       6402, 6419, 0x01005001, 		 // bool CapTotalizerType
       6424, 6440, 0x01005001, 		 // bool CapTrainingMode
       6445, 6463, 0x01005001, 		 // bool CapUpdateFirmware
       6468, 6488, 0x01005001, 		 // bool CapUpdateStatistics
       6493, 6512, 0x01005001, 		 // bool CapValidateJournal
       6517, 6528, 0x01005001, 		 // bool CapXReport
       6533, 6543, 0x0a015003, 		 // QString ChangeDue
       6551, 6567, 0x0a005001, 		 // QString CheckHealthText
       6575, 6586, 0x01015003, 		 // bool CheckTotal
       6591, 6599, 0x01005001, 		 // bool Claimed
       6604, 6617, 0x02015003, 		 // int ContractorId
       6621, 6646, 0x0a005001, 		 // QString ControlObjectDescription
       6654, 6675, 0x02005001, 		 // int ControlObjectVersion
       6679, 6691, 0x02005001, 		 // int CountryCode
       6695, 6705, 0x01005001, 		 // bool CoverOpen
       6710, 6719, 0x02015003, 		 // int DateType
       6723, 6733, 0x01005001, 		 // bool DayOpened
       6738, 6756, 0x02005001, 		 // int DescriptionLength
       6760, 6778, 0x0a005001, 		 // QString DeviceDescription
       6786, 6800, 0x01015003, 		 // bool DeviceEnabled
       6805, 6816, 0x0a005001, 		 // QString DeviceName
       6824, 6841, 0x01015003, 		 // bool DuplicateReceipt
       6846, 6857, 0x02005001, 		 // int ErrorLevel
       6861, 6872, 0x02005001, 		 // int ErrorOutID
       6876, 6887, 0x02005001, 		 // int ErrorState
       6891, 6904, 0x02005001, 		 // int ErrorStation
       6908, 6920, 0x0a005001, 		 // QString ErrorString
       6928, 6949, 0x02015003, 		 // int FiscalReceiptStation
       6953, 6971, 0x02015003, 		 // int FiscalReceiptType
       6975, 6988, 0x01015003, 		 // bool FlagWhenIdle
       6993, 7006, 0x01015003, 		 // bool FreezeEvents
       7011, 7020, 0x01005001, 		 // bool JrnEmpty
       7025, 7036, 0x01005001, 		 // bool JrnNearEnd
       7041, 7055, 0x02005001, 		 // int MessageLength
       7059, 7071, 0x02015003, 		 // int MessageType
       7075, 7090, 0x02005001, 		 // int NumHeaderLines
       7094, 7110, 0x02005001, 		 // int NumTrailerLines
       7114, 7126, 0x02005001, 		 // int NumVatRates
       7130, 7141, 0x02005001, 		 // int OpenResult
       7145, 7154, 0x02005001, 		 // int OutputID
       7158, 7167, 0x0a015003, 		 // QString PostLine
       7175, 7187, 0x02015003, 		 // int PowerNotify
       7191, 7202, 0x02005001, 		 // int PowerState
       7206, 7214, 0x0a015003, 		 // QString PreLine
       7222, 7245, 0x0a005001, 		 // QString PredefinedPaymentLines
       7253, 7266, 0x02005001, 		 // int PrinterState
       7270, 7292, 0x02005001, 		 // int QuantityDecimalPlaces
       7296, 7311, 0x02005001, 		 // int QuantityLength
       7315, 7324, 0x01005001, 		 // bool RecEmpty
       7329, 7340, 0x01005001, 		 // bool RecNearEnd
       7345, 7367, 0x02005001, 		 // int RemainingFiscalMemory
       7371, 7384, 0x0a005001, 		 // QString ReservedWord
       7392, 7403, 0x02005001, 		 // int ResultCode
       7407, 7426, 0x02005001, 		 // int ResultCodeExtended
       7430, 7455, 0x0a005001, 		 // QString ServiceObjectDescription
       7463, 7484, 0x02005001, 		 // int ServiceObjectVersion
       7488, 7502, 0x02015003, 		 // int SlipSelection
       7506, 7515, 0x01005001, 		 // bool SlpEmpty
       7520, 7531, 0x01005001, 		 // bool SlpNearEnd
       7536, 7542, 0x02005001, 		 // int State
       7546, 7560, 0x02015003, 		 // int TotalizerType
       7564, 7583, 0x01005001, 		 // bool TrainingModeActive
       7588, 7596, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0"
    "\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0"
    "int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0"
    "int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemAdjustmentVoid(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0"
    "\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0"
    "Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecItemRefund(QString,qlonglong,int,int,qlonglong,QString)\0Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0int\0\0PrintRecItemRefundVoid(QString,qlonglong,int,int,qlonglong,QString)\0"
    "Description,Amount,Quantity,VatInfo,UnitAmount,UnitName\0int\0\0PrintRecItemVoid(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecMessage(QString)\0"
    "Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0"
    "int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0"
    "AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0"
    "int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0"
    "ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0"
    "FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0"
    "PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0"
    "LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0"
    "ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0"
    "bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCompareFirmwareVersion\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0"
    "bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0"
    "bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0CapPositiveSubtotalAdjustment\0"
    "bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0"
    "bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0"
    "bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0"
    "int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0"
    "MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0QString\0PredefinedPaymentLines\0QString\0PrinterState\0"
    "int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_12(),
qt_meta_data_OPOS__IOPOSFiscalPrinter_1_12 }
};

void *IOPOSFiscalPrinter_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_12()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter_1_11[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       101,    10, // methods
       124,    515, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 193, 208, 212, 9,
       213, 238, 250, 254, 9,
       255, 281, 302, 306, 9,
       307, 327, 335, 339, 9,
       340, 359, 365, 369, 9,
       370, 387, 388, 392, 9,
       393, 411, 419, 423, 9,
       424, 440, 441, 445, 9,
       446, 463, 469, 473, 9,
       474, 491, 499, 503, 9,
       504, 517, 518, 522, 9,
       523, 537, 538, 542, 9,
       543, 551, 552, 556, 9,
       557, 594, 619, 623, 9,
       624, 652, 674, 678, 9,
       679, 699, 700, 704, 9,
       705, 728, 740, 744, 9,
       745, 762, 763, 767, 9,
       768, 783, 784, 788, 9,
       789, 803, 804, 808, 9,
       809, 824, 825, 829, 9,
       830, 843, 844, 848, 9,
       849, 863, 864, 868, 9,
       869, 896, 918, 922, 9,
       923, 941, 946, 950, 9,
       951, 982, 1001, 1005, 9,
       1006, 1032, 1054, 1058, 9,
       1059, 1073, 1084, 1088, 9,
       1089, 1113, 1114, 1118, 9,
       1119, 1152, 1165, 1169, 9,
       1170, 1204, 1233, 1237, 9,
       1238, 1263, 1276, 1280, 9,
       1281, 1324, 1336, 1340, 9,
       1341, 1364, 1365, 1369, 9,
       1370, 1394, 1401, 1405, 9,
       1406, 1464, 1518, 1522, 9,
       1523, 1573, 1615, 1619, 9,
       1620, 1674, 1716, 1720, 9,
       1721, 1801, 1881, 1885, 9,
       1886, 1940, 1977, 1981, 9,
       1982, 2044, 2098, 2102, 9,
       2103, 2128, 2136, 2140, 9,
       2141, 2176, 2195, 2199, 9,
       2200, 2239, 2268, 2272, 9,
       2273, 2320, 2361, 2365, 9,
       2366, 2404, 2431, 2435, 9,
       2436, 2478, 2505, 2509, 9,
       2510, 2538, 2545, 2549, 9,
       2550, 2592, 2614, 2618, 9,
       2619, 2669, 2703, 2707, 9,
       2708, 2731, 2737, 2741, 9,
       2742, 2785, 2811, 2815, 9,
       2816, 2838, 2850, 2854, 9,
       2855, 2913, 2975, 2979, 9,
       2980, 3013, 3040, 3044, 9,
       3045, 3060, 3061, 3065, 9,
       3066, 3081, 3082, 3086, 9,
       3087, 3103, 3104, 3108, 9,
       3109, 3124, 3125, 3129, 9,
       3130, 3155, 3172, 3176, 9,
       3177, 3206, 3224, 3228, 9,
       3229, 3246, 3253, 3254, 9,
       3255, 3285, 3311, 3312, 9,
       3313, 3339, 3395, 3396, 9,
       3397, 3419, 3428, 3429, 9,
       3430, 3444, 3445, 3449, 9,
       3450, 3470, 3475, 3476, 9,
       3477, 3506, 3523, 3524, 9,
       3525, 3555, 3573, 3574, 9,
       3575, 3594, 3604, 3605, 9,
       3606, 3631, 3648, 3649, 9,
       3650, 3672, 3682, 3683, 9,
       3684, 3704, 3715, 3716, 9,
       3717, 3738, 3751, 3752, 9,
       3753, 3770, 3782, 3786, 9,
       3787, 3804, 3809, 3813, 9,
       3814, 3831, 3840, 3841, 9,
       3842, 3865, 3879, 3880, 9,
       3881, 3907, 3924, 3925, 9,
       3926, 3955, 3976, 3977, 9,
       3978, 4004, 4022, 4023, 9,
       4024, 4046, 4059, 4060, 9,
       4061, 4083, 4096, 4097, 9,
       4098, 4130, 4158, 4162, 9,
       4163, 4183, 4195, 4196, 9,
       4197, 4223, 4239, 4243, 9,
       4244, 4265, 4274, 4275, 9,
       4276, 4296, 4308, 4309, 9,
       4310, 4330, 4338, 4339, 9,
       4340, 4362, 4376, 4377, 9,
       4378, 4404, 4407, 4411, 9,
       4412, 4434, 4448, 4449, 9,
       4450, 4483, 4511, 4515, 9,
       4516, 4530, 4531, 4535, 9,
       4536, 4561, 4576, 4580, 9,
       4581, 4605, 4622, 4626, 9,
       4627, 4653, 4670, 4674, 9,
       4675, 4699, 4714, 4718, 9,

 // properties: name, type, flags
       4719, 4734, 0x02005001, 		 // int ActualCurrency
       4738, 4755, 0x0a015003, 		 // QString AdditionalHeader
       4763, 4781, 0x0a015003, 		 // QString AdditionalTrailer
       4789, 4809, 0x02005001, 		 // int AmountDecimalPlaces
       4813, 4823, 0x01015003, 		 // bool AsyncMode
       4828, 4845, 0x02015003, 		 // int BinaryConversion
       4849, 4869, 0x01005001, 		 // bool CapAdditionalHeader
       4874, 4893, 0x01005001, 		 // bool CapAdditionalLines
       4898, 4919, 0x01005001, 		 // bool CapAdditionalTrailer
       4924, 4944, 0x01005001, 		 // bool CapAmountAdjustment
       4949, 4966, 0x01005001, 		 // bool CapAmountNotPaid
       4971, 4984, 0x01005001, 		 // bool CapChangeDue
       4989, 5003, 0x01005001, 		 // bool CapCheckTotal
       5008, 5034, 0x01005001, 		 // bool CapCompareFirmwareVersion
       5039, 5054, 0x01005001, 		 // bool CapCoverSensor
       5059, 5074, 0x01005001, 		 // bool CapDoubleWidth
       5079, 5099, 0x01005001, 		 // bool CapDuplicateReceipt
       5104, 5130, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       5135, 5159, 0x01005001, 		 // bool CapFiscalReceiptStation
       5164, 5185, 0x01005001, 		 // bool CapFiscalReceiptType
       5190, 5205, 0x01005001, 		 // bool CapFixedOutput
       5210, 5225, 0x01005001, 		 // bool CapHasVatTable
       5230, 5251, 0x01005001, 		 // bool CapIndependentHeader
       5256, 5268, 0x01005001, 		 // bool CapItemList
       5273, 5291, 0x01005001, 		 // bool CapJrnEmptySensor
       5296, 5316, 0x01005001, 		 // bool CapJrnNearEndSensor
       5321, 5335, 0x01005001, 		 // bool CapJrnPresent
       5340, 5359, 0x01005001, 		 // bool CapMultiContractor
       5364, 5381, 0x01005001, 		 // bool CapNonFiscalMode
       5386, 5406, 0x01005001, 		 // bool CapOnlyVoidLastItem
       5411, 5435, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       5440, 5461, 0x01005001, 		 // bool CapPackageAdjustment
       5466, 5487, 0x01005001, 		 // bool CapPercentAdjustment
       5492, 5514, 0x01005001, 		 // bool CapPositiveAdjustment
       5519, 5549, 0x01005001, 		 // bool CapPositiveSubtotalAdjustment
       5554, 5569, 0x01005001, 		 // bool CapPostPreLine
       5574, 5593, 0x01005001, 		 // bool CapPowerLossReport
       5598, 5616, 0x02005001, 		 // int CapPowerReporting
       5620, 5646, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5651, 5669, 0x01005001, 		 // bool CapRecEmptySensor
       5674, 5694, 0x01005001, 		 // bool CapRecNearEndSensor
       5699, 5713, 0x01005001, 		 // bool CapRecPresent
       5718, 5736, 0x01005001, 		 // bool CapReceiptNotPaid
       5741, 5766, 0x01005001, 		 // bool CapRemainingFiscalMemory
       5771, 5787, 0x01005001, 		 // bool CapReservedWord
       5792, 5807, 0x01005001, 		 // bool CapSetCurrency
       5812, 5825, 0x01005001, 		 // bool CapSetHeader
       5830, 5842, 0x01005001, 		 // bool CapSetPOSID
       5847, 5867, 0x01005001, 		 // bool CapSetStoreFiscalID
       5872, 5886, 0x01005001, 		 // bool CapSetTrailer
       5891, 5906, 0x01005001, 		 // bool CapSetVatTable
       5911, 5929, 0x01005001, 		 // bool CapSlpEmptySensor
       5934, 5955, 0x01005001, 		 // bool CapSlpFiscalDocument
       5960, 5975, 0x01005001, 		 // bool CapSlpFullSlip
       5980, 6000, 0x01005001, 		 // bool CapSlpNearEndSensor
       6005, 6019, 0x01005001, 		 // bool CapSlpPresent
       6024, 6041, 0x01005001, 		 // bool CapSlpValidation
       6046, 6069, 0x01005001, 		 // bool CapStatisticsReporting
       6074, 6097, 0x01005001, 		 // bool CapSubAmountAdjustment
       6102, 6126, 0x01005001, 		 // bool CapSubPercentAdjustment
       6131, 6143, 0x01005001, 		 // bool CapSubtotal
       6148, 6165, 0x01005001, 		 // bool CapTotalizerType
       6170, 6186, 0x01005001, 		 // bool CapTrainingMode
       6191, 6209, 0x01005001, 		 // bool CapUpdateFirmware
       6214, 6234, 0x01005001, 		 // bool CapUpdateStatistics
       6239, 6258, 0x01005001, 		 // bool CapValidateJournal
       6263, 6274, 0x01005001, 		 // bool CapXReport
       6279, 6289, 0x0a015003, 		 // QString ChangeDue
       6297, 6313, 0x0a005001, 		 // QString CheckHealthText
       6321, 6332, 0x01015003, 		 // bool CheckTotal
       6337, 6345, 0x01005001, 		 // bool Claimed
       6350, 6363, 0x02015003, 		 // int ContractorId
       6367, 6392, 0x0a005001, 		 // QString ControlObjectDescription
       6400, 6421, 0x02005001, 		 // int ControlObjectVersion
       6425, 6437, 0x02005001, 		 // int CountryCode
       6441, 6451, 0x01005001, 		 // bool CoverOpen
       6456, 6465, 0x02015003, 		 // int DateType
       6469, 6479, 0x01005001, 		 // bool DayOpened
       6484, 6502, 0x02005001, 		 // int DescriptionLength
       6506, 6524, 0x0a005001, 		 // QString DeviceDescription
       6532, 6546, 0x01015003, 		 // bool DeviceEnabled
       6551, 6562, 0x0a005001, 		 // QString DeviceName
       6570, 6587, 0x01015003, 		 // bool DuplicateReceipt
       6592, 6603, 0x02005001, 		 // int ErrorLevel
       6607, 6618, 0x02005001, 		 // int ErrorOutID
       6622, 6633, 0x02005001, 		 // int ErrorState
       6637, 6650, 0x02005001, 		 // int ErrorStation
       6654, 6666, 0x0a005001, 		 // QString ErrorString
       6674, 6695, 0x02015003, 		 // int FiscalReceiptStation
       6699, 6717, 0x02015003, 		 // int FiscalReceiptType
       6721, 6734, 0x01015003, 		 // bool FlagWhenIdle
       6739, 6752, 0x01015003, 		 // bool FreezeEvents
       6757, 6766, 0x01005001, 		 // bool JrnEmpty
       6771, 6782, 0x01005001, 		 // bool JrnNearEnd
       6787, 6801, 0x02005001, 		 // int MessageLength
       6805, 6817, 0x02015003, 		 // int MessageType
       6821, 6836, 0x02005001, 		 // int NumHeaderLines
       6840, 6856, 0x02005001, 		 // int NumTrailerLines
       6860, 6872, 0x02005001, 		 // int NumVatRates
       6876, 6887, 0x02005001, 		 // int OpenResult
       6891, 6900, 0x02005001, 		 // int OutputID
       6904, 6913, 0x0a015003, 		 // QString PostLine
       6921, 6933, 0x02015003, 		 // int PowerNotify
       6937, 6948, 0x02005001, 		 // int PowerState
       6952, 6960, 0x0a015003, 		 // QString PreLine
       6968, 6991, 0x0a005001, 		 // QString PredefinedPaymentLines
       6999, 7012, 0x02005001, 		 // int PrinterState
       7016, 7038, 0x02005001, 		 // int QuantityDecimalPlaces
       7042, 7057, 0x02005001, 		 // int QuantityLength
       7061, 7070, 0x01005001, 		 // bool RecEmpty
       7075, 7086, 0x01005001, 		 // bool RecNearEnd
       7091, 7113, 0x02005001, 		 // int RemainingFiscalMemory
       7117, 7130, 0x0a005001, 		 // QString ReservedWord
       7138, 7149, 0x02005001, 		 // int ResultCode
       7153, 7172, 0x02005001, 		 // int ResultCodeExtended
       7176, 7201, 0x0a005001, 		 // QString ServiceObjectDescription
       7209, 7230, 0x02005001, 		 // int ServiceObjectVersion
       7234, 7248, 0x02015003, 		 // int SlipSelection
       7252, 7261, 0x01005001, 		 // bool SlpEmpty
       7266, 7277, 0x01005001, 		 // bool SlpNearEnd
       7282, 7288, 0x02005001, 		 // int State
       7292, 7306, 0x02015003, 		 // int TotalizerType
       7310, 7329, 0x01005001, 		 // bool TrainingModeActive
       7334, 7342, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_11() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter_1_11\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0"
    "\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0"
    "int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0"
    "int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemAdjustmentVoid(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0"
    "\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0"
    "Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecItemVoid(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecMessage(QString)\0Message\0int\0\0"
    "PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0"
    "int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0"
    "AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0"
    "int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0"
    "ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0"
    "FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0"
    "PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0"
    "LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0"
    "ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0"
    "bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCompareFirmwareVersion\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0"
    "bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0"
    "bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0CapPositiveSubtotalAdjustment\0"
    "bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0"
    "bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0"
    "bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0"
    "int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0"
    "MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0QString\0PredefinedPaymentLines\0QString\0PrinterState\0"
    "int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter_1_11::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_11(),
qt_meta_data_OPOS__IOPOSFiscalPrinter_1_11 }
};

void *IOPOSFiscalPrinter_1_11::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_11()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter_1_11*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       99,    10, // methods
       123,    505, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 192, 207, 211, 9,
       212, 237, 249, 253, 9,
       254, 280, 301, 305, 9,
       306, 326, 334, 338, 9,
       339, 358, 364, 368, 9,
       369, 386, 387, 391, 9,
       392, 410, 418, 422, 9,
       423, 439, 440, 444, 9,
       445, 462, 468, 472, 9,
       473, 490, 498, 502, 9,
       503, 516, 517, 521, 9,
       522, 536, 537, 541, 9,
       542, 550, 551, 555, 9,
       556, 593, 618, 622, 9,
       623, 651, 673, 677, 9,
       678, 698, 699, 703, 9,
       704, 727, 739, 743, 9,
       744, 761, 762, 766, 9,
       767, 782, 783, 787, 9,
       788, 802, 803, 807, 9,
       808, 823, 824, 828, 9,
       829, 842, 843, 847, 9,
       848, 862, 863, 867, 9,
       868, 895, 917, 921, 9,
       922, 940, 945, 949, 9,
       950, 981, 1000, 1004, 9,
       1005, 1031, 1053, 1057, 9,
       1058, 1072, 1083, 1087, 9,
       1088, 1112, 1113, 1117, 9,
       1118, 1151, 1164, 1168, 9,
       1169, 1203, 1232, 1236, 9,
       1237, 1262, 1275, 1279, 9,
       1280, 1323, 1335, 1339, 9,
       1340, 1363, 1364, 1368, 9,
       1369, 1393, 1400, 1404, 9,
       1405, 1463, 1517, 1521, 9,
       1522, 1572, 1614, 1618, 9,
       1619, 1699, 1779, 1783, 9,
       1784, 1838, 1875, 1879, 9,
       1880, 1905, 1913, 1917, 9,
       1918, 1953, 1972, 1976, 9,
       1977, 2016, 2045, 2049, 9,
       2050, 2097, 2138, 2142, 9,
       2143, 2181, 2208, 2212, 9,
       2213, 2255, 2282, 2286, 9,
       2287, 2315, 2322, 2326, 9,
       2327, 2369, 2391, 2395, 9,
       2396, 2446, 2480, 2484, 9,
       2485, 2508, 2514, 2518, 9,
       2519, 2562, 2588, 2592, 9,
       2593, 2615, 2627, 2631, 9,
       2632, 2690, 2752, 2756, 9,
       2757, 2790, 2817, 2821, 9,
       2822, 2837, 2838, 2842, 9,
       2843, 2858, 2859, 2863, 9,
       2864, 2880, 2881, 2885, 9,
       2886, 2901, 2902, 2906, 9,
       2907, 2932, 2949, 2953, 9,
       2954, 2983, 3001, 3005, 9,
       3006, 3023, 3030, 3031, 9,
       3032, 3062, 3088, 3089, 9,
       3090, 3116, 3172, 3173, 9,
       3174, 3196, 3205, 3206, 9,
       3207, 3221, 3222, 3226, 9,
       3227, 3247, 3252, 3253, 9,
       3254, 3283, 3300, 3301, 9,
       3302, 3332, 3350, 3351, 9,
       3352, 3371, 3381, 3382, 9,
       3383, 3408, 3425, 3426, 9,
       3427, 3449, 3459, 3460, 9,
       3461, 3481, 3492, 3493, 9,
       3494, 3515, 3528, 3529, 9,
       3530, 3547, 3559, 3563, 9,
       3564, 3581, 3586, 3590, 9,
       3591, 3608, 3617, 3618, 9,
       3619, 3642, 3656, 3657, 9,
       3658, 3684, 3701, 3702, 9,
       3703, 3732, 3753, 3754, 9,
       3755, 3781, 3799, 3800, 9,
       3801, 3823, 3836, 3837, 9,
       3838, 3860, 3873, 3874, 9,
       3875, 3907, 3935, 3939, 9,
       3940, 3960, 3972, 3973, 9,
       3974, 4000, 4016, 4020, 9,
       4021, 4042, 4051, 4052, 9,
       4053, 4073, 4085, 4086, 9,
       4087, 4107, 4115, 4116, 9,
       4117, 4139, 4153, 4154, 9,
       4155, 4181, 4184, 4188, 9,
       4189, 4211, 4225, 4226, 9,
       4227, 4260, 4288, 4292, 9,
       4293, 4307, 4308, 4312, 9,
       4313, 4338, 4353, 4357, 9,
       4358, 4382, 4399, 4403, 9,
       4404, 4430, 4447, 4451, 9,
       4452, 4476, 4491, 4495, 9,

 // properties: name, type, flags
       4496, 4511, 0x02005001, 		 // int ActualCurrency
       4515, 4532, 0x0a015003, 		 // QString AdditionalHeader
       4540, 4558, 0x0a015003, 		 // QString AdditionalTrailer
       4566, 4586, 0x02005001, 		 // int AmountDecimalPlaces
       4590, 4600, 0x01015003, 		 // bool AsyncMode
       4605, 4622, 0x02015003, 		 // int BinaryConversion
       4626, 4646, 0x01005001, 		 // bool CapAdditionalHeader
       4651, 4670, 0x01005001, 		 // bool CapAdditionalLines
       4675, 4696, 0x01005001, 		 // bool CapAdditionalTrailer
       4701, 4721, 0x01005001, 		 // bool CapAmountAdjustment
       4726, 4743, 0x01005001, 		 // bool CapAmountNotPaid
       4748, 4761, 0x01005001, 		 // bool CapChangeDue
       4766, 4780, 0x01005001, 		 // bool CapCheckTotal
       4785, 4811, 0x01005001, 		 // bool CapCompareFirmwareVersion
       4816, 4831, 0x01005001, 		 // bool CapCoverSensor
       4836, 4851, 0x01005001, 		 // bool CapDoubleWidth
       4856, 4876, 0x01005001, 		 // bool CapDuplicateReceipt
       4881, 4907, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       4912, 4936, 0x01005001, 		 // bool CapFiscalReceiptStation
       4941, 4962, 0x01005001, 		 // bool CapFiscalReceiptType
       4967, 4982, 0x01005001, 		 // bool CapFixedOutput
       4987, 5002, 0x01005001, 		 // bool CapHasVatTable
       5007, 5028, 0x01005001, 		 // bool CapIndependentHeader
       5033, 5045, 0x01005001, 		 // bool CapItemList
       5050, 5068, 0x01005001, 		 // bool CapJrnEmptySensor
       5073, 5093, 0x01005001, 		 // bool CapJrnNearEndSensor
       5098, 5112, 0x01005001, 		 // bool CapJrnPresent
       5117, 5136, 0x01005001, 		 // bool CapMultiContractor
       5141, 5158, 0x01005001, 		 // bool CapNonFiscalMode
       5163, 5183, 0x01005001, 		 // bool CapOnlyVoidLastItem
       5188, 5212, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       5217, 5238, 0x01005001, 		 // bool CapPackageAdjustment
       5243, 5264, 0x01005001, 		 // bool CapPercentAdjustment
       5269, 5291, 0x01005001, 		 // bool CapPositiveAdjustment
       5296, 5311, 0x01005001, 		 // bool CapPostPreLine
       5316, 5335, 0x01005001, 		 // bool CapPowerLossReport
       5340, 5358, 0x02005001, 		 // int CapPowerReporting
       5362, 5388, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5393, 5411, 0x01005001, 		 // bool CapRecEmptySensor
       5416, 5436, 0x01005001, 		 // bool CapRecNearEndSensor
       5441, 5455, 0x01005001, 		 // bool CapRecPresent
       5460, 5478, 0x01005001, 		 // bool CapReceiptNotPaid
       5483, 5508, 0x01005001, 		 // bool CapRemainingFiscalMemory
       5513, 5529, 0x01005001, 		 // bool CapReservedWord
       5534, 5549, 0x01005001, 		 // bool CapSetCurrency
       5554, 5567, 0x01005001, 		 // bool CapSetHeader
       5572, 5584, 0x01005001, 		 // bool CapSetPOSID
       5589, 5609, 0x01005001, 		 // bool CapSetStoreFiscalID
       5614, 5628, 0x01005001, 		 // bool CapSetTrailer
       5633, 5648, 0x01005001, 		 // bool CapSetVatTable
       5653, 5671, 0x01005001, 		 // bool CapSlpEmptySensor
       5676, 5697, 0x01005001, 		 // bool CapSlpFiscalDocument
       5702, 5717, 0x01005001, 		 // bool CapSlpFullSlip
       5722, 5742, 0x01005001, 		 // bool CapSlpNearEndSensor
       5747, 5761, 0x01005001, 		 // bool CapSlpPresent
       5766, 5783, 0x01005001, 		 // bool CapSlpValidation
       5788, 5811, 0x01005001, 		 // bool CapStatisticsReporting
       5816, 5839, 0x01005001, 		 // bool CapSubAmountAdjustment
       5844, 5868, 0x01005001, 		 // bool CapSubPercentAdjustment
       5873, 5885, 0x01005001, 		 // bool CapSubtotal
       5890, 5907, 0x01005001, 		 // bool CapTotalizerType
       5912, 5928, 0x01005001, 		 // bool CapTrainingMode
       5933, 5951, 0x01005001, 		 // bool CapUpdateFirmware
       5956, 5976, 0x01005001, 		 // bool CapUpdateStatistics
       5981, 6000, 0x01005001, 		 // bool CapValidateJournal
       6005, 6016, 0x01005001, 		 // bool CapXReport
       6021, 6031, 0x0a015003, 		 // QString ChangeDue
       6039, 6055, 0x0a005001, 		 // QString CheckHealthText
       6063, 6074, 0x01015003, 		 // bool CheckTotal
       6079, 6087, 0x01005001, 		 // bool Claimed
       6092, 6105, 0x02015003, 		 // int ContractorId
       6109, 6134, 0x0a005001, 		 // QString ControlObjectDescription
       6142, 6163, 0x02005001, 		 // int ControlObjectVersion
       6167, 6179, 0x02005001, 		 // int CountryCode
       6183, 6193, 0x01005001, 		 // bool CoverOpen
       6198, 6207, 0x02015003, 		 // int DateType
       6211, 6221, 0x01005001, 		 // bool DayOpened
       6226, 6244, 0x02005001, 		 // int DescriptionLength
       6248, 6266, 0x0a005001, 		 // QString DeviceDescription
       6274, 6288, 0x01015003, 		 // bool DeviceEnabled
       6293, 6304, 0x0a005001, 		 // QString DeviceName
       6312, 6329, 0x01015003, 		 // bool DuplicateReceipt
       6334, 6345, 0x02005001, 		 // int ErrorLevel
       6349, 6360, 0x02005001, 		 // int ErrorOutID
       6364, 6375, 0x02005001, 		 // int ErrorState
       6379, 6392, 0x02005001, 		 // int ErrorStation
       6396, 6408, 0x0a005001, 		 // QString ErrorString
       6416, 6437, 0x02015003, 		 // int FiscalReceiptStation
       6441, 6459, 0x02015003, 		 // int FiscalReceiptType
       6463, 6476, 0x01015003, 		 // bool FlagWhenIdle
       6481, 6494, 0x01015003, 		 // bool FreezeEvents
       6499, 6508, 0x01005001, 		 // bool JrnEmpty
       6513, 6524, 0x01005001, 		 // bool JrnNearEnd
       6529, 6543, 0x02005001, 		 // int MessageLength
       6547, 6559, 0x02015003, 		 // int MessageType
       6563, 6578, 0x02005001, 		 // int NumHeaderLines
       6582, 6598, 0x02005001, 		 // int NumTrailerLines
       6602, 6614, 0x02005001, 		 // int NumVatRates
       6618, 6629, 0x02005001, 		 // int OpenResult
       6633, 6642, 0x02005001, 		 // int OutputID
       6646, 6655, 0x0a015003, 		 // QString PostLine
       6663, 6675, 0x02015003, 		 // int PowerNotify
       6679, 6690, 0x02005001, 		 // int PowerState
       6694, 6702, 0x0a015003, 		 // QString PreLine
       6710, 6733, 0x0a005001, 		 // QString PredefinedPaymentLines
       6741, 6754, 0x02005001, 		 // int PrinterState
       6758, 6780, 0x02005001, 		 // int QuantityDecimalPlaces
       6784, 6799, 0x02005001, 		 // int QuantityLength
       6803, 6812, 0x01005001, 		 // bool RecEmpty
       6817, 6828, 0x01005001, 		 // bool RecNearEnd
       6833, 6855, 0x02005001, 		 // int RemainingFiscalMemory
       6859, 6872, 0x0a005001, 		 // QString ReservedWord
       6880, 6891, 0x02005001, 		 // int ResultCode
       6895, 6914, 0x02005001, 		 // int ResultCodeExtended
       6918, 6943, 0x0a005001, 		 // QString ServiceObjectDescription
       6951, 6972, 0x02005001, 		 // int ServiceObjectVersion
       6976, 6990, 0x02015003, 		 // int SlipSelection
       6994, 7003, 0x01005001, 		 // bool SlpEmpty
       7008, 7019, 0x01005001, 		 // bool SlpNearEnd
       7024, 7030, 0x02005001, 		 // int State
       7034, 7048, 0x02015003, 		 // int TotalizerType
       7052, 7071, 0x01005001, 		 // bool TrainingModeActive
       7076, 7084, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0"
    "\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0"
    "int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0"
    "int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0"
    "int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecMessage(QString)\0Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0"
    "AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0"
    "Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0"
    "int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0"
    "Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0"
    "AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0"
    "NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0"
    "\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0"
    "MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0"
    "ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateFirmware(QString)\0"
    "FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0"
    "int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCompareFirmwareVersion\0"
    "bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0"
    "bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0"
    "bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0bool\0"
    "CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0"
    "bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0"
    "bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0"
    "bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0"
    "bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0"
    "QString\0PredefinedPaymentLines\0QString\0PrinterState\0int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_9(),
qt_meta_data_OPOS__IOPOSFiscalPrinter_1_9 }
};

void *IOPOSFiscalPrinter_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_9()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       97,    10, // methods
       121,    495, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 192, 207, 211, 9,
       212, 237, 249, 253, 9,
       254, 280, 301, 305, 9,
       306, 326, 334, 338, 9,
       339, 358, 364, 368, 9,
       369, 386, 387, 391, 9,
       392, 410, 418, 422, 9,
       423, 439, 440, 444, 9,
       445, 462, 468, 472, 9,
       473, 490, 498, 502, 9,
       503, 516, 517, 521, 9,
       522, 536, 537, 541, 9,
       542, 550, 551, 555, 9,
       556, 584, 606, 610, 9,
       611, 631, 632, 636, 9,
       637, 660, 672, 676, 9,
       677, 694, 695, 699, 9,
       700, 715, 716, 720, 9,
       721, 735, 736, 740, 9,
       741, 756, 757, 761, 9,
       762, 775, 776, 780, 9,
       781, 795, 796, 800, 9,
       801, 828, 850, 854, 9,
       855, 873, 878, 882, 9,
       883, 914, 933, 937, 9,
       938, 964, 986, 990, 9,
       991, 1005, 1016, 1020, 9,
       1021, 1045, 1046, 1050, 9,
       1051, 1084, 1097, 1101, 9,
       1102, 1136, 1165, 1169, 9,
       1170, 1195, 1208, 1212, 9,
       1213, 1256, 1268, 1272, 9,
       1273, 1296, 1297, 1301, 9,
       1302, 1326, 1333, 1337, 9,
       1338, 1396, 1450, 1454, 9,
       1455, 1505, 1547, 1551, 9,
       1552, 1632, 1712, 1716, 9,
       1717, 1771, 1808, 1812, 9,
       1813, 1838, 1846, 1850, 9,
       1851, 1886, 1905, 1909, 9,
       1910, 1949, 1978, 1982, 9,
       1983, 2030, 2071, 2075, 9,
       2076, 2114, 2141, 2145, 9,
       2146, 2188, 2215, 2219, 9,
       2220, 2248, 2255, 2259, 9,
       2260, 2302, 2324, 2328, 9,
       2329, 2379, 2413, 2417, 9,
       2418, 2441, 2447, 2451, 9,
       2452, 2495, 2521, 2525, 9,
       2526, 2548, 2560, 2564, 9,
       2565, 2623, 2685, 2689, 9,
       2690, 2723, 2750, 2754, 9,
       2755, 2770, 2771, 2775, 9,
       2776, 2791, 2792, 2796, 9,
       2797, 2813, 2814, 2818, 9,
       2819, 2834, 2835, 2839, 9,
       2840, 2865, 2882, 2886, 9,
       2887, 2916, 2934, 2938, 9,
       2939, 2956, 2963, 2964, 9,
       2965, 2995, 3021, 3022, 9,
       3023, 3049, 3105, 3106, 9,
       3107, 3129, 3138, 3139, 9,
       3140, 3154, 3155, 3159, 9,
       3160, 3180, 3185, 3186, 9,
       3187, 3216, 3233, 3234, 9,
       3235, 3265, 3283, 3284, 9,
       3285, 3304, 3314, 3315, 9,
       3316, 3341, 3358, 3359, 9,
       3360, 3382, 3392, 3393, 9,
       3394, 3414, 3425, 3426, 9,
       3427, 3448, 3461, 3462, 9,
       3463, 3480, 3492, 3496, 9,
       3497, 3514, 3519, 3523, 9,
       3524, 3541, 3550, 3551, 9,
       3552, 3575, 3589, 3590, 9,
       3591, 3617, 3634, 3635, 9,
       3636, 3665, 3686, 3687, 9,
       3688, 3714, 3732, 3733, 9,
       3734, 3756, 3769, 3770, 9,
       3771, 3793, 3806, 3807, 9,
       3808, 3840, 3868, 3872, 9,
       3873, 3893, 3905, 3906, 9,
       3907, 3933, 3949, 3953, 9,
       3954, 3975, 3984, 3985, 9,
       3986, 4006, 4018, 4019, 9,
       4020, 4040, 4048, 4049, 9,
       4050, 4072, 4086, 4087, 9,
       4088, 4114, 4117, 4121, 9,
       4122, 4144, 4158, 4159, 9,
       4160, 4193, 4221, 4225, 9,
       4226, 4240, 4241, 4245, 9,
       4246, 4271, 4286, 4290, 9,
       4291, 4317, 4334, 4338, 9,
       4339, 4363, 4378, 4382, 9,

 // properties: name, type, flags
       4383, 4398, 0x02005001, 		 // int ActualCurrency
       4402, 4419, 0x0a015003, 		 // QString AdditionalHeader
       4427, 4445, 0x0a015003, 		 // QString AdditionalTrailer
       4453, 4473, 0x02005001, 		 // int AmountDecimalPlaces
       4477, 4487, 0x01015003, 		 // bool AsyncMode
       4492, 4509, 0x02015003, 		 // int BinaryConversion
       4513, 4533, 0x01005001, 		 // bool CapAdditionalHeader
       4538, 4557, 0x01005001, 		 // bool CapAdditionalLines
       4562, 4583, 0x01005001, 		 // bool CapAdditionalTrailer
       4588, 4608, 0x01005001, 		 // bool CapAmountAdjustment
       4613, 4630, 0x01005001, 		 // bool CapAmountNotPaid
       4635, 4648, 0x01005001, 		 // bool CapChangeDue
       4653, 4667, 0x01005001, 		 // bool CapCheckTotal
       4672, 4687, 0x01005001, 		 // bool CapCoverSensor
       4692, 4707, 0x01005001, 		 // bool CapDoubleWidth
       4712, 4732, 0x01005001, 		 // bool CapDuplicateReceipt
       4737, 4763, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       4768, 4792, 0x01005001, 		 // bool CapFiscalReceiptStation
       4797, 4818, 0x01005001, 		 // bool CapFiscalReceiptType
       4823, 4838, 0x01005001, 		 // bool CapFixedOutput
       4843, 4858, 0x01005001, 		 // bool CapHasVatTable
       4863, 4884, 0x01005001, 		 // bool CapIndependentHeader
       4889, 4901, 0x01005001, 		 // bool CapItemList
       4906, 4924, 0x01005001, 		 // bool CapJrnEmptySensor
       4929, 4949, 0x01005001, 		 // bool CapJrnNearEndSensor
       4954, 4968, 0x01005001, 		 // bool CapJrnPresent
       4973, 4992, 0x01005001, 		 // bool CapMultiContractor
       4997, 5014, 0x01005001, 		 // bool CapNonFiscalMode
       5019, 5039, 0x01005001, 		 // bool CapOnlyVoidLastItem
       5044, 5068, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       5073, 5094, 0x01005001, 		 // bool CapPackageAdjustment
       5099, 5120, 0x01005001, 		 // bool CapPercentAdjustment
       5125, 5147, 0x01005001, 		 // bool CapPositiveAdjustment
       5152, 5167, 0x01005001, 		 // bool CapPostPreLine
       5172, 5191, 0x01005001, 		 // bool CapPowerLossReport
       5196, 5214, 0x02005001, 		 // int CapPowerReporting
       5218, 5244, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5249, 5267, 0x01005001, 		 // bool CapRecEmptySensor
       5272, 5292, 0x01005001, 		 // bool CapRecNearEndSensor
       5297, 5311, 0x01005001, 		 // bool CapRecPresent
       5316, 5334, 0x01005001, 		 // bool CapReceiptNotPaid
       5339, 5364, 0x01005001, 		 // bool CapRemainingFiscalMemory
       5369, 5385, 0x01005001, 		 // bool CapReservedWord
       5390, 5405, 0x01005001, 		 // bool CapSetCurrency
       5410, 5423, 0x01005001, 		 // bool CapSetHeader
       5428, 5440, 0x01005001, 		 // bool CapSetPOSID
       5445, 5465, 0x01005001, 		 // bool CapSetStoreFiscalID
       5470, 5484, 0x01005001, 		 // bool CapSetTrailer
       5489, 5504, 0x01005001, 		 // bool CapSetVatTable
       5509, 5527, 0x01005001, 		 // bool CapSlpEmptySensor
       5532, 5553, 0x01005001, 		 // bool CapSlpFiscalDocument
       5558, 5573, 0x01005001, 		 // bool CapSlpFullSlip
       5578, 5598, 0x01005001, 		 // bool CapSlpNearEndSensor
       5603, 5617, 0x01005001, 		 // bool CapSlpPresent
       5622, 5639, 0x01005001, 		 // bool CapSlpValidation
       5644, 5667, 0x01005001, 		 // bool CapStatisticsReporting
       5672, 5695, 0x01005001, 		 // bool CapSubAmountAdjustment
       5700, 5724, 0x01005001, 		 // bool CapSubPercentAdjustment
       5729, 5741, 0x01005001, 		 // bool CapSubtotal
       5746, 5763, 0x01005001, 		 // bool CapTotalizerType
       5768, 5784, 0x01005001, 		 // bool CapTrainingMode
       5789, 5809, 0x01005001, 		 // bool CapUpdateStatistics
       5814, 5833, 0x01005001, 		 // bool CapValidateJournal
       5838, 5849, 0x01005001, 		 // bool CapXReport
       5854, 5864, 0x0a015003, 		 // QString ChangeDue
       5872, 5888, 0x0a005001, 		 // QString CheckHealthText
       5896, 5907, 0x01015003, 		 // bool CheckTotal
       5912, 5920, 0x01005001, 		 // bool Claimed
       5925, 5938, 0x02015003, 		 // int ContractorId
       5942, 5967, 0x0a005001, 		 // QString ControlObjectDescription
       5975, 5996, 0x02005001, 		 // int ControlObjectVersion
       6000, 6012, 0x02005001, 		 // int CountryCode
       6016, 6026, 0x01005001, 		 // bool CoverOpen
       6031, 6040, 0x02015003, 		 // int DateType
       6044, 6054, 0x01005001, 		 // bool DayOpened
       6059, 6077, 0x02005001, 		 // int DescriptionLength
       6081, 6099, 0x0a005001, 		 // QString DeviceDescription
       6107, 6121, 0x01015003, 		 // bool DeviceEnabled
       6126, 6137, 0x0a005001, 		 // QString DeviceName
       6145, 6162, 0x01015003, 		 // bool DuplicateReceipt
       6167, 6178, 0x02005001, 		 // int ErrorLevel
       6182, 6193, 0x02005001, 		 // int ErrorOutID
       6197, 6208, 0x02005001, 		 // int ErrorState
       6212, 6225, 0x02005001, 		 // int ErrorStation
       6229, 6241, 0x0a005001, 		 // QString ErrorString
       6249, 6270, 0x02015003, 		 // int FiscalReceiptStation
       6274, 6292, 0x02015003, 		 // int FiscalReceiptType
       6296, 6309, 0x01015003, 		 // bool FlagWhenIdle
       6314, 6327, 0x01015003, 		 // bool FreezeEvents
       6332, 6341, 0x01005001, 		 // bool JrnEmpty
       6346, 6357, 0x01005001, 		 // bool JrnNearEnd
       6362, 6376, 0x02005001, 		 // int MessageLength
       6380, 6392, 0x02015003, 		 // int MessageType
       6396, 6411, 0x02005001, 		 // int NumHeaderLines
       6415, 6431, 0x02005001, 		 // int NumTrailerLines
       6435, 6447, 0x02005001, 		 // int NumVatRates
       6451, 6462, 0x02005001, 		 // int OpenResult
       6466, 6475, 0x02005001, 		 // int OutputID
       6479, 6488, 0x0a015003, 		 // QString PostLine
       6496, 6508, 0x02015003, 		 // int PowerNotify
       6512, 6523, 0x02005001, 		 // int PowerState
       6527, 6535, 0x0a015003, 		 // QString PreLine
       6543, 6566, 0x0a005001, 		 // QString PredefinedPaymentLines
       6574, 6587, 0x02005001, 		 // int PrinterState
       6591, 6613, 0x02005001, 		 // int QuantityDecimalPlaces
       6617, 6632, 0x02005001, 		 // int QuantityLength
       6636, 6645, 0x01005001, 		 // bool RecEmpty
       6650, 6661, 0x01005001, 		 // bool RecNearEnd
       6666, 6688, 0x02005001, 		 // int RemainingFiscalMemory
       6692, 6705, 0x0a005001, 		 // QString ReservedWord
       6713, 6724, 0x02005001, 		 // int ResultCode
       6728, 6747, 0x02005001, 		 // int ResultCodeExtended
       6751, 6776, 0x0a005001, 		 // QString ServiceObjectDescription
       6784, 6805, 0x02005001, 		 // int ServiceObjectVersion
       6809, 6823, 0x02015003, 		 // int SlipSelection
       6827, 6836, 0x01005001, 		 // bool SlpEmpty
       6841, 6852, 0x01005001, 		 // bool SlpNearEnd
       6857, 6863, 0x02005001, 		 // int State
       6867, 6881, 0x02015003, 		 // int TotalizerType
       6885, 6904, 0x01005001, 		 // bool TrainingModeActive
       6909, 6917, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0"
    "Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0"
    "DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0"
    "\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0"
    "AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0"
    "int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecMessage(QString)\0Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0"
    "AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0"
    "Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0"
    "int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0"
    "Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0"
    "AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0"
    "NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0"
    "\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0"
    "MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0"
    "ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0VerifyItem(QString,int)\0ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0"
    "bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0bool\0CapCheckTotal\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0"
    "CapEmptyReceiptIsVoidable\0bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0"
    "bool\0CapJrnPresent\0bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0"
    "CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0CapRecNearEndSensor\0bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0"
    "bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0bool\0CapSetVatTable\0bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0"
    "bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapStatisticsReporting\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0"
    "bool\0CapUpdateStatistics\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0int\0ErrorOutID\0int\0"
    "ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0MessageType\0int\0NumHeaderLines\0"
    "int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0QString\0PredefinedPaymentLines\0QString\0PrinterState\0int\0QuantityDecimalPlaces\0"
    "int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0SlipSelection\0"
    "int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_8(),
qt_meta_data_OPOS__IOPOSFiscalPrinter_1_8 }
};

void *IOPOSFiscalPrinter_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_8()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSFiscalPrinter_1_6[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       94,    10, // methods
       119,    480, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 192, 207, 211, 9,
       212, 237, 249, 253, 9,
       254, 280, 301, 305, 9,
       306, 326, 334, 338, 9,
       339, 358, 364, 368, 9,
       369, 386, 387, 391, 9,
       392, 410, 418, 422, 9,
       423, 439, 440, 444, 9,
       445, 462, 468, 472, 9,
       473, 490, 498, 502, 9,
       503, 516, 517, 521, 9,
       522, 536, 537, 541, 9,
       542, 550, 551, 555, 9,
       556, 584, 606, 610, 9,
       611, 631, 632, 636, 9,
       637, 660, 672, 676, 9,
       677, 694, 695, 699, 9,
       700, 715, 716, 720, 9,
       721, 735, 736, 740, 9,
       741, 756, 757, 761, 9,
       762, 775, 776, 780, 9,
       781, 795, 796, 800, 9,
       801, 828, 850, 854, 9,
       855, 873, 878, 882, 9,
       883, 914, 933, 937, 9,
       938, 964, 986, 990, 9,
       991, 1005, 1016, 1020, 9,
       1021, 1045, 1046, 1050, 9,
       1051, 1084, 1097, 1101, 9,
       1102, 1136, 1165, 1169, 9,
       1170, 1195, 1208, 1212, 9,
       1213, 1256, 1268, 1272, 9,
       1273, 1296, 1297, 1301, 9,
       1302, 1326, 1333, 1337, 9,
       1338, 1396, 1450, 1454, 9,
       1455, 1505, 1547, 1551, 9,
       1552, 1632, 1712, 1716, 9,
       1717, 1771, 1808, 1812, 9,
       1813, 1838, 1846, 1850, 9,
       1851, 1886, 1905, 1909, 9,
       1910, 1949, 1978, 1982, 9,
       1983, 2030, 2071, 2075, 9,
       2076, 2114, 2141, 2145, 9,
       2146, 2188, 2215, 2219, 9,
       2220, 2248, 2255, 2259, 9,
       2260, 2302, 2324, 2328, 9,
       2329, 2379, 2413, 2417, 9,
       2418, 2441, 2447, 2451, 9,
       2452, 2495, 2521, 2525, 9,
       2526, 2548, 2560, 2564, 9,
       2565, 2623, 2685, 2689, 9,
       2690, 2723, 2750, 2754, 9,
       2755, 2770, 2771, 2775, 9,
       2776, 2791, 2792, 2796, 9,
       2797, 2813, 2814, 2818, 9,
       2819, 2834, 2835, 2839, 9,
       2840, 2857, 2864, 2865, 9,
       2866, 2896, 2922, 2923, 9,
       2924, 2950, 3006, 3007, 9,
       3008, 3030, 3039, 3040, 9,
       3041, 3055, 3056, 3060, 9,
       3061, 3081, 3086, 3087, 9,
       3088, 3117, 3134, 3135, 9,
       3136, 3166, 3184, 3185, 9,
       3186, 3205, 3215, 3216, 9,
       3217, 3242, 3259, 3260, 9,
       3261, 3283, 3293, 3294, 9,
       3295, 3315, 3326, 3327, 9,
       3328, 3349, 3362, 3363, 9,
       3364, 3381, 3393, 3397, 9,
       3398, 3415, 3420, 3424, 9,
       3425, 3442, 3451, 3452, 9,
       3453, 3476, 3490, 3491, 9,
       3492, 3518, 3535, 3536, 9,
       3537, 3566, 3587, 3588, 9,
       3589, 3615, 3633, 3634, 9,
       3635, 3657, 3670, 3671, 9,
       3672, 3694, 3707, 3708, 9,
       3709, 3741, 3769, 3773, 9,
       3774, 3794, 3806, 3807, 9,
       3808, 3834, 3850, 3854, 9,
       3855, 3876, 3885, 3886, 9,
       3887, 3907, 3919, 3920, 9,
       3921, 3941, 3949, 3950, 9,
       3951, 3973, 3987, 3988, 9,
       3989, 4015, 4018, 4022, 9,
       4023, 4045, 4059, 4060, 9,
       4061, 4094, 4122, 4126, 9,
       4127, 4141, 4142, 4146, 9,
       4147, 4172, 4187, 4191, 9,
       4192, 4216, 4231, 4235, 9,

 // properties: name, type, flags
       4236, 4251, 0x02005001, 		 // int ActualCurrency
       4255, 4272, 0x0a015003, 		 // QString AdditionalHeader
       4280, 4298, 0x0a015003, 		 // QString AdditionalTrailer
       4306, 4326, 0x02005001, 		 // int AmountDecimalPlaces
       4330, 4340, 0x01015003, 		 // bool AsyncMode
       4345, 4362, 0x02015003, 		 // int BinaryConversion
       4366, 4386, 0x01005001, 		 // bool CapAdditionalHeader
       4391, 4410, 0x01005001, 		 // bool CapAdditionalLines
       4415, 4436, 0x01005001, 		 // bool CapAdditionalTrailer
       4441, 4461, 0x01005001, 		 // bool CapAmountAdjustment
       4466, 4483, 0x01005001, 		 // bool CapAmountNotPaid
       4488, 4501, 0x01005001, 		 // bool CapChangeDue
       4506, 4520, 0x01005001, 		 // bool CapCheckTotal
       4525, 4540, 0x01005001, 		 // bool CapCoverSensor
       4545, 4560, 0x01005001, 		 // bool CapDoubleWidth
       4565, 4585, 0x01005001, 		 // bool CapDuplicateReceipt
       4590, 4616, 0x01005001, 		 // bool CapEmptyReceiptIsVoidable
       4621, 4645, 0x01005001, 		 // bool CapFiscalReceiptStation
       4650, 4671, 0x01005001, 		 // bool CapFiscalReceiptType
       4676, 4691, 0x01005001, 		 // bool CapFixedOutput
       4696, 4711, 0x01005001, 		 // bool CapHasVatTable
       4716, 4737, 0x01005001, 		 // bool CapIndependentHeader
       4742, 4754, 0x01005001, 		 // bool CapItemList
       4759, 4777, 0x01005001, 		 // bool CapJrnEmptySensor
       4782, 4802, 0x01005001, 		 // bool CapJrnNearEndSensor
       4807, 4821, 0x01005001, 		 // bool CapJrnPresent
       4826, 4845, 0x01005001, 		 // bool CapMultiContractor
       4850, 4867, 0x01005001, 		 // bool CapNonFiscalMode
       4872, 4892, 0x01005001, 		 // bool CapOnlyVoidLastItem
       4897, 4921, 0x01005001, 		 // bool CapOrderAdjustmentFirst
       4926, 4947, 0x01005001, 		 // bool CapPackageAdjustment
       4952, 4973, 0x01005001, 		 // bool CapPercentAdjustment
       4978, 5000, 0x01005001, 		 // bool CapPositiveAdjustment
       5005, 5020, 0x01005001, 		 // bool CapPostPreLine
       5025, 5044, 0x01005001, 		 // bool CapPowerLossReport
       5049, 5067, 0x02005001, 		 // int CapPowerReporting
       5071, 5097, 0x01005001, 		 // bool CapPredefinedPaymentLines
       5102, 5120, 0x01005001, 		 // bool CapRecEmptySensor
       5125, 5145, 0x01005001, 		 // bool CapRecNearEndSensor
       5150, 5164, 0x01005001, 		 // bool CapRecPresent
       5169, 5187, 0x01005001, 		 // bool CapReceiptNotPaid
       5192, 5217, 0x01005001, 		 // bool CapRemainingFiscalMemory
       5222, 5238, 0x01005001, 		 // bool CapReservedWord
       5243, 5258, 0x01005001, 		 // bool CapSetCurrency
       5263, 5276, 0x01005001, 		 // bool CapSetHeader
       5281, 5293, 0x01005001, 		 // bool CapSetPOSID
       5298, 5318, 0x01005001, 		 // bool CapSetStoreFiscalID
       5323, 5337, 0x01005001, 		 // bool CapSetTrailer
       5342, 5357, 0x01005001, 		 // bool CapSetVatTable
       5362, 5380, 0x01005001, 		 // bool CapSlpEmptySensor
       5385, 5406, 0x01005001, 		 // bool CapSlpFiscalDocument
       5411, 5426, 0x01005001, 		 // bool CapSlpFullSlip
       5431, 5451, 0x01005001, 		 // bool CapSlpNearEndSensor
       5456, 5470, 0x01005001, 		 // bool CapSlpPresent
       5475, 5492, 0x01005001, 		 // bool CapSlpValidation
       5497, 5520, 0x01005001, 		 // bool CapSubAmountAdjustment
       5525, 5549, 0x01005001, 		 // bool CapSubPercentAdjustment
       5554, 5566, 0x01005001, 		 // bool CapSubtotal
       5571, 5588, 0x01005001, 		 // bool CapTotalizerType
       5593, 5609, 0x01005001, 		 // bool CapTrainingMode
       5614, 5633, 0x01005001, 		 // bool CapValidateJournal
       5638, 5649, 0x01005001, 		 // bool CapXReport
       5654, 5664, 0x0a015003, 		 // QString ChangeDue
       5672, 5688, 0x0a005001, 		 // QString CheckHealthText
       5696, 5707, 0x01015003, 		 // bool CheckTotal
       5712, 5720, 0x01005001, 		 // bool Claimed
       5725, 5738, 0x02015003, 		 // int ContractorId
       5742, 5767, 0x0a005001, 		 // QString ControlObjectDescription
       5775, 5796, 0x02005001, 		 // int ControlObjectVersion
       5800, 5812, 0x02005001, 		 // int CountryCode
       5816, 5826, 0x01005001, 		 // bool CoverOpen
       5831, 5840, 0x02015003, 		 // int DateType
       5844, 5854, 0x01005001, 		 // bool DayOpened
       5859, 5877, 0x02005001, 		 // int DescriptionLength
       5881, 5899, 0x0a005001, 		 // QString DeviceDescription
       5907, 5921, 0x01015003, 		 // bool DeviceEnabled
       5926, 5937, 0x0a005001, 		 // QString DeviceName
       5945, 5962, 0x01015003, 		 // bool DuplicateReceipt
       5967, 5978, 0x02005001, 		 // int ErrorLevel
       5982, 5993, 0x02005001, 		 // int ErrorOutID
       5997, 6008, 0x02005001, 		 // int ErrorState
       6012, 6025, 0x02005001, 		 // int ErrorStation
       6029, 6041, 0x0a005001, 		 // QString ErrorString
       6049, 6070, 0x02015003, 		 // int FiscalReceiptStation
       6074, 6092, 0x02015003, 		 // int FiscalReceiptType
       6096, 6109, 0x01015003, 		 // bool FlagWhenIdle
       6114, 6127, 0x01015003, 		 // bool FreezeEvents
       6132, 6141, 0x01005001, 		 // bool JrnEmpty
       6146, 6157, 0x01005001, 		 // bool JrnNearEnd
       6162, 6176, 0x02005001, 		 // int MessageLength
       6180, 6192, 0x02015003, 		 // int MessageType
       6196, 6211, 0x02005001, 		 // int NumHeaderLines
       6215, 6231, 0x02005001, 		 // int NumTrailerLines
       6235, 6247, 0x02005001, 		 // int NumVatRates
       6251, 6262, 0x02005001, 		 // int OpenResult
       6266, 6275, 0x02005001, 		 // int OutputID
       6279, 6288, 0x0a015003, 		 // QString PostLine
       6296, 6308, 0x02015003, 		 // int PowerNotify
       6312, 6323, 0x02005001, 		 // int PowerState
       6327, 6335, 0x0a015003, 		 // QString PreLine
       6343, 6366, 0x0a005001, 		 // QString PredefinedPaymentLines
       6374, 6387, 0x02005001, 		 // int PrinterState
       6391, 6413, 0x02005001, 		 // int QuantityDecimalPlaces
       6417, 6432, 0x02005001, 		 // int QuantityLength
       6436, 6445, 0x01005001, 		 // bool RecEmpty
       6450, 6461, 0x01005001, 		 // bool RecNearEnd
       6466, 6488, 0x02005001, 		 // int RemainingFiscalMemory
       6492, 6505, 0x0a005001, 		 // QString ReservedWord
       6513, 6524, 0x02005001, 		 // int ResultCode
       6528, 6547, 0x02005001, 		 // int ResultCodeExtended
       6551, 6576, 0x0a005001, 		 // QString ServiceObjectDescription
       6584, 6605, 0x02005001, 		 // int ServiceObjectVersion
       6609, 6623, 0x02015003, 		 // int SlipSelection
       6627, 6636, 0x01005001, 		 // bool SlpEmpty
       6641, 6652, 0x01005001, 		 // bool SlpNearEnd
       6657, 6663, 0x02005001, 		 // int State
       6667, 6681, 0x02015003, 		 // int TotalizerType
       6685, 6704, 0x01005001, 		 // bool TrainingModeActive
       6709, 6717, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_6() {
    static const char stringdata0[] = {
    "OPOS::IOPOSFiscalPrinter_1_6\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginFiscalDocument(int)\0DocumentAmount\0int\0\0BeginFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0BeginFixedOutput(int,int)\0Station,DocumentType\0int\0\0BeginInsertion(int)\0Timeout\0int\0\0BeginItemList(int)\0VatID\0int\0\0BeginNonFiscal()\0\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0BeginTraining()\0"
    "\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearError()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndFiscalDocument()\0\0int\0\0EndFiscalReceipt(bool)\0"
    "PrintHeader\0int\0\0EndFixedOutput()\0\0int\0\0EndInsertion()\0\0int\0\0EndItemList()\0\0int\0\0EndNonFiscal()\0\0int\0\0EndRemoval()\0\0int\0\0EndTraining()\0\0int\0\0GetData(int,int&,QString&)\0DataItem,OptArgs,Data\0int\0\0GetDate(QString&)\0"
    "Date\0int\0\0GetTotalizer(int,int,QString&)\0VatID,OptArgs,Data\0int\0\0GetVatEntry(int,int,int&)\0VatID,OptArgs,VatRate\0int\0\0Open(QString)\0DeviceName\0int\0\0PrintDuplicateReceipt()\0\0int\0\0PrintFiscalDocumentLine(QString)\0"
    "DocumentLine\0int\0\0PrintFixedOutput(int,int,QString)\0DocumentType,LineNumber,Data\0int\0\0PrintNormal(int,QString)\0Station,Data\0int\0\0PrintPeriodicTotalsReport(QString,QString)\0Date1,Date2\0int\0\0PrintPowerLossReport()\0"
    "\0int\0\0PrintRecCash(qlonglong)\0Amount\0int\0\0PrintRecItem(QString,qlonglong,int,int,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName\0int\0\0PrintRecItemAdjustment(int,QString,qlonglong,int)\0"
    "AdjustmentType,Description,Amount,VatInfo\0int\0\0PrintRecItemFuel(QString,qlonglong,int,int,qlonglong,QString,qlonglong,QString)\0Description,Price,Quantity,VatInfo,UnitPrice,UnitName,SpecialTax,SpecialTaxName\0"
    "int\0\0PrintRecItemFuelVoid(QString,qlonglong,int,qlonglong)\0Description,Price,VatInfo,SpecialTax\0int\0\0PrintRecMessage(QString)\0Message\0int\0\0PrintRecNotPaid(QString,qlonglong)\0Description,Amount\0int\0\0PrintRecPackageAdjustVoid(int,QString)\0"
    "AdjustmentType,VatAdjustment\0int\0\0PrintRecPackageAdjustment(int,QString,QString)\0AdjustmentType,Description,VatAdjustment\0int\0\0PrintRecRefund(QString,qlonglong,int)\0Description,Amount,VatInfo\0int\0\0PrintRecRefundVoid(QString,qlonglong,int)\0"
    "Description,Amount,VatInfo\0int\0\0PrintRecSubtotal(qlonglong)\0Amount\0int\0\0PrintRecSubtotalAdjustVoid(int,qlonglong)\0AdjustmentType,Amount\0int\0\0PrintRecSubtotalAdjustment(int,QString,qlonglong)\0AdjustmentType,Description,Amount\0"
    "int\0\0PrintRecTaxID(QString)\0TaxID\0int\0\0PrintRecTotal(qlonglong,qlonglong,QString)\0Total,Payment,Description\0int\0\0PrintRecVoid(QString)\0Description\0int\0\0PrintRecVoidItem(QString,qlonglong,int,int,qlonglong,int)\0"
    "Description,Amount,Quantity,AdjustmentType,Adjustment,VatInfo\0int\0\0PrintReport(int,QString,QString)\0ReportType,StartNum,EndNum\0int\0\0PrintXReport()\0\0int\0\0PrintZReport()\0\0int\0\0ReleaseDevice()\0\0int\0\0ResetPrinter()\0"
    "\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAdditionalHeader(QString)\0AdditionalHeader\0\0\0SetAdditionalTrailer(QString)\0AdditionalTrailer\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetChangeDue(QString)\0ChangeDue\0\0\0SetCheckTotal(bool)\0CheckTotal\0\0\0SetContractorId(int)\0ContractorId\0\0\0SetCurrency(int)\0NewCurrency\0int\0\0SetDate(QString)\0Date\0int\0\0SetDateType(int)\0DateType\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDuplicateReceipt(bool)\0DuplicateReceipt\0\0\0SetFiscalReceiptStation(int)\0FiscalReceiptStation\0\0\0SetFiscalReceiptType(int)\0FiscalReceiptType\0\0\0SetFlagWhenIdle(bool)\0"
    "FlagWhenIdle\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetHeaderLine(int,QString,bool)\0LineNumber,Text,DoubleWidth\0int\0\0SetMessageType(int)\0MessageType\0\0\0SetPOSID(QString,QString)\0POSID,CashierID\0int\0\0SetPostLine(QString)\0"
    "PostLine\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPreLine(QString)\0PreLine\0\0\0SetSlipSelection(int)\0SlipSelection\0\0\0SetStoreFiscalID(QString)\0ID\0int\0\0SetTotalizerType(int)\0TotalizerType\0\0\0SetTrailerLine(int,QString,bool)\0"
    "LineNumber,Text,DoubleWidth\0int\0\0SetVatTable()\0\0int\0\0SetVatValue(int,QString)\0VatID,VatValue\0int\0\0VerifyItem(QString,int)\0ItemName,VatID\0int\0\0"
    "ActualCurrency\0int\0AdditionalHeader\0QString\0AdditionalTrailer\0"
    "QString\0AmountDecimalPlaces\0int\0AsyncMode\0bool\0BinaryConversion\0int\0CapAdditionalHeader\0bool\0CapAdditionalLines\0bool\0CapAdditionalTrailer\0bool\0CapAmountAdjustment\0bool\0CapAmountNotPaid\0bool\0CapChangeDue\0"
    "bool\0CapCheckTotal\0bool\0CapCoverSensor\0bool\0CapDoubleWidth\0bool\0CapDuplicateReceipt\0bool\0CapEmptyReceiptIsVoidable\0bool\0CapFiscalReceiptStation\0bool\0CapFiscalReceiptType\0bool\0CapFixedOutput\0bool\0CapHasVatTable\0"
    "bool\0CapIndependentHeader\0bool\0CapItemList\0bool\0CapJrnEmptySensor\0bool\0CapJrnNearEndSensor\0bool\0CapJrnPresent\0bool\0CapMultiContractor\0bool\0CapNonFiscalMode\0bool\0CapOnlyVoidLastItem\0bool\0CapOrderAdjustmentFirst\0"
    "bool\0CapPackageAdjustment\0bool\0CapPercentAdjustment\0bool\0CapPositiveAdjustment\0bool\0CapPostPreLine\0bool\0CapPowerLossReport\0bool\0CapPowerReporting\0int\0CapPredefinedPaymentLines\0bool\0CapRecEmptySensor\0bool\0"
    "CapRecNearEndSensor\0bool\0CapRecPresent\0bool\0CapReceiptNotPaid\0bool\0CapRemainingFiscalMemory\0bool\0CapReservedWord\0bool\0CapSetCurrency\0bool\0CapSetHeader\0bool\0CapSetPOSID\0bool\0CapSetStoreFiscalID\0bool\0CapSetTrailer\0"
    "bool\0CapSetVatTable\0bool\0CapSlpEmptySensor\0bool\0CapSlpFiscalDocument\0bool\0CapSlpFullSlip\0bool\0CapSlpNearEndSensor\0bool\0CapSlpPresent\0bool\0CapSlpValidation\0bool\0CapSubAmountAdjustment\0bool\0CapSubPercentAdjustment\0"
    "bool\0CapSubtotal\0bool\0CapTotalizerType\0bool\0CapTrainingMode\0bool\0CapValidateJournal\0bool\0CapXReport\0bool\0ChangeDue\0QString\0CheckHealthText\0QString\0CheckTotal\0bool\0Claimed\0bool\0ContractorId\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CountryCode\0int\0CoverOpen\0bool\0DateType\0int\0DayOpened\0bool\0DescriptionLength\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DuplicateReceipt\0bool\0ErrorLevel\0"
    "int\0ErrorOutID\0int\0ErrorState\0int\0ErrorStation\0int\0ErrorString\0QString\0FiscalReceiptStation\0int\0FiscalReceiptType\0int\0FlagWhenIdle\0bool\0FreezeEvents\0bool\0JrnEmpty\0bool\0JrnNearEnd\0bool\0MessageLength\0int\0"
    "MessageType\0int\0NumHeaderLines\0int\0NumTrailerLines\0int\0NumVatRates\0int\0OpenResult\0int\0OutputID\0int\0PostLine\0QString\0PowerNotify\0int\0PowerState\0int\0PreLine\0QString\0PredefinedPaymentLines\0QString\0PrinterState\0"
    "int\0QuantityDecimalPlaces\0int\0QuantityLength\0int\0RecEmpty\0bool\0RecNearEnd\0bool\0RemainingFiscalMemory\0int\0ReservedWord\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0SlipSelection\0int\0SlpEmpty\0bool\0SlpNearEnd\0bool\0State\0int\0TotalizerType\0int\0TrainingModeActive\0bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSFiscalPrinter_1_6::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_6(),
qt_meta_data_OPOS__IOPOSFiscalPrinter_1_6 }
};

void *IOPOSFiscalPrinter_1_6::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSFiscalPrinter_1_6()))
        return static_cast<void*>(const_cast<IOPOSFiscalPrinter_1_6*>(this));
    return QAxObject::qt_metacast(_clname);
}

