/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSKeylock.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_KEYLOCK_H
#define QAX_DUMPCPP_KEYLOCK_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSKeylockEvents

class OPOS_EXPORT IOPOSKeylock : public QAxObject
{
public:
    IOPOSKeylock(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapKeylockType

    property CapKeylockType

    */
    inline int CapKeylockType() const; //Returns the value of CapKeylockType

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property ElectronicKeyValue

    property ElectronicKeyValue

    */
    inline QString ElectronicKeyValue() const; //Returns the value of ElectronicKeyValue

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSKeylock_1_11 : public QAxObject
{
public:
    IOPOSKeylock_1_11(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapKeylockType

    property CapKeylockType

    */
    inline int CapKeylockType() const; //Returns the value of CapKeylockType

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property ElectronicKeyValue

    property ElectronicKeyValue

    */
    inline QString ElectronicKeyValue() const; //Returns the value of ElectronicKeyValue

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSKeylock_1_9 : public QAxObject
{
public:
    IOPOSKeylock_1_9(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSKeylock_1_8 : public QAxObject
{
public:
    IOPOSKeylock_1_8(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSKeylock_1_5 : public QAxObject
{
public:
    IOPOSKeylock_1_5(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSKeylock : public QAxObject
{
public:
    OPOSKeylock(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90092-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSKeylock(IOPOSKeylock *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSKeylock(IOPOSKeylock_1_11 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSKeylock(IOPOSKeylock_1_9 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSKeylock(IOPOSKeylock_1_8 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSKeylock(IOPOSKeylock_1_5 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapKeylockType

    property CapKeylockType

    */
    inline int CapKeylockType() const; //Returns the value of CapKeylockType

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property ElectronicKeyValue

    property ElectronicKeyValue

    */
    inline QString ElectronicKeyValue() const; //Returns the value of ElectronicKeyValue

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property KeyPosition

    property KeyPosition

    */
    inline int KeyPosition() const; //Returns the value of KeyPosition

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PositionCount

    property PositionCount

    */
    inline int PositionCount() const; //Returns the value of PositionCount

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method WaitForKeylockChange

    method WaitForKeylockChange

    */
    inline int WaitForKeylockChange(int KeyPosition, int Timeout);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline int OPOSKeylock::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSKeylock::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSKeylock::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSKeylock::CapKeylockType() const
{
    QVariant qax_result = property("CapKeylockType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSKeylock::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSKeylock::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSKeylock::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSKeylock::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSKeylock::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSKeylock::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSKeylock::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSKeylock::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSKeylock::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSKeylock::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSKeylock::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSKeylock::ElectronicKeyValue() const
{
    QVariant qax_result = property("ElectronicKeyValue");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSKeylock::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSKeylock::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int OPOSKeylock::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSKeylock::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSKeylock::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSKeylock::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSKeylock::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSKeylock::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int OPOSKeylock::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int OPOSKeylock::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSKeylock::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSKeylock::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSKeylock::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSKeylock::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSKeylock::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSKeylock::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void OPOSKeylock::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void OPOSKeylock::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void OPOSKeylock::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void OPOSKeylock::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int OPOSKeylock::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void OPOSKeylock::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline int OPOSKeylock::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int OPOSKeylock::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int OPOSKeylock::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}


inline int IOPOSKeylock::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSKeylock::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSKeylock::CapKeylockType() const
{
    QVariant qax_result = property("CapKeylockType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSKeylock::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSKeylock::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSKeylock::ElectronicKeyValue() const
{
    QVariant qax_result = property("ElectronicKeyValue");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSKeylock::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSKeylock::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSKeylock::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSKeylock::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSKeylock::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSKeylock::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSKeylock::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSKeylock::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSKeylock::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSKeylock::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void IOPOSKeylock::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSKeylock::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSKeylock::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSKeylock::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int IOPOSKeylock::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSKeylock::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSKeylock::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IOPOSKeylock::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IOPOSKeylock::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}


inline int IOPOSKeylock_1_11::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_11::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSKeylock_1_11::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::CapKeylockType() const
{
    QVariant qax_result = property("CapKeylockType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_11::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_11::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_11::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_11::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSKeylock_1_11::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSKeylock_1_11::ElectronicKeyValue() const
{
    QVariant qax_result = property("ElectronicKeyValue");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_11::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_11::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSKeylock_1_11::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_11::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSKeylock_1_11::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_11::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_11::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_11::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSKeylock_1_11::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSKeylock_1_11::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSKeylock_1_11::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int IOPOSKeylock_1_11::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_11::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSKeylock_1_11::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_11::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}


inline int IOPOSKeylock_1_9::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_9::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSKeylock_1_9::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_9::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_9::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_9::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_9::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSKeylock_1_9::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_9::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_9::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSKeylock_1_9::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_9::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSKeylock_1_9::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_9::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_9::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_9::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSKeylock_1_9::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSKeylock_1_9::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSKeylock_1_9::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int IOPOSKeylock_1_9::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_9::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSKeylock_1_9::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_9::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}


inline int IOPOSKeylock_1_8::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_8::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSKeylock_1_8::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSKeylock_1_8::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSKeylock_1_8::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_8::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_8::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_8::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_8::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_8::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_8::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSKeylock_1_8::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_8::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_8::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSKeylock_1_8::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_8::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSKeylock_1_8::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_8::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_8::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_8::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IOPOSKeylock_1_8::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IOPOSKeylock_1_8::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IOPOSKeylock_1_8::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline int IOPOSKeylock_1_8::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_8::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline int IOPOSKeylock_1_8::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_8::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}


inline int IOPOSKeylock_1_5::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_5::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSKeylock_1_5::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_5::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_5::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSKeylock_1_5::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_5::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_5::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_5::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSKeylock_1_5::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSKeylock_1_5::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSKeylock_1_5::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSKeylock_1_5::KeyPosition() const
{
    QVariant qax_result = property("KeyPosition");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::PositionCount() const
{
    QVariant qax_result = property("PositionCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSKeylock_1_5::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSKeylock_1_5::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSKeylock_1_5::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSKeylock_1_5::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_5::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_5::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_5::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_5::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSKeylock_1_5::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_5::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void IOPOSKeylock_1_5::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void IOPOSKeylock_1_5::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IOPOSKeylock_1_5::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline int IOPOSKeylock_1_5::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void IOPOSKeylock_1_5::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline int IOPOSKeylock_1_5::WaitForKeylockChange(int KeyPosition, int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyPosition, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSKeylock *t)
{ Q_ASSERT(!t); return new OPOS::OPOSKeylock; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSKeylock *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSKeylock; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSKeylock_1_11 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSKeylock_1_11; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSKeylock_1_9 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSKeylock_1_9; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSKeylock_1_8 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSKeylock_1_8; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSKeylock_1_5 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSKeylock_1_5; }

#endif

