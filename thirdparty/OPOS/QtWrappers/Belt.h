/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSBelt.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_BELT_H
#define QAX_DUMPCPP_BELT_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSBeltEvents

class OPOS_EXPORT IOPOSBelt : public QAxObject
{
public:
    IOPOSBelt(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoStopBackward

    property AutoStopBackward

    */
    inline bool AutoStopBackward() const; //Returns the value of AutoStopBackward
    inline void SetAutoStopBackward(bool value); //Sets the value of the AutoStopBackward property

    /*
    Property AutoStopBackwardDelayTime

    property AutoStopBackwardDelayTime

    */
    inline int AutoStopBackwardDelayTime() const; //Returns the value of AutoStopBackwardDelayTime
    inline void SetAutoStopBackwardDelayTime(int value); //Sets the value of the AutoStopBackwardDelayTime property

    /*
    Property AutoStopBackwardItemCount

    property AutoStopBackwardItemCount

    */
    inline int AutoStopBackwardItemCount() const; //Returns the value of AutoStopBackwardItemCount

    /*
    Property AutoStopForward

    property AutoStopForward

    */
    inline bool AutoStopForward() const; //Returns the value of AutoStopForward
    inline void SetAutoStopForward(bool value); //Sets the value of the AutoStopForward property

    /*
    Property AutoStopForwardDelayTime

    property AutoStopForwardDelayTime

    */
    inline int AutoStopForwardDelayTime() const; //Returns the value of AutoStopForwardDelayTime
    inline void SetAutoStopForwardDelayTime(int value); //Sets the value of the AutoStopForwardDelayTime property

    /*
    Property AutoStopForwardItemCount

    property AutoStopForwardItemCount

    */
    inline int AutoStopForwardItemCount() const; //Returns the value of AutoStopForwardItemCount

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoStopBackward

    property CapAutoStopBackward

    */
    inline bool CapAutoStopBackward() const; //Returns the value of CapAutoStopBackward

    /*
    Property CapAutoStopBackwardItemCount

    property CapAutoStopBackwardItemCount

    */
    inline bool CapAutoStopBackwardItemCount() const; //Returns the value of CapAutoStopBackwardItemCount

    /*
    Property CapAutoStopForward

    property CapAutoStopForward

    */
    inline bool CapAutoStopForward() const; //Returns the value of CapAutoStopForward

    /*
    Property CapAutoStopForwardItemCount

    property CapAutoStopForwardItemCount

    */
    inline bool CapAutoStopForwardItemCount() const; //Returns the value of CapAutoStopForwardItemCount

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapLightBarrierBackward

    property CapLightBarrierBackward

    */
    inline bool CapLightBarrierBackward() const; //Returns the value of CapLightBarrierBackward

    /*
    Property CapLightBarrierForward

    property CapLightBarrierForward

    */
    inline bool CapLightBarrierForward() const; //Returns the value of CapLightBarrierForward

    /*
    Property CapMoveBackward

    property CapMoveBackward

    */
    inline bool CapMoveBackward() const; //Returns the value of CapMoveBackward

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapSecurityFlapBackward

    property CapSecurityFlapBackward

    */
    inline bool CapSecurityFlapBackward() const; //Returns the value of CapSecurityFlapBackward

    /*
    Property CapSecurityFlapForward

    property CapSecurityFlapForward

    */
    inline bool CapSecurityFlapForward() const; //Returns the value of CapSecurityFlapForward

    /*
    Property CapSpeedStepsBackward

    property CapSpeedStepsBackward

    */
    inline int CapSpeedStepsBackward() const; //Returns the value of CapSpeedStepsBackward

    /*
    Property CapSpeedStepsForward

    property CapSpeedStepsForward

    */
    inline int CapSpeedStepsForward() const; //Returns the value of CapSpeedStepsForward

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property LightBarrierBackwardInterrupted

    property LightBarrierBackwardInterrupted

    */
    inline bool LightBarrierBackwardInterrupted() const; //Returns the value of LightBarrierBackwardInterrupted

    /*
    Property LightBarrierForwardInterrupted

    property LightBarrierForwardInterrupted

    */
    inline bool LightBarrierForwardInterrupted() const; //Returns the value of LightBarrierForwardInterrupted

    /*
    Property MotionStatus

    property MotionStatus

    */
    inline int MotionStatus() const; //Returns the value of MotionStatus

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property SecurityFlapBackwardOpened

    property SecurityFlapBackwardOpened

    */
    inline bool SecurityFlapBackwardOpened() const; //Returns the value of SecurityFlapBackwardOpened

    /*
    Property SecurityFlapForwardOpened

    property SecurityFlapForwardOpened

    */
    inline bool SecurityFlapForwardOpened() const; //Returns the value of SecurityFlapForwardOpened

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method AdjustItemCount

    method AdjustItemCount

    */
    inline int AdjustItemCount(int Direction, int Count);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method MoveBackward

    method MoveBackward

    */
    inline int MoveBackward(int Speed);

    /*
    Method MoveForward

    method MoveForward

    */
    inline int MoveForward(int Speed);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetBelt

    method ResetBelt

    */
    inline int ResetBelt();

    /*
    Method ResetItemCount

    method ResetItemCount

    */
    inline int ResetItemCount(int Direction);

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StopBelt

    method StopBelt

    */
    inline int StopBelt();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSBelt_1_12 : public QAxObject
{
public:
    IOPOSBelt_1_12(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoStopBackward

    property AutoStopBackward

    */
    inline bool AutoStopBackward() const; //Returns the value of AutoStopBackward
    inline void SetAutoStopBackward(bool value); //Sets the value of the AutoStopBackward property

    /*
    Property AutoStopBackwardDelayTime

    property AutoStopBackwardDelayTime

    */
    inline int AutoStopBackwardDelayTime() const; //Returns the value of AutoStopBackwardDelayTime
    inline void SetAutoStopBackwardDelayTime(int value); //Sets the value of the AutoStopBackwardDelayTime property

    /*
    Property AutoStopBackwardItemCount

    property AutoStopBackwardItemCount

    */
    inline int AutoStopBackwardItemCount() const; //Returns the value of AutoStopBackwardItemCount

    /*
    Property AutoStopForward

    property AutoStopForward

    */
    inline bool AutoStopForward() const; //Returns the value of AutoStopForward
    inline void SetAutoStopForward(bool value); //Sets the value of the AutoStopForward property

    /*
    Property AutoStopForwardDelayTime

    property AutoStopForwardDelayTime

    */
    inline int AutoStopForwardDelayTime() const; //Returns the value of AutoStopForwardDelayTime
    inline void SetAutoStopForwardDelayTime(int value); //Sets the value of the AutoStopForwardDelayTime property

    /*
    Property AutoStopForwardItemCount

    property AutoStopForwardItemCount

    */
    inline int AutoStopForwardItemCount() const; //Returns the value of AutoStopForwardItemCount

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoStopBackward

    property CapAutoStopBackward

    */
    inline bool CapAutoStopBackward() const; //Returns the value of CapAutoStopBackward

    /*
    Property CapAutoStopBackwardItemCount

    property CapAutoStopBackwardItemCount

    */
    inline bool CapAutoStopBackwardItemCount() const; //Returns the value of CapAutoStopBackwardItemCount

    /*
    Property CapAutoStopForward

    property CapAutoStopForward

    */
    inline bool CapAutoStopForward() const; //Returns the value of CapAutoStopForward

    /*
    Property CapAutoStopForwardItemCount

    property CapAutoStopForwardItemCount

    */
    inline bool CapAutoStopForwardItemCount() const; //Returns the value of CapAutoStopForwardItemCount

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapLightBarrierBackward

    property CapLightBarrierBackward

    */
    inline bool CapLightBarrierBackward() const; //Returns the value of CapLightBarrierBackward

    /*
    Property CapLightBarrierForward

    property CapLightBarrierForward

    */
    inline bool CapLightBarrierForward() const; //Returns the value of CapLightBarrierForward

    /*
    Property CapMoveBackward

    property CapMoveBackward

    */
    inline bool CapMoveBackward() const; //Returns the value of CapMoveBackward

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapSecurityFlapBackward

    property CapSecurityFlapBackward

    */
    inline bool CapSecurityFlapBackward() const; //Returns the value of CapSecurityFlapBackward

    /*
    Property CapSecurityFlapForward

    property CapSecurityFlapForward

    */
    inline bool CapSecurityFlapForward() const; //Returns the value of CapSecurityFlapForward

    /*
    Property CapSpeedStepsBackward

    property CapSpeedStepsBackward

    */
    inline int CapSpeedStepsBackward() const; //Returns the value of CapSpeedStepsBackward

    /*
    Property CapSpeedStepsForward

    property CapSpeedStepsForward

    */
    inline int CapSpeedStepsForward() const; //Returns the value of CapSpeedStepsForward

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property LightBarrierBackwardInterrupted

    property LightBarrierBackwardInterrupted

    */
    inline bool LightBarrierBackwardInterrupted() const; //Returns the value of LightBarrierBackwardInterrupted

    /*
    Property LightBarrierForwardInterrupted

    property LightBarrierForwardInterrupted

    */
    inline bool LightBarrierForwardInterrupted() const; //Returns the value of LightBarrierForwardInterrupted

    /*
    Property MotionStatus

    property MotionStatus

    */
    inline int MotionStatus() const; //Returns the value of MotionStatus

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property SecurityFlapBackwardOpened

    property SecurityFlapBackwardOpened

    */
    inline bool SecurityFlapBackwardOpened() const; //Returns the value of SecurityFlapBackwardOpened

    /*
    Property SecurityFlapForwardOpened

    property SecurityFlapForwardOpened

    */
    inline bool SecurityFlapForwardOpened() const; //Returns the value of SecurityFlapForwardOpened

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method AdjustItemCount

    method AdjustItemCount

    */
    inline int AdjustItemCount(int Direction, int Count);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method MoveBackward

    method MoveBackward

    */
    inline int MoveBackward(int Speed);

    /*
    Method MoveForward

    method MoveForward

    */
    inline int MoveForward(int Speed);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetBelt

    method ResetBelt

    */
    inline int ResetBelt();

    /*
    Method ResetItemCount

    method ResetItemCount

    */
    inline int ResetItemCount(int Direction);

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StopBelt

    method StopBelt

    */
    inline int StopBelt();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSBelt : public QAxObject
{
public:
    OPOSBelt(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90322-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSBelt(IOPOSBelt *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSBelt(IOPOSBelt_1_12 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoStopBackward

    property AutoStopBackward

    */
    inline bool AutoStopBackward() const; //Returns the value of AutoStopBackward
    inline void SetAutoStopBackward(bool value); //Sets the value of the AutoStopBackward property

    /*
    Property AutoStopBackwardDelayTime

    property AutoStopBackwardDelayTime

    */
    inline int AutoStopBackwardDelayTime() const; //Returns the value of AutoStopBackwardDelayTime
    inline void SetAutoStopBackwardDelayTime(int value); //Sets the value of the AutoStopBackwardDelayTime property

    /*
    Property AutoStopBackwardItemCount

    property AutoStopBackwardItemCount

    */
    inline int AutoStopBackwardItemCount() const; //Returns the value of AutoStopBackwardItemCount

    /*
    Property AutoStopForward

    property AutoStopForward

    */
    inline bool AutoStopForward() const; //Returns the value of AutoStopForward
    inline void SetAutoStopForward(bool value); //Sets the value of the AutoStopForward property

    /*
    Property AutoStopForwardDelayTime

    property AutoStopForwardDelayTime

    */
    inline int AutoStopForwardDelayTime() const; //Returns the value of AutoStopForwardDelayTime
    inline void SetAutoStopForwardDelayTime(int value); //Sets the value of the AutoStopForwardDelayTime property

    /*
    Property AutoStopForwardItemCount

    property AutoStopForwardItemCount

    */
    inline int AutoStopForwardItemCount() const; //Returns the value of AutoStopForwardItemCount

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapAutoStopBackward

    property CapAutoStopBackward

    */
    inline bool CapAutoStopBackward() const; //Returns the value of CapAutoStopBackward

    /*
    Property CapAutoStopBackwardItemCount

    property CapAutoStopBackwardItemCount

    */
    inline bool CapAutoStopBackwardItemCount() const; //Returns the value of CapAutoStopBackwardItemCount

    /*
    Property CapAutoStopForward

    property CapAutoStopForward

    */
    inline bool CapAutoStopForward() const; //Returns the value of CapAutoStopForward

    /*
    Property CapAutoStopForwardItemCount

    property CapAutoStopForwardItemCount

    */
    inline bool CapAutoStopForwardItemCount() const; //Returns the value of CapAutoStopForwardItemCount

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapLightBarrierBackward

    property CapLightBarrierBackward

    */
    inline bool CapLightBarrierBackward() const; //Returns the value of CapLightBarrierBackward

    /*
    Property CapLightBarrierForward

    property CapLightBarrierForward

    */
    inline bool CapLightBarrierForward() const; //Returns the value of CapLightBarrierForward

    /*
    Property CapMoveBackward

    property CapMoveBackward

    */
    inline bool CapMoveBackward() const; //Returns the value of CapMoveBackward

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapSecurityFlapBackward

    property CapSecurityFlapBackward

    */
    inline bool CapSecurityFlapBackward() const; //Returns the value of CapSecurityFlapBackward

    /*
    Property CapSecurityFlapForward

    property CapSecurityFlapForward

    */
    inline bool CapSecurityFlapForward() const; //Returns the value of CapSecurityFlapForward

    /*
    Property CapSpeedStepsBackward

    property CapSpeedStepsBackward

    */
    inline int CapSpeedStepsBackward() const; //Returns the value of CapSpeedStepsBackward

    /*
    Property CapSpeedStepsForward

    property CapSpeedStepsForward

    */
    inline int CapSpeedStepsForward() const; //Returns the value of CapSpeedStepsForward

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property LightBarrierBackwardInterrupted

    property LightBarrierBackwardInterrupted

    */
    inline bool LightBarrierBackwardInterrupted() const; //Returns the value of LightBarrierBackwardInterrupted

    /*
    Property LightBarrierForwardInterrupted

    property LightBarrierForwardInterrupted

    */
    inline bool LightBarrierForwardInterrupted() const; //Returns the value of LightBarrierForwardInterrupted

    /*
    Property MotionStatus

    property MotionStatus

    */
    inline int MotionStatus() const; //Returns the value of MotionStatus

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property SecurityFlapBackwardOpened

    property SecurityFlapBackwardOpened

    */
    inline bool SecurityFlapBackwardOpened() const; //Returns the value of SecurityFlapBackwardOpened

    /*
    Property SecurityFlapForwardOpened

    property SecurityFlapForwardOpened

    */
    inline bool SecurityFlapForwardOpened() const; //Returns the value of SecurityFlapForwardOpened

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Method AdjustItemCount

    method AdjustItemCount

    */
    inline int AdjustItemCount(int Direction, int Count);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method MoveBackward

    method MoveBackward

    */
    inline int MoveBackward(int Speed);

    /*
    Method MoveForward

    method MoveForward

    */
    inline int MoveForward(int Speed);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetBelt

    method ResetBelt

    */
    inline int ResetBelt();

    /*
    Method ResetItemCount

    method ResetItemCount

    */
    inline int ResetItemCount(int Direction);

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SODataDummy

    method SODataDummy

    */
    inline void SODataDummy(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOErrorDummy

    method SOErrorDummy

    */
    inline void SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method StopBelt

    method StopBelt

    */
    inline int StopBelt();

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline bool OPOSBelt::AutoStopBackward() const
{
    QVariant qax_result = property("AutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSBelt::SetAutoStopBackward(bool value){ setProperty("AutoStopBackward", QVariant(value)); }

inline int OPOSBelt::AutoStopBackwardDelayTime() const
{
    QVariant qax_result = property("AutoStopBackwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSBelt::SetAutoStopBackwardDelayTime(int value){ setProperty("AutoStopBackwardDelayTime", QVariant(value)); }

inline int OPOSBelt::AutoStopBackwardItemCount() const
{
    QVariant qax_result = property("AutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSBelt::AutoStopForward() const
{
    QVariant qax_result = property("AutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSBelt::SetAutoStopForward(bool value){ setProperty("AutoStopForward", QVariant(value)); }

inline int OPOSBelt::AutoStopForwardDelayTime() const
{
    QVariant qax_result = property("AutoStopForwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSBelt::SetAutoStopForwardDelayTime(int value){ setProperty("AutoStopForwardDelayTime", QVariant(value)); }

inline int OPOSBelt::AutoStopForwardItemCount() const
{
    QVariant qax_result = property("AutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSBelt::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSBelt::CapAutoStopBackward() const
{
    QVariant qax_result = property("CapAutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapAutoStopBackwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapAutoStopForward() const
{
    QVariant qax_result = property("CapAutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapAutoStopForwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapLightBarrierBackward() const
{
    QVariant qax_result = property("CapLightBarrierBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapLightBarrierForward() const
{
    QVariant qax_result = property("CapLightBarrierForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapMoveBackward() const
{
    QVariant qax_result = property("CapMoveBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSBelt::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSBelt::CapSecurityFlapBackward() const
{
    QVariant qax_result = property("CapSecurityFlapBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapSecurityFlapForward() const
{
    QVariant qax_result = property("CapSecurityFlapForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSBelt::CapSpeedStepsBackward() const
{
    QVariant qax_result = property("CapSpeedStepsBackward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::CapSpeedStepsForward() const
{
    QVariant qax_result = property("CapSpeedStepsForward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSBelt::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSBelt::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSBelt::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSBelt::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSBelt::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSBelt::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSBelt::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSBelt::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSBelt::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSBelt::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSBelt::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool OPOSBelt::LightBarrierBackwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierBackwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::LightBarrierForwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierForwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSBelt::MotionStatus() const
{
    QVariant qax_result = property("MotionStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSBelt::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSBelt::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSBelt::SecurityFlapBackwardOpened() const
{
    QVariant qax_result = property("SecurityFlapBackwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSBelt::SecurityFlapForwardOpened() const
{
    QVariant qax_result = property("SecurityFlapForwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSBelt::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSBelt::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSBelt::AdjustItemCount(int Direction, int Count)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Count};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int OPOSBelt::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int OPOSBelt::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSBelt::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSBelt::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSBelt::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSBelt::MoveBackward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSBelt::MoveForward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSBelt::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSBelt::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSBelt::ResetBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSBelt::ResetItemCount(int Direction)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSBelt::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSBelt::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void OPOSBelt::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void OPOSBelt::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void OPOSBelt::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void OPOSBelt::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int OPOSBelt::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void OPOSBelt::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline int OPOSBelt::StopBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int OPOSBelt::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int OPOSBelt::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}


inline bool IOPOSBelt::AutoStopBackward() const
{
    QVariant qax_result = property("AutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt::SetAutoStopBackward(bool value){ setProperty("AutoStopBackward", QVariant(value)); }

inline int IOPOSBelt::AutoStopBackwardDelayTime() const
{
    QVariant qax_result = property("AutoStopBackwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt::SetAutoStopBackwardDelayTime(int value){ setProperty("AutoStopBackwardDelayTime", QVariant(value)); }

inline int IOPOSBelt::AutoStopBackwardItemCount() const
{
    QVariant qax_result = property("AutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt::AutoStopForward() const
{
    QVariant qax_result = property("AutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt::SetAutoStopForward(bool value){ setProperty("AutoStopForward", QVariant(value)); }

inline int IOPOSBelt::AutoStopForwardDelayTime() const
{
    QVariant qax_result = property("AutoStopForwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt::SetAutoStopForwardDelayTime(int value){ setProperty("AutoStopForwardDelayTime", QVariant(value)); }

inline int IOPOSBelt::AutoStopForwardItemCount() const
{
    QVariant qax_result = property("AutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSBelt::CapAutoStopBackward() const
{
    QVariant qax_result = property("CapAutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapAutoStopBackwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapAutoStopForward() const
{
    QVariant qax_result = property("CapAutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapAutoStopForwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapLightBarrierBackward() const
{
    QVariant qax_result = property("CapLightBarrierBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapLightBarrierForward() const
{
    QVariant qax_result = property("CapLightBarrierForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapMoveBackward() const
{
    QVariant qax_result = property("CapMoveBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt::CapSecurityFlapBackward() const
{
    QVariant qax_result = property("CapSecurityFlapBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapSecurityFlapForward() const
{
    QVariant qax_result = property("CapSecurityFlapForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt::CapSpeedStepsBackward() const
{
    QVariant qax_result = property("CapSpeedStepsBackward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::CapSpeedStepsForward() const
{
    QVariant qax_result = property("CapSpeedStepsForward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSBelt::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSBelt::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSBelt::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool IOPOSBelt::LightBarrierBackwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierBackwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::LightBarrierForwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierForwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt::MotionStatus() const
{
    QVariant qax_result = property("MotionStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSBelt::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt::SecurityFlapBackwardOpened() const
{
    QVariant qax_result = property("SecurityFlapBackwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt::SecurityFlapForwardOpened() const
{
    QVariant qax_result = property("SecurityFlapForwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSBelt::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt::AdjustItemCount(int Direction, int Count)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Count};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSBelt::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSBelt::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSBelt::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSBelt::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSBelt::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSBelt::MoveBackward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSBelt::MoveForward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSBelt::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSBelt::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSBelt::ResetBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSBelt::ResetItemCount(int Direction)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSBelt::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSBelt::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSBelt::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IOPOSBelt::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSBelt::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSBelt::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline int IOPOSBelt::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSBelt::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int IOPOSBelt::StopBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int IOPOSBelt::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSBelt::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}


inline bool IOPOSBelt_1_12::AutoStopBackward() const
{
    QVariant qax_result = property("AutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetAutoStopBackward(bool value){ setProperty("AutoStopBackward", QVariant(value)); }

inline int IOPOSBelt_1_12::AutoStopBackwardDelayTime() const
{
    QVariant qax_result = property("AutoStopBackwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetAutoStopBackwardDelayTime(int value){ setProperty("AutoStopBackwardDelayTime", QVariant(value)); }

inline int IOPOSBelt_1_12::AutoStopBackwardItemCount() const
{
    QVariant qax_result = property("AutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::AutoStopForward() const
{
    QVariant qax_result = property("AutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetAutoStopForward(bool value){ setProperty("AutoStopForward", QVariant(value)); }

inline int IOPOSBelt_1_12::AutoStopForwardDelayTime() const
{
    QVariant qax_result = property("AutoStopForwardDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetAutoStopForwardDelayTime(int value){ setProperty("AutoStopForwardDelayTime", QVariant(value)); }

inline int IOPOSBelt_1_12::AutoStopForwardItemCount() const
{
    QVariant qax_result = property("AutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSBelt_1_12::CapAutoStopBackward() const
{
    QVariant qax_result = property("CapAutoStopBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapAutoStopBackwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopBackwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapAutoStopForward() const
{
    QVariant qax_result = property("CapAutoStopForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapAutoStopForwardItemCount() const
{
    QVariant qax_result = property("CapAutoStopForwardItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapLightBarrierBackward() const
{
    QVariant qax_result = property("CapLightBarrierBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapLightBarrierForward() const
{
    QVariant qax_result = property("CapLightBarrierForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapMoveBackward() const
{
    QVariant qax_result = property("CapMoveBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt_1_12::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapSecurityFlapBackward() const
{
    QVariant qax_result = property("CapSecurityFlapBackward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapSecurityFlapForward() const
{
    QVariant qax_result = property("CapSecurityFlapForward");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt_1_12::CapSpeedStepsBackward() const
{
    QVariant qax_result = property("CapSpeedStepsBackward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::CapSpeedStepsForward() const
{
    QVariant qax_result = property("CapSpeedStepsForward");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt_1_12::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt_1_12::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSBelt_1_12::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSBelt_1_12::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSBelt_1_12::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline bool IOPOSBelt_1_12::LightBarrierBackwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierBackwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::LightBarrierForwardInterrupted() const
{
    QVariant qax_result = property("LightBarrierForwardInterrupted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSBelt_1_12::MotionStatus() const
{
    QVariant qax_result = property("MotionStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSBelt_1_12::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSBelt_1_12::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::SecurityFlapBackwardOpened() const
{
    QVariant qax_result = property("SecurityFlapBackwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSBelt_1_12::SecurityFlapForwardOpened() const
{
    QVariant qax_result = property("SecurityFlapForwardOpened");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSBelt_1_12::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSBelt_1_12::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSBelt_1_12::AdjustItemCount(int Direction, int Count)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction, (void*)&Count};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::MoveBackward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::MoveForward(int Speed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::ResetBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::ResetItemCount(int Direction)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Direction};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSBelt_1_12::SODataDummy(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IOPOSBelt_1_12::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSBelt_1_12::SOErrorDummy(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSBelt_1_12::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline int IOPOSBelt_1_12::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSBelt_1_12::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int IOPOSBelt_1_12::StopBelt()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int IOPOSBelt_1_12::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSBelt *t)
{ Q_ASSERT(!t); return new OPOS::OPOSBelt; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSBelt *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSBelt; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSBelt_1_12 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSBelt_1_12; }

#endif

