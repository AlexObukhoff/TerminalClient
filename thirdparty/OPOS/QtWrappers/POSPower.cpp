/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSPOSPower.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\POSPower.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSPOSPower[] = {

 // content:
       1,       // revision
       0,       // classname
       5,    10, // classinfo
       33,    20, // methods
       42,    185, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       19, 37, 
       58, 70, 
       84, 96, 
       114, 126, 
       144, 156, 

 // signals: signature, parameters, type, tag, flags
       174, 207, 233, 234, 5,
       235, 258, 263, 264, 5,
       265, 304, 326, 327, 5,
       328, 353, 358, 359, 5,
       360, 386, 401, 402, 5,

 // slots: signature, parameters, type, tag, flags
       403, 420, 426, 430, 9,
       431, 448, 456, 460, 9,
       461, 469, 470, 474, 9,
       475, 512, 537, 541, 9,
       542, 570, 592, 596, 9,
       597, 611, 622, 626, 9,
       627, 643, 644, 648, 9,
       649, 674, 691, 695, 9,
       696, 709, 710, 714, 9,
       715, 744, 762, 766, 9,
       767, 784, 791, 792, 9,
       793, 823, 849, 850, 9,
       851, 882, 938, 939, 9,
       940, 967, 976, 977, 9,
       978, 992, 993, 997, 9,
       998, 1018, 1023, 1024, 9,
       1025, 1063, 1093, 1094, 9,
       1095, 1123, 1143, 1144, 9,
       1145, 1170, 1187, 1188, 9,
       1189, 1212, 1226, 1227, 9,
       1228, 1262, 1288, 1289, 9,
       1290, 1312, 1325, 1326, 9,
       1327, 1347, 1359, 1360, 9,
       1361, 1375, 1376, 1380, 9,
       1381, 1397, 1404, 1408, 9,
       1409, 1425, 1432, 1436, 9,
       1437, 1461, 1478, 1482, 9,
       1483, 1509, 1526, 1530, 9,

 // properties: name, type, flags
       1531, 1556, 0x02005001, 		 // int BatteryCapacityRemaining
       1560, 1590, 0x02015003, 		 // int BatteryCriticallyLowThreshold
       1594, 1614, 0x02015003, 		 // int BatteryLowThreshold
       1618, 1635, 0x02015003, 		 // int BinaryConversion
       1639, 1667, 0x01005001, 		 // bool CapBatteryCapacityRemaining
       1672, 1698, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1703, 1715, 0x01005001, 		 // bool CapFanAlarm
       1720, 1733, 0x01005001, 		 // bool CapHeatAlarm
       1738, 1756, 0x02005001, 		 // int CapPowerReporting
       1760, 1775, 0x01005001, 		 // bool CapQuickCharge
       1780, 1794, 0x01005001, 		 // bool CapRestartPOS
       1799, 1814, 0x01005001, 		 // bool CapShutdownPOS
       1819, 1833, 0x01005001, 		 // bool CapStandbyPOS
       1838, 1861, 0x01005001, 		 // bool CapStatisticsReporting
       1866, 1880, 0x01005001, 		 // bool CapSuspendPOS
       1885, 1903, 0x02005001, 		 // int CapUPSChargeState
       1907, 1925, 0x01005001, 		 // bool CapUpdateFirmware
       1930, 1950, 0x01005001, 		 // bool CapUpdateStatistics
       1955, 1996, 0x01005001, 		 // bool CapVariableBatteryCriticallyLowThreshold
       2001, 2032, 0x01005001, 		 // bool CapVariableBatteryLowThreshold
       2037, 2053, 0x0a005001, 		 // QString CheckHealthText
       2061, 2069, 0x01005001, 		 // bool Claimed
       2074, 2099, 0x0a005001, 		 // QString ControlObjectDescription
       2107, 2128, 0x02005001, 		 // int ControlObjectVersion
       2132, 2150, 0x0a005001, 		 // QString DeviceDescription
       2158, 2172, 0x01015003, 		 // bool DeviceEnabled
       2177, 2188, 0x0a005001, 		 // QString DeviceName
       2196, 2222, 0x02015003, 		 // int EnforcedShutdownDelayTime
       2226, 2239, 0x01015003, 		 // bool FreezeEvents
       2244, 2255, 0x02005001, 		 // int OpenResult
       2259, 2278, 0x02005001, 		 // int PowerFailDelayTime
       2282, 2294, 0x02015003, 		 // int PowerNotify
       2298, 2310, 0x02005001, 		 // int PowerSource
       2314, 2325, 0x02005001, 		 // int PowerState
       2329, 2345, 0x01005001, 		 // bool QuickChargeMode
       2350, 2366, 0x02005001, 		 // int QuickChargeTime
       2370, 2381, 0x02005001, 		 // int ResultCode
       2385, 2404, 0x02005001, 		 // int ResultCodeExtended
       2408, 2433, 0x0a005001, 		 // QString ServiceObjectDescription
       2441, 2462, 0x02005001, 		 // int ServiceObjectVersion
       2466, 2472, 0x02005001, 		 // int State
       2476, 2491, 0x02005001, 		 // int UPSChargeState

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSPOSPower() {
    static const char stringdata0[] = {
    "OPOS::OPOSPOSPower\0"
    "Event Interface 4\0_IOPOSPOSPowerEvents\0Interface 0\0IOPOSPOSPower\0Interface 1\0IOPOSPOSPower_1_9\0Interface 2\0IOPOSPOSPower_1_8\0Interface 3\0IOPOSPOSPower_1_5\0"
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0"
    "Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0"
    "ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RestartPOS()\0\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0"
    "\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBatteryCriticallyLowThreshold(int)\0"
    "BatteryCriticallyLowThreshold\0\0\0SetBatteryLowThreshold(int)\0BatteryLowThreshold\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetEnforcedShutdownDelayTime(int)\0EnforcedShutdownDelayTime\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0ShutdownPOS()\0\0int\0\0StandbyPOS(int)\0Reason\0int\0\0SuspendPOS(int)\0Reason\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "BatteryCapacityRemaining\0int\0BatteryCriticallyLowThreshold\0int\0BatteryLowThreshold\0int\0BinaryConversion\0int\0CapBatteryCapacityRemaining\0bool\0CapCompareFirmwareVersion\0bool\0CapFanAlarm\0"
    "bool\0CapHeatAlarm\0bool\0CapPowerReporting\0int\0CapQuickCharge\0bool\0CapRestartPOS\0bool\0CapShutdownPOS\0bool\0CapStandbyPOS\0bool\0CapStatisticsReporting\0bool\0CapSuspendPOS\0bool\0CapUPSChargeState\0int\0CapUpdateFirmware\0"
    "bool\0CapUpdateStatistics\0bool\0CapVariableBatteryCriticallyLowThreshold\0bool\0CapVariableBatteryLowThreshold\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EnforcedShutdownDelayTime\0int\0FreezeEvents\0bool\0OpenResult\0int\0PowerFailDelayTime\0int\0PowerNotify\0int\0PowerSource\0int\0PowerState\0int\0"
    "QuickChargeMode\0bool\0QuickChargeTime\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0UPSChargeState\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSPOSPower::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSPOSPower(),
qt_meta_data_OPOS__OPOSPOSPower }
};

void *OPOSPOSPower::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSPOSPower()))
        return static_cast<void*>(const_cast<OPOSPOSPower*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPOSPower[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       31,    10, // methods
       43,    165, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 175, 181, 185, 9,
       186, 203, 211, 215, 9,
       216, 224, 225, 229, 9,
       230, 267, 292, 296, 9,
       297, 325, 347, 351, 9,
       352, 366, 377, 381, 9,
       382, 398, 399, 403, 9,
       404, 429, 446, 450, 9,
       451, 464, 465, 469, 9,
       470, 499, 517, 521, 9,
       522, 539, 546, 547, 9,
       548, 578, 604, 605, 9,
       606, 637, 693, 694, 9,
       695, 722, 731, 732, 9,
       733, 747, 748, 752, 9,
       753, 773, 778, 779, 9,
       780, 818, 848, 849, 9,
       850, 878, 898, 899, 9,
       900, 925, 942, 943, 9,
       944, 967, 981, 982, 9,
       983, 1017, 1043, 1044, 9,
       1045, 1067, 1080, 1081, 9,
       1082, 1102, 1114, 1115, 9,
       1116, 1130, 1131, 1135, 9,
       1136, 1152, 1159, 1163, 9,
       1164, 1180, 1187, 1191, 9,
       1192, 1216, 1233, 1237, 9,
       1238, 1264, 1281, 1285, 9,

 // properties: name, type, flags
       1286, 1311, 0x02005001, 		 // int BatteryCapacityRemaining
       1315, 1345, 0x02015003, 		 // int BatteryCriticallyLowThreshold
       1349, 1369, 0x02015003, 		 // int BatteryLowThreshold
       1373, 1390, 0x02015003, 		 // int BinaryConversion
       1394, 1422, 0x01005001, 		 // bool CapBatteryCapacityRemaining
       1427, 1453, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1458, 1470, 0x01005001, 		 // bool CapFanAlarm
       1475, 1488, 0x01005001, 		 // bool CapHeatAlarm
       1493, 1511, 0x02005001, 		 // int CapPowerReporting
       1515, 1530, 0x01005001, 		 // bool CapQuickCharge
       1535, 1549, 0x01005001, 		 // bool CapRestartPOS
       1554, 1569, 0x01005001, 		 // bool CapShutdownPOS
       1574, 1588, 0x01005001, 		 // bool CapStandbyPOS
       1593, 1616, 0x01005001, 		 // bool CapStatisticsReporting
       1621, 1635, 0x01005001, 		 // bool CapSuspendPOS
       1640, 1658, 0x02005001, 		 // int CapUPSChargeState
       1662, 1680, 0x01005001, 		 // bool CapUpdateFirmware
       1685, 1705, 0x01005001, 		 // bool CapUpdateStatistics
       1710, 1751, 0x01005001, 		 // bool CapVariableBatteryCriticallyLowThreshold
       1756, 1787, 0x01005001, 		 // bool CapVariableBatteryLowThreshold
       1792, 1808, 0x0a005001, 		 // QString CheckHealthText
       1816, 1824, 0x01005001, 		 // bool Claimed
       1829, 1854, 0x0a005001, 		 // QString ControlObjectDescription
       1862, 1883, 0x02005001, 		 // int ControlObjectVersion
       1887, 1905, 0x0a005001, 		 // QString DeviceDescription
       1913, 1927, 0x01015003, 		 // bool DeviceEnabled
       1932, 1943, 0x0a005001, 		 // QString DeviceName
       1951, 1977, 0x02015003, 		 // int EnforcedShutdownDelayTime
       1981, 1994, 0x01015003, 		 // bool FreezeEvents
       1999, 2010, 0x02005001, 		 // int OpenResult
       2014, 2033, 0x02005001, 		 // int PowerFailDelayTime
       2037, 2049, 0x02015003, 		 // int PowerNotify
       2053, 2065, 0x02005001, 		 // int PowerSource
       2069, 2080, 0x02005001, 		 // int PowerState
       2084, 2100, 0x01005001, 		 // bool QuickChargeMode
       2105, 2121, 0x02005001, 		 // int QuickChargeTime
       2125, 2136, 0x02005001, 		 // int ResultCode
       2140, 2159, 0x02005001, 		 // int ResultCodeExtended
       2163, 2188, 0x0a005001, 		 // QString ServiceObjectDescription
       2196, 2217, 0x02005001, 		 // int ServiceObjectVersion
       2221, 2227, 0x02005001, 		 // int State
       2231, 2246, 0x02005001, 		 // int UPSChargeState
       2250, 2258, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPOSPower() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPOSPower\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RestartPOS()\0\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBatteryCriticallyLowThreshold(int)\0BatteryCriticallyLowThreshold\0"
    "\0\0SetBatteryLowThreshold(int)\0BatteryLowThreshold\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetEnforcedShutdownDelayTime(int)\0EnforcedShutdownDelayTime\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0ShutdownPOS()\0\0int\0\0StandbyPOS(int)\0Reason\0int\0\0SuspendPOS(int)\0Reason\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0"
    "int\0\0"
    "BatteryCapacityRemaining\0int\0BatteryCriticallyLowThreshold\0int\0BatteryLowThreshold\0int\0BinaryConversion\0int\0CapBatteryCapacityRemaining\0bool\0CapCompareFirmwareVersion\0bool\0CapFanAlarm\0bool\0CapHeatAlarm\0"
    "bool\0CapPowerReporting\0int\0CapQuickCharge\0bool\0CapRestartPOS\0bool\0CapShutdownPOS\0bool\0CapStandbyPOS\0bool\0CapStatisticsReporting\0bool\0CapSuspendPOS\0bool\0CapUPSChargeState\0int\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0"
    "bool\0CapVariableBatteryCriticallyLowThreshold\0bool\0CapVariableBatteryLowThreshold\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0"
    "DeviceEnabled\0bool\0DeviceName\0QString\0EnforcedShutdownDelayTime\0int\0FreezeEvents\0bool\0OpenResult\0int\0PowerFailDelayTime\0int\0PowerNotify\0int\0PowerSource\0int\0PowerState\0int\0QuickChargeMode\0bool\0QuickChargeTime\0"
    "int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0UPSChargeState\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPOSPower::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPOSPower(),
qt_meta_data_OPOS__IOPOSPOSPower }
};

void *IOPOSPOSPower::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPOSPower()))
        return static_cast<void*>(const_cast<IOPOSPOSPower*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPOSPower_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       31,    10, // methods
       43,    165, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 179, 185, 189, 9,
       190, 207, 215, 219, 9,
       220, 228, 229, 233, 9,
       234, 271, 296, 300, 9,
       301, 329, 351, 355, 9,
       356, 370, 381, 385, 9,
       386, 402, 403, 407, 9,
       408, 433, 450, 454, 9,
       455, 468, 469, 473, 9,
       474, 503, 521, 525, 9,
       526, 543, 550, 551, 9,
       552, 582, 608, 609, 9,
       610, 641, 697, 698, 9,
       699, 726, 735, 736, 9,
       737, 751, 752, 756, 9,
       757, 777, 782, 783, 9,
       784, 822, 852, 853, 9,
       854, 882, 902, 903, 9,
       904, 929, 946, 947, 9,
       948, 971, 985, 986, 9,
       987, 1021, 1047, 1048, 9,
       1049, 1071, 1084, 1085, 9,
       1086, 1106, 1118, 1119, 9,
       1120, 1134, 1135, 1139, 9,
       1140, 1156, 1163, 1167, 9,
       1168, 1184, 1191, 1195, 9,
       1196, 1220, 1237, 1241, 9,
       1242, 1268, 1285, 1289, 9,

 // properties: name, type, flags
       1290, 1315, 0x02005001, 		 // int BatteryCapacityRemaining
       1319, 1349, 0x02015003, 		 // int BatteryCriticallyLowThreshold
       1353, 1373, 0x02015003, 		 // int BatteryLowThreshold
       1377, 1394, 0x02015003, 		 // int BinaryConversion
       1398, 1426, 0x01005001, 		 // bool CapBatteryCapacityRemaining
       1431, 1457, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1462, 1474, 0x01005001, 		 // bool CapFanAlarm
       1479, 1492, 0x01005001, 		 // bool CapHeatAlarm
       1497, 1515, 0x02005001, 		 // int CapPowerReporting
       1519, 1534, 0x01005001, 		 // bool CapQuickCharge
       1539, 1553, 0x01005001, 		 // bool CapRestartPOS
       1558, 1573, 0x01005001, 		 // bool CapShutdownPOS
       1578, 1592, 0x01005001, 		 // bool CapStandbyPOS
       1597, 1620, 0x01005001, 		 // bool CapStatisticsReporting
       1625, 1639, 0x01005001, 		 // bool CapSuspendPOS
       1644, 1662, 0x02005001, 		 // int CapUPSChargeState
       1666, 1684, 0x01005001, 		 // bool CapUpdateFirmware
       1689, 1709, 0x01005001, 		 // bool CapUpdateStatistics
       1714, 1755, 0x01005001, 		 // bool CapVariableBatteryCriticallyLowThreshold
       1760, 1791, 0x01005001, 		 // bool CapVariableBatteryLowThreshold
       1796, 1812, 0x0a005001, 		 // QString CheckHealthText
       1820, 1828, 0x01005001, 		 // bool Claimed
       1833, 1858, 0x0a005001, 		 // QString ControlObjectDescription
       1866, 1887, 0x02005001, 		 // int ControlObjectVersion
       1891, 1909, 0x0a005001, 		 // QString DeviceDescription
       1917, 1931, 0x01015003, 		 // bool DeviceEnabled
       1936, 1947, 0x0a005001, 		 // QString DeviceName
       1955, 1981, 0x02015003, 		 // int EnforcedShutdownDelayTime
       1985, 1998, 0x01015003, 		 // bool FreezeEvents
       2003, 2014, 0x02005001, 		 // int OpenResult
       2018, 2037, 0x02005001, 		 // int PowerFailDelayTime
       2041, 2053, 0x02015003, 		 // int PowerNotify
       2057, 2069, 0x02005001, 		 // int PowerSource
       2073, 2084, 0x02005001, 		 // int PowerState
       2088, 2104, 0x01005001, 		 // bool QuickChargeMode
       2109, 2125, 0x02005001, 		 // int QuickChargeTime
       2129, 2140, 0x02005001, 		 // int ResultCode
       2144, 2163, 0x02005001, 		 // int ResultCodeExtended
       2167, 2192, 0x0a005001, 		 // QString ServiceObjectDescription
       2200, 2221, 0x02005001, 		 // int ServiceObjectVersion
       2225, 2231, 0x02005001, 		 // int State
       2235, 2250, 0x02005001, 		 // int UPSChargeState
       2254, 2262, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPOSPower_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPOSPower_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RestartPOS()\0\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBatteryCriticallyLowThreshold(int)\0BatteryCriticallyLowThreshold\0"
    "\0\0SetBatteryLowThreshold(int)\0BatteryLowThreshold\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetEnforcedShutdownDelayTime(int)\0EnforcedShutdownDelayTime\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0ShutdownPOS()\0\0int\0\0StandbyPOS(int)\0Reason\0int\0\0SuspendPOS(int)\0Reason\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0"
    "int\0\0"
    "BatteryCapacityRemaining\0int\0BatteryCriticallyLowThreshold\0int\0BatteryLowThreshold\0int\0BinaryConversion\0int\0CapBatteryCapacityRemaining\0bool\0CapCompareFirmwareVersion\0bool\0CapFanAlarm\0bool\0CapHeatAlarm\0"
    "bool\0CapPowerReporting\0int\0CapQuickCharge\0bool\0CapRestartPOS\0bool\0CapShutdownPOS\0bool\0CapStandbyPOS\0bool\0CapStatisticsReporting\0bool\0CapSuspendPOS\0bool\0CapUPSChargeState\0int\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0"
    "bool\0CapVariableBatteryCriticallyLowThreshold\0bool\0CapVariableBatteryLowThreshold\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0"
    "DeviceEnabled\0bool\0DeviceName\0QString\0EnforcedShutdownDelayTime\0int\0FreezeEvents\0bool\0OpenResult\0int\0PowerFailDelayTime\0int\0PowerNotify\0int\0PowerSource\0int\0PowerState\0int\0QuickChargeMode\0bool\0QuickChargeTime\0"
    "int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0UPSChargeState\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPOSPower_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPOSPower_1_9(),
qt_meta_data_OPOS__IOPOSPOSPower_1_9 }
};

void *IOPOSPOSPower_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPOSPower_1_9()))
        return static_cast<void*>(const_cast<IOPOSPOSPower_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPOSPower_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       24,    10, // methods
       31,    130, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 179, 185, 189, 9,
       190, 207, 215, 219, 9,
       220, 228, 229, 233, 9,
       234, 262, 284, 288, 9,
       289, 303, 314, 318, 9,
       319, 335, 336, 340, 9,
       341, 366, 383, 387, 9,
       388, 417, 435, 439, 9,
       440, 457, 464, 465, 9,
       466, 496, 522, 523, 9,
       524, 555, 611, 612, 9,
       613, 640, 649, 650, 9,
       651, 665, 666, 670, 9,
       671, 691, 696, 697, 9,
       698, 723, 740, 741, 9,
       742, 765, 779, 780, 9,
       781, 815, 841, 842, 9,
       843, 865, 878, 879, 9,
       880, 900, 912, 913, 9,
       914, 928, 929, 933, 9,
       934, 960, 977, 981, 9,

 // properties: name, type, flags
       982, 999, 0x02015003, 		 // int BinaryConversion
       1003, 1015, 0x01005001, 		 // bool CapFanAlarm
       1020, 1033, 0x01005001, 		 // bool CapHeatAlarm
       1038, 1056, 0x02005001, 		 // int CapPowerReporting
       1060, 1075, 0x01005001, 		 // bool CapQuickCharge
       1080, 1095, 0x01005001, 		 // bool CapShutdownPOS
       1100, 1123, 0x01005001, 		 // bool CapStatisticsReporting
       1128, 1146, 0x02005001, 		 // int CapUPSChargeState
       1150, 1170, 0x01005001, 		 // bool CapUpdateStatistics
       1175, 1191, 0x0a005001, 		 // QString CheckHealthText
       1199, 1207, 0x01005001, 		 // bool Claimed
       1212, 1237, 0x0a005001, 		 // QString ControlObjectDescription
       1245, 1266, 0x02005001, 		 // int ControlObjectVersion
       1270, 1288, 0x0a005001, 		 // QString DeviceDescription
       1296, 1310, 0x01015003, 		 // bool DeviceEnabled
       1315, 1326, 0x0a005001, 		 // QString DeviceName
       1334, 1360, 0x02015003, 		 // int EnforcedShutdownDelayTime
       1364, 1377, 0x01015003, 		 // bool FreezeEvents
       1382, 1393, 0x02005001, 		 // int OpenResult
       1397, 1416, 0x02005001, 		 // int PowerFailDelayTime
       1420, 1432, 0x02015003, 		 // int PowerNotify
       1436, 1447, 0x02005001, 		 // int PowerState
       1451, 1467, 0x01005001, 		 // bool QuickChargeMode
       1472, 1488, 0x02005001, 		 // int QuickChargeTime
       1492, 1503, 0x02005001, 		 // int ResultCode
       1507, 1526, 0x02005001, 		 // int ResultCodeExtended
       1530, 1555, 0x0a005001, 		 // QString ServiceObjectDescription
       1563, 1584, 0x02005001, 		 // int ServiceObjectVersion
       1588, 1594, 0x02005001, 		 // int State
       1598, 1613, 0x02005001, 		 // int UPSChargeState
       1617, 1625, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPOSPower_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPOSPower_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetEnforcedShutdownDelayTime(int)\0EnforcedShutdownDelayTime\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0ShutdownPOS()\0\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapFanAlarm\0bool\0CapHeatAlarm\0bool\0CapPowerReporting\0"
    "int\0CapQuickCharge\0bool\0CapShutdownPOS\0bool\0CapStatisticsReporting\0bool\0CapUPSChargeState\0int\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EnforcedShutdownDelayTime\0int\0FreezeEvents\0bool\0OpenResult\0int\0PowerFailDelayTime\0int\0PowerNotify\0int\0PowerState\0int\0QuickChargeMode\0"
    "bool\0QuickChargeTime\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0UPSChargeState\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPOSPower_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPOSPower_1_8(),
qt_meta_data_OPOS__IOPOSPOSPower_1_8 }
};

void *IOPOSPOSPower_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPOSPower_1_8()))
        return static_cast<void*>(const_cast<IOPOSPOSPower_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPOSPower_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       21,    10, // methods
       29,    115, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 179, 185, 189, 9,
       190, 207, 215, 219, 9,
       220, 228, 229, 233, 9,
       234, 262, 284, 288, 9,
       289, 303, 314, 318, 9,
       319, 335, 336, 340, 9,
       341, 358, 365, 366, 9,
       367, 397, 423, 424, 9,
       425, 456, 512, 513, 9,
       514, 541, 550, 551, 9,
       552, 566, 567, 571, 9,
       572, 592, 597, 598, 9,
       599, 624, 641, 642, 9,
       643, 666, 680, 681, 9,
       682, 716, 742, 743, 9,
       744, 766, 779, 780, 9,
       781, 801, 813, 814, 9,
       815, 829, 830, 834, 9,

 // properties: name, type, flags
       835, 852, 0x02015003, 		 // int BinaryConversion
       856, 868, 0x01005001, 		 // bool CapFanAlarm
       873, 886, 0x01005001, 		 // bool CapHeatAlarm
       891, 909, 0x02005001, 		 // int CapPowerReporting
       913, 928, 0x01005001, 		 // bool CapQuickCharge
       933, 948, 0x01005001, 		 // bool CapShutdownPOS
       953, 971, 0x02005001, 		 // int CapUPSChargeState
       975, 991, 0x0a005001, 		 // QString CheckHealthText
       999, 1007, 0x01005001, 		 // bool Claimed
       1012, 1037, 0x0a005001, 		 // QString ControlObjectDescription
       1045, 1066, 0x02005001, 		 // int ControlObjectVersion
       1070, 1088, 0x0a005001, 		 // QString DeviceDescription
       1096, 1110, 0x01015003, 		 // bool DeviceEnabled
       1115, 1126, 0x0a005001, 		 // QString DeviceName
       1134, 1160, 0x02015003, 		 // int EnforcedShutdownDelayTime
       1164, 1177, 0x01015003, 		 // bool FreezeEvents
       1182, 1193, 0x02005001, 		 // int OpenResult
       1197, 1216, 0x02005001, 		 // int PowerFailDelayTime
       1220, 1232, 0x02015003, 		 // int PowerNotify
       1236, 1247, 0x02005001, 		 // int PowerState
       1251, 1267, 0x01005001, 		 // bool QuickChargeMode
       1272, 1288, 0x02005001, 		 // int QuickChargeTime
       1292, 1303, 0x02005001, 		 // int ResultCode
       1307, 1326, 0x02005001, 		 // int ResultCodeExtended
       1330, 1355, 0x0a005001, 		 // QString ServiceObjectDescription
       1363, 1384, 0x02005001, 		 // int ServiceObjectVersion
       1388, 1394, 0x02005001, 		 // int State
       1398, 1413, 0x02005001, 		 // int UPSChargeState
       1417, 1425, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPOSPower_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPOSPower_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0"
    "DeviceEnabled\0\0\0SetEnforcedShutdownDelayTime(int)\0EnforcedShutdownDelayTime\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0ShutdownPOS()\0\0int\0\0"
    "BinaryConversion\0int\0CapFanAlarm\0"
    "bool\0CapHeatAlarm\0bool\0CapPowerReporting\0int\0CapQuickCharge\0bool\0CapShutdownPOS\0bool\0CapUPSChargeState\0int\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0"
    "DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EnforcedShutdownDelayTime\0int\0FreezeEvents\0bool\0OpenResult\0int\0PowerFailDelayTime\0int\0PowerNotify\0int\0PowerState\0int\0QuickChargeMode\0bool\0"
    "QuickChargeTime\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0UPSChargeState\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPOSPower_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPOSPower_1_5(),
qt_meta_data_OPOS__IOPOSPOSPower_1_5 }
};

void *IOPOSPOSPower_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPOSPower_1_5()))
        return static_cast<void*>(const_cast<IOPOSPOSPower_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

