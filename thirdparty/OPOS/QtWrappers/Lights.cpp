/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSLights.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\Lights.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSLights[] = {

 // content:
       1,       // revision
       0,       // classname
       3,    10, // classinfo
       28,    16, // methods
       26,    156, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       17, 35, 
       54, 66, 
       78, 90, 

 // signals: signature, parameters, type, tag, flags
       107, 140, 166, 167, 5,
       168, 191, 196, 197, 5,
       198, 237, 259, 260, 5,
       261, 286, 291, 292, 5,
       293, 319, 334, 335, 5,

 // slots: signature, parameters, type, tag, flags
       336, 353, 359, 363, 9,
       364, 381, 389, 393, 9,
       394, 402, 403, 407, 9,
       408, 445, 470, 474, 9,
       475, 503, 525, 529, 9,
       530, 544, 555, 559, 9,
       560, 576, 577, 581, 9,
       582, 607, 624, 628, 9,
       629, 658, 676, 680, 9,
       681, 698, 705, 706, 9,
       707, 737, 763, 764, 9,
       765, 796, 852, 853, 9,
       854, 881, 890, 891, 9,
       892, 906, 907, 911, 9,
       912, 932, 937, 938, 9,
       939, 964, 981, 982, 9,
       983, 1006, 1020, 1021, 9,
       1022, 1044, 1057, 1058, 9,
       1059, 1079, 1091, 1092, 9,
       1093, 1108, 1120, 1124, 9,
       1125, 1155, 1206, 1210, 9,
       1211, 1235, 1252, 1256, 9,
       1257, 1283, 1300, 1304, 9,

 // properties: name, type, flags
       1305, 1322, 0x02015003, 		 // int BinaryConversion
       1326, 1335, 0x02005001, 		 // int CapAlarm
       1339, 1348, 0x01005001, 		 // bool CapBlink
       1353, 1362, 0x02005001, 		 // int CapColor
       1366, 1392, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1397, 1415, 0x02005001, 		 // int CapPowerReporting
       1419, 1442, 0x01005001, 		 // bool CapStatisticsReporting
       1447, 1465, 0x01005001, 		 // bool CapUpdateFirmware
       1470, 1490, 0x01005001, 		 // bool CapUpdateStatistics
       1495, 1511, 0x0a005001, 		 // QString CheckHealthText
       1519, 1527, 0x01005001, 		 // bool Claimed
       1532, 1557, 0x0a005001, 		 // QString ControlObjectDescription
       1565, 1586, 0x02005001, 		 // int ControlObjectVersion
       1590, 1608, 0x0a005001, 		 // QString DeviceDescription
       1616, 1630, 0x01015003, 		 // bool DeviceEnabled
       1635, 1646, 0x0a005001, 		 // QString DeviceName
       1654, 1667, 0x01015003, 		 // bool FreezeEvents
       1672, 1682, 0x02005001, 		 // int MaxLights
       1686, 1697, 0x02005001, 		 // int OpenResult
       1701, 1713, 0x02015003, 		 // int PowerNotify
       1717, 1728, 0x02005001, 		 // int PowerState
       1732, 1743, 0x02005001, 		 // int ResultCode
       1747, 1766, 0x02005001, 		 // int ResultCodeExtended
       1770, 1795, 0x0a005001, 		 // QString ServiceObjectDescription
       1803, 1824, 0x02005001, 		 // int ServiceObjectVersion
       1828, 1834, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSLights() {
    static const char stringdata0[] = {
    "OPOS::OPOSLights\0"
    "Event Interface 2\0_IOPOSLightsEvents\0Interface 0\0IOPOSLights\0Interface 1\0IOPOSLights_1_12\0"
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0"
    "code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0"
    "FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0"
    "pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0SwitchOff(int)\0LightNumber\0int\0\0SwitchOn(int,int,int,int,int)\0LightNumber,BlinkOnCycle,BlinkOffCycle,Color,Alarm\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0"
    "int\0\0"
    "BinaryConversion\0int\0CapAlarm\0int\0CapBlink\0bool\0CapColor\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0"
    "QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0MaxLights\0int\0OpenResult\0int\0PowerNotify\0"
    "int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSLights::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSLights(),
qt_meta_data_OPOS__OPOSLights }
};

void *OPOSLights::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSLights()))
        return static_cast<void*>(const_cast<OPOSLights*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLights[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       27,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       18, 57, 79, 80, 5,
       81, 106, 111, 112, 5,
       113, 139, 154, 155, 5,

 // slots: signature, parameters, type, tag, flags
       156, 173, 179, 183, 9,
       184, 201, 209, 213, 9,
       214, 222, 223, 227, 9,
       228, 265, 290, 294, 9,
       295, 323, 345, 349, 9,
       350, 364, 375, 379, 9,
       380, 396, 397, 401, 9,
       402, 427, 444, 448, 9,
       449, 478, 496, 500, 9,
       501, 518, 525, 526, 9,
       527, 557, 583, 584, 9,
       585, 616, 672, 673, 9,
       674, 701, 710, 711, 9,
       712, 726, 727, 731, 9,
       732, 752, 757, 758, 9,
       759, 784, 801, 802, 9,
       803, 826, 840, 841, 9,
       842, 864, 877, 878, 9,
       879, 899, 911, 912, 9,
       913, 928, 940, 944, 9,
       945, 975, 1026, 1030, 9,
       1031, 1055, 1072, 1076, 9,
       1077, 1103, 1120, 1124, 9,

 // properties: name, type, flags
       1125, 1142, 0x02015003, 		 // int BinaryConversion
       1146, 1155, 0x02005001, 		 // int CapAlarm
       1159, 1168, 0x01005001, 		 // bool CapBlink
       1173, 1182, 0x02005001, 		 // int CapColor
       1186, 1212, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1217, 1235, 0x02005001, 		 // int CapPowerReporting
       1239, 1262, 0x01005001, 		 // bool CapStatisticsReporting
       1267, 1285, 0x01005001, 		 // bool CapUpdateFirmware
       1290, 1310, 0x01005001, 		 // bool CapUpdateStatistics
       1315, 1331, 0x0a005001, 		 // QString CheckHealthText
       1339, 1347, 0x01005001, 		 // bool Claimed
       1352, 1377, 0x0a005001, 		 // QString ControlObjectDescription
       1385, 1406, 0x02005001, 		 // int ControlObjectVersion
       1410, 1428, 0x0a005001, 		 // QString DeviceDescription
       1436, 1450, 0x01015003, 		 // bool DeviceEnabled
       1455, 1466, 0x0a005001, 		 // QString DeviceName
       1474, 1487, 0x01015003, 		 // bool FreezeEvents
       1492, 1502, 0x02005001, 		 // int MaxLights
       1506, 1517, 0x02005001, 		 // int OpenResult
       1521, 1533, 0x02015003, 		 // int PowerNotify
       1537, 1548, 0x02005001, 		 // int PowerState
       1552, 1563, 0x02005001, 		 // int ResultCode
       1567, 1586, 0x02005001, 		 // int ResultCodeExtended
       1590, 1615, 0x0a005001, 		 // QString ServiceObjectDescription
       1623, 1644, 0x02005001, 		 // int ServiceObjectVersion
       1648, 1654, 0x02005001, 		 // int State
       1658, 1666, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLights() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLights\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SwitchOff(int)\0LightNumber\0int\0\0SwitchOn(int,int,int,int,int)\0LightNumber,BlinkOnCycle,BlinkOffCycle,Color,Alarm\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapAlarm\0int\0CapBlink\0bool\0CapColor\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0"
    "bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0MaxLights\0int\0OpenResult\0"
    "int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLights::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLights(),
qt_meta_data_OPOS__IOPOSLights }
};

void *IOPOSLights::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLights()))
        return static_cast<void*>(const_cast<IOPOSLights*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSLights_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       27,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 227, 228, 232, 9,
       233, 270, 295, 299, 9,
       300, 328, 350, 354, 9,
       355, 369, 380, 384, 9,
       385, 401, 402, 406, 9,
       407, 432, 449, 453, 9,
       454, 483, 501, 505, 9,
       506, 523, 530, 531, 9,
       532, 562, 588, 589, 9,
       590, 621, 677, 678, 9,
       679, 706, 715, 716, 9,
       717, 731, 732, 736, 9,
       737, 757, 762, 763, 9,
       764, 789, 806, 807, 9,
       808, 831, 845, 846, 9,
       847, 869, 882, 883, 9,
       884, 904, 916, 917, 9,
       918, 933, 945, 949, 9,
       950, 980, 1031, 1035, 9,
       1036, 1060, 1077, 1081, 9,
       1082, 1108, 1125, 1129, 9,

 // properties: name, type, flags
       1130, 1147, 0x02015003, 		 // int BinaryConversion
       1151, 1160, 0x02005001, 		 // int CapAlarm
       1164, 1173, 0x01005001, 		 // bool CapBlink
       1178, 1187, 0x02005001, 		 // int CapColor
       1191, 1217, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1222, 1240, 0x02005001, 		 // int CapPowerReporting
       1244, 1267, 0x01005001, 		 // bool CapStatisticsReporting
       1272, 1290, 0x01005001, 		 // bool CapUpdateFirmware
       1295, 1315, 0x01005001, 		 // bool CapUpdateStatistics
       1320, 1336, 0x0a005001, 		 // QString CheckHealthText
       1344, 1352, 0x01005001, 		 // bool Claimed
       1357, 1382, 0x0a005001, 		 // QString ControlObjectDescription
       1390, 1411, 0x02005001, 		 // int ControlObjectVersion
       1415, 1433, 0x0a005001, 		 // QString DeviceDescription
       1441, 1455, 0x01015003, 		 // bool DeviceEnabled
       1460, 1471, 0x0a005001, 		 // QString DeviceName
       1479, 1492, 0x01015003, 		 // bool FreezeEvents
       1497, 1507, 0x02005001, 		 // int MaxLights
       1511, 1522, 0x02005001, 		 // int OpenResult
       1526, 1538, 0x02015003, 		 // int PowerNotify
       1542, 1553, 0x02005001, 		 // int PowerState
       1557, 1568, 0x02005001, 		 // int ResultCode
       1572, 1591, 0x02005001, 		 // int ResultCodeExtended
       1595, 1620, 0x0a005001, 		 // QString ServiceObjectDescription
       1628, 1649, 0x02005001, 		 // int ServiceObjectVersion
       1653, 1659, 0x02005001, 		 // int State
       1663, 1671, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSLights_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSLights_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0"
    "\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SwitchOff(int)\0LightNumber\0int\0\0SwitchOn(int,int,int,int,int)\0LightNumber,BlinkOnCycle,BlinkOffCycle,Color,Alarm\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapAlarm\0int\0CapBlink\0bool\0CapColor\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0"
    "bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0MaxLights\0int\0OpenResult\0"
    "int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSLights_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSLights_1_12(),
qt_meta_data_OPOS__IOPOSLights_1_12 }
};

void *IOPOSLights_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSLights_1_12()))
        return static_cast<void*>(const_cast<IOPOSLights_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

