/****************************************************************************
**
** Namespace OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSPINPad.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_PINPAD_H
#define QAX_DUMPCPP_PINPAD_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OPOS_EXPORT
#define OPOS_EXPORT
#endif

#include <ActiveQt/QAxObject>

struct IDispatch;


// Referenced namespace

namespace OPOS {


// skipping event interface _IOPOSPINPadEvents

class OPOS_EXPORT IOPOSPINPad : public QAxObject
{
public:
    IOPOSPINPad(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSPINPad_1_10 : public QAxObject
{
public:
    IOPOSPINPad_1_10(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSPINPad_1_9 : public QAxObject
{
public:
    IOPOSPINPad_1_9(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSPINPad_1_8 : public QAxObject
{
public:
    IOPOSPINPad_1_8(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class OPOS_EXPORT IOPOSPINPad_1_5 : public QAxObject
{
public:
    IOPOSPINPad_1_5(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class OPOS_EXPORT OPOSPINPad : public QAxObject
{
public:
    OPOSPINPad(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{ccb90132-b81e-11d2-ab74-0040054c3719}");
    }

    OPOSPINPad(IOPOSPINPad *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSPINPad(IOPOSPINPad_1_10 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSPINPad(IOPOSPINPad_1_9 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSPINPad(IOPOSPINPad_1_8 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    OPOSPINPad(IOPOSPINPad_1_5 *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AccountNumber

    property AccountNumber

    */
    inline QString AccountNumber() const; //Returns the value of AccountNumber
    inline void SetAccountNumber(const QString& value); //Sets the value of the AccountNumber property

    /*
    Property AdditionalSecurityInformation

    property AdditionalSecurityInformation

    */
    inline QString AdditionalSecurityInformation() const; //Returns the value of AdditionalSecurityInformation

    /*
    Property Amount

    property Amount

    */
    inline qlonglong Amount() const; //Returns the value of Amount
    inline void SetAmount(qlonglong value); //Sets the value of the Amount property

    /*
    Property AvailableLanguagesList

    property AvailableLanguagesList

    */
    inline QString AvailableLanguagesList() const; //Returns the value of AvailableLanguagesList

    /*
    Property AvailablePromptsList

    property AvailablePromptsList

    */
    inline QString AvailablePromptsList() const; //Returns the value of AvailablePromptsList

    /*
    Property BinaryConversion

    property BinaryConversion

    */
    inline int BinaryConversion() const; //Returns the value of BinaryConversion
    inline void SetBinaryConversion(int value); //Sets the value of the BinaryConversion property

    /*
    Property CapCompareFirmwareVersion

    property CapCompareFirmwareVersion

    */
    inline bool CapCompareFirmwareVersion() const; //Returns the value of CapCompareFirmwareVersion

    /*
    Property CapDisplay

    property CapDisplay

    */
    inline int CapDisplay() const; //Returns the value of CapDisplay

    /*
    Property CapKeyboard

    property CapKeyboard

    */
    inline bool CapKeyboard() const; //Returns the value of CapKeyboard

    /*
    Property CapLanguage

    property CapLanguage

    */
    inline int CapLanguage() const; //Returns the value of CapLanguage

    /*
    Property CapMACCalculation

    property CapMACCalculation

    */
    inline bool CapMACCalculation() const; //Returns the value of CapMACCalculation

    /*
    Property CapPowerReporting

    property CapPowerReporting

    */
    inline int CapPowerReporting() const; //Returns the value of CapPowerReporting

    /*
    Property CapStatisticsReporting

    property CapStatisticsReporting

    */
    inline bool CapStatisticsReporting() const; //Returns the value of CapStatisticsReporting

    /*
    Property CapTone

    property CapTone

    */
    inline bool CapTone() const; //Returns the value of CapTone

    /*
    Property CapUpdateFirmware

    property CapUpdateFirmware

    */
    inline bool CapUpdateFirmware() const; //Returns the value of CapUpdateFirmware

    /*
    Property CapUpdateStatistics

    property CapUpdateStatistics

    */
    inline bool CapUpdateStatistics() const; //Returns the value of CapUpdateStatistics

    /*
    Property CheckHealthText

    property CheckHealthText

    */
    inline QString CheckHealthText() const; //Returns the value of CheckHealthText

    /*
    Property Claimed

    property Claimed

    */
    inline bool Claimed() const; //Returns the value of Claimed

    /*
    Property ControlObjectDescription

    property ControlObjectDescription

    */
    inline QString ControlObjectDescription() const; //Returns the value of ControlObjectDescription

    /*
    Property ControlObjectVersion

    property ControlObjectVersion

    */
    inline int ControlObjectVersion() const; //Returns the value of ControlObjectVersion

    /*
    Property DataCount

    property DataCount

    */
    inline int DataCount() const; //Returns the value of DataCount

    /*
    Property DataEventEnabled

    property DataEventEnabled

    */
    inline bool DataEventEnabled() const; //Returns the value of DataEventEnabled
    inline void SetDataEventEnabled(bool value); //Sets the value of the DataEventEnabled property

    /*
    Property DeviceDescription

    property DeviceDescription

    */
    inline QString DeviceDescription() const; //Returns the value of DeviceDescription

    /*
    Property DeviceEnabled

    property DeviceEnabled

    */
    inline bool DeviceEnabled() const; //Returns the value of DeviceEnabled
    inline void SetDeviceEnabled(bool value); //Sets the value of the DeviceEnabled property

    /*
    Property DeviceName

    property DeviceName

    */
    inline QString DeviceName() const; //Returns the value of DeviceName

    /*
    Property EncryptedPIN

    property EncryptedPIN

    */
    inline QString EncryptedPIN() const; //Returns the value of EncryptedPIN

    /*
    Property FreezeEvents

    property FreezeEvents

    */
    inline bool FreezeEvents() const; //Returns the value of FreezeEvents
    inline void SetFreezeEvents(bool value); //Sets the value of the FreezeEvents property

    /*
    Property MaximumPINLength

    property MaximumPINLength

    */
    inline int MaximumPINLength() const; //Returns the value of MaximumPINLength
    inline void SetMaximumPINLength(int value); //Sets the value of the MaximumPINLength property

    /*
    Property MerchantID

    property MerchantID

    */
    inline QString MerchantID() const; //Returns the value of MerchantID
    inline void SetMerchantID(const QString& value); //Sets the value of the MerchantID property

    /*
    Property MinimumPINLength

    property MinimumPINLength

    */
    inline int MinimumPINLength() const; //Returns the value of MinimumPINLength
    inline void SetMinimumPINLength(int value); //Sets the value of the MinimumPINLength property

    /*
    Property OpenResult

    property OpenResult

    */
    inline int OpenResult() const; //Returns the value of OpenResult

    /*
    Property PINEntryEnabled

    property PINEntryEnabled

    */
    inline bool PINEntryEnabled() const; //Returns the value of PINEntryEnabled

    /*
    Property PowerNotify

    property PowerNotify

    */
    inline int PowerNotify() const; //Returns the value of PowerNotify
    inline void SetPowerNotify(int value); //Sets the value of the PowerNotify property

    /*
    Property PowerState

    property PowerState

    */
    inline int PowerState() const; //Returns the value of PowerState

    /*
    Property Prompt

    property Prompt

    */
    inline int Prompt() const; //Returns the value of Prompt
    inline void SetPrompt(int value); //Sets the value of the Prompt property

    /*
    Property PromptLanguage

    property PromptLanguage

    */
    inline int PromptLanguage() const; //Returns the value of PromptLanguage
    inline void SetPromptLanguage(int value); //Sets the value of the PromptLanguage property

    /*
    Property ResultCode

    property ResultCode

    */
    inline int ResultCode() const; //Returns the value of ResultCode

    /*
    Property ResultCodeExtended

    property ResultCodeExtended

    */
    inline int ResultCodeExtended() const; //Returns the value of ResultCodeExtended

    /*
    Property ServiceObjectDescription

    property ServiceObjectDescription

    */
    inline QString ServiceObjectDescription() const; //Returns the value of ServiceObjectDescription

    /*
    Property ServiceObjectVersion

    property ServiceObjectVersion

    */
    inline int ServiceObjectVersion() const; //Returns the value of ServiceObjectVersion

    /*
    Property State

    property State

    */
    inline int State() const; //Returns the value of State

    /*
    Property TerminalID

    property TerminalID

    */
    inline QString TerminalID() const; //Returns the value of TerminalID
    inline void SetTerminalID(const QString& value); //Sets the value of the TerminalID property

    /*
    Property Track1Data

    property Track1Data

    */
    inline QString Track1Data() const; //Returns the value of Track1Data
    inline void SetTrack1Data(const QString& value); //Sets the value of the Track1Data property

    /*
    Property Track2Data

    property Track2Data

    */
    inline QString Track2Data() const; //Returns the value of Track2Data
    inline void SetTrack2Data(const QString& value); //Sets the value of the Track2Data property

    /*
    Property Track3Data

    property Track3Data

    */
    inline QString Track3Data() const; //Returns the value of Track3Data
    inline void SetTrack3Data(const QString& value); //Sets the value of the Track3Data property

    /*
    Property Track4Data

    property Track4Data

    */
    inline QString Track4Data() const; //Returns the value of Track4Data
    inline void SetTrack4Data(const QString& value); //Sets the value of the Track4Data property

    /*
    Property TransactionType

    property TransactionType

    */
    inline int TransactionType() const; //Returns the value of TransactionType
    inline void SetTransactionType(int value); //Sets the value of the TransactionType property

    /*
    Method BeginEFTTransaction

    method BeginEFTTransaction

    */
    inline int BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost);

    /*
    Method CheckHealth

    method CheckHealth

    */
    inline int CheckHealth(int Level);

    /*
    Method ClaimDevice

    method ClaimDevice

    */
    inline int ClaimDevice(int Timeout);

    /*
    Method ClearInput

    method ClearInput

    */
    inline int ClearInput();

    /*
    Method ClearInputProperties

    method ClearInputProperties

    */
    inline int ClearInputProperties();

    /*
    Method Close

    method Close

    */
    inline int Close();

    /*
    Method CompareFirmwareVersion

    method CompareFirmwareVersion

    */
    inline int CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult);

    /*
    Method ComputeMAC

    method ComputeMAC

    */
    inline int ComputeMAC(const QString& InMsg, QString& pOutMsg);

    /*
    Method DirectIO

    method DirectIO

    */
    inline int DirectIO(int Command, int& pData, QString& pString);

    /*
    Method EnablePINEntry

    method EnablePINEntry

    */
    inline int EnablePINEntry();

    /*
    Method EndEFTTransaction

    method EndEFTTransaction

    */
    inline int EndEFTTransaction(int CompletionCode);

    /*
    Method Open

    method Open

    */
    inline int Open(const QString& DeviceName);

    /*
    Method ReleaseDevice

    method ReleaseDevice

    */
    inline int ReleaseDevice();

    /*
    Method ResetStatistics

    method ResetStatistics

    */
    inline int ResetStatistics(const QString& StatisticsBuffer);

    /*
    Method RetrieveStatistics

    method RetrieveStatistics

    */
    inline int RetrieveStatistics(QString& pStatisticsBuffer);

    /*
    Method SOData

    method SOData

    */
    inline void SOData(int Status);

    /*
    Method SODirectIO

    method SODirectIO

    */
    inline void SODirectIO(int EventNumber, int& pData, QString& pString);

    /*
    Method SOError

    method SOError

    */
    inline void SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse);

    /*
    Method SOOutputCompleteDummy

    method SOOutputCompleteDummy

    */
    inline void SOOutputCompleteDummy(int OutputID);

    /*
    Method SOProcessID

    method SOProcessID

    */
    inline int SOProcessID();

    /*
    Method SOStatusUpdate

    method SOStatusUpdate

    */
    inline void SOStatusUpdate(int Data);

    /*
    Method UpdateFirmware

    method UpdateFirmware

    */
    inline int UpdateFirmware(const QString& FirmwareFileName);

    /*
    Method UpdateKey

    method UpdateKey

    */
    inline int UpdateKey(int KeyNum, const QString& Key);

    /*
    Method UpdateStatistics

    method UpdateStatistics

    */
    inline int UpdateStatistics(const QString& StatisticsBuffer);

    /*
    Method VerifyMAC

    method VerifyMAC

    */
    inline int VerifyMAC(const QString& Message);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_OPOS_NOINLINES
inline QString OPOSPINPad::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString OPOSPINPad::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong OPOSPINPad::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void OPOSPINPad::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString OPOSPINPad::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSPINPad::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSPINPad::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool OPOSPINPad::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSPINPad::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSPINPad::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSPINPad::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSPINPad::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSPINPad::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSPINPad::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSPINPad::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSPINPad::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool OPOSPINPad::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSPINPad::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSPINPad::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString OPOSPINPad::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSPINPad::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSPINPad::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSPINPad::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSPINPad::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString OPOSPINPad::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSPINPad::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSPINPad::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString OPOSPINPad::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString OPOSPINPad::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OPOSPINPad::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OPOSPINPad::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int OPOSPINPad::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString OPOSPINPad::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int OPOSPINPad::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int OPOSPINPad::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool OPOSPINPad::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int OPOSPINPad::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int OPOSPINPad::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSPINPad::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int OPOSPINPad::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int OPOSPINPad::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSPINPad::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSPINPad::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int OPOSPINPad::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OPOSPINPad::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString OPOSPINPad::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString OPOSPINPad::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString OPOSPINPad::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString OPOSPINPad::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString OPOSPINPad::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OPOSPINPad::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int OPOSPINPad::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OPOSPINPad::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int OPOSPINPad::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int OPOSPINPad::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int OPOSPINPad::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int OPOSPINPad::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int OPOSPINPad::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int OPOSPINPad::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int OPOSPINPad::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int OPOSPINPad::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int OPOSPINPad::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int OPOSPINPad::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int OPOSPINPad::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int OPOSPINPad::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int OPOSPINPad::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int OPOSPINPad::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int OPOSPINPad::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void OPOSPINPad::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void OPOSPINPad::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void OPOSPINPad::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void OPOSPINPad::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline int OPOSPINPad::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void OPOSPINPad::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline int OPOSPINPad::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int OPOSPINPad::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int OPOSPINPad::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline int OPOSPINPad::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}


inline QString IOPOSPINPad::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString IOPOSPINPad::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong IOPOSPINPad::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void IOPOSPINPad::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString IOPOSPINPad::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSPINPad::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSPINPad::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSPINPad::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSPINPad::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString IOPOSPINPad::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int IOPOSPINPad::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int IOPOSPINPad::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSPINPad::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int IOPOSPINPad::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int IOPOSPINPad::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString IOPOSPINPad::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString IOPOSPINPad::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString IOPOSPINPad::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString IOPOSPINPad::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int IOPOSPINPad::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int IOPOSPINPad::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSPINPad::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSPINPad::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSPINPad::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSPINPad::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSPINPad::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSPINPad::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSPINPad::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSPINPad::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSPINPad::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSPINPad::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSPINPad::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSPINPad::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSPINPad::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSPINPad::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSPINPad::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSPINPad::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSPINPad::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSPINPad::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int IOPOSPINPad::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void IOPOSPINPad::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int IOPOSPINPad::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int IOPOSPINPad::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int IOPOSPINPad::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int IOPOSPINPad::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}


inline QString IOPOSPINPad_1_10::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString IOPOSPINPad_1_10::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong IOPOSPINPad_1_10::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString IOPOSPINPad_1_10::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSPINPad_1_10::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_10::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_10::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSPINPad_1_10::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString IOPOSPINPad_1_10::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int IOPOSPINPad_1_10::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int IOPOSPINPad_1_10::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_10::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSPINPad_1_10::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int IOPOSPINPad_1_10::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int IOPOSPINPad_1_10::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_10::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_10::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString IOPOSPINPad_1_10::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString IOPOSPINPad_1_10::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString IOPOSPINPad_1_10::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString IOPOSPINPad_1_10::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int IOPOSPINPad_1_10::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_10::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int IOPOSPINPad_1_10::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ClearInputProperties()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_10::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSPINPad_1_10::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSPINPad_1_10::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IOPOSPINPad_1_10::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int IOPOSPINPad_1_10::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_10::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline int IOPOSPINPad_1_10::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_10::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}


inline QString IOPOSPINPad_1_9::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString IOPOSPINPad_1_9::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong IOPOSPINPad_1_9::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString IOPOSPINPad_1_9::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline bool IOPOSPINPad_1_9::CapCompareFirmwareVersion() const
{
    QVariant qax_result = property("CapCompareFirmwareVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapUpdateFirmware() const
{
    QVariant qax_result = property("CapUpdateFirmware");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_9::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_9::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSPINPad_1_9::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString IOPOSPINPad_1_9::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int IOPOSPINPad_1_9::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int IOPOSPINPad_1_9::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_9::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSPINPad_1_9::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int IOPOSPINPad_1_9::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int IOPOSPINPad_1_9::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_9::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_9::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString IOPOSPINPad_1_9::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString IOPOSPINPad_1_9::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString IOPOSPINPad_1_9::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString IOPOSPINPad_1_9::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int IOPOSPINPad_1_9::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_9::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int IOPOSPINPad_1_9::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::CompareFirmwareVersion(const QString& FirmwareFileName, int& pResult)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName, (void*)&pResult};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_9::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IOPOSPINPad_1_9::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSPINPad_1_9::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IOPOSPINPad_1_9::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline int IOPOSPINPad_1_9::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_9::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline int IOPOSPINPad_1_9::UpdateFirmware(const QString& FirmwareFileName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirmwareFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_9::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}


inline QString IOPOSPINPad_1_8::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString IOPOSPINPad_1_8::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong IOPOSPINPad_1_8::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString IOPOSPINPad_1_8::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSPINPad_1_8::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::CapStatisticsReporting() const
{
    QVariant qax_result = property("CapStatisticsReporting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::CapUpdateStatistics() const
{
    QVariant qax_result = property("CapUpdateStatistics");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_8::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_8::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSPINPad_1_8::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString IOPOSPINPad_1_8::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int IOPOSPINPad_1_8::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int IOPOSPINPad_1_8::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_8::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSPINPad_1_8::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int IOPOSPINPad_1_8::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int IOPOSPINPad_1_8::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_8::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_8::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString IOPOSPINPad_1_8::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString IOPOSPINPad_1_8::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString IOPOSPINPad_1_8::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString IOPOSPINPad_1_8::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int IOPOSPINPad_1_8::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_8::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int IOPOSPINPad_1_8::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::ResetStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::RetrieveStatistics(QString& pStatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pStatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_8::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void IOPOSPINPad_1_8::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IOPOSPINPad_1_8::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IOPOSPINPad_1_8::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline int IOPOSPINPad_1_8::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_8::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline int IOPOSPINPad_1_8::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::UpdateStatistics(const QString& StatisticsBuffer)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&StatisticsBuffer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_8::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}


inline QString IOPOSPINPad_1_5::AccountNumber() const
{
    QVariant qax_result = property("AccountNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetAccountNumber(const QString& value){ setProperty("AccountNumber", QVariant(value)); }

inline QString IOPOSPINPad_1_5::AdditionalSecurityInformation() const
{
    QVariant qax_result = property("AdditionalSecurityInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline qlonglong IOPOSPINPad_1_5::Amount() const
{
    QVariant qax_result = property("Amount");
    Q_ASSERT(qax_result.isValid());
    return *(qlonglong*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetAmount(qlonglong value){ setProperty("Amount", QVariant(value)); }

inline QString IOPOSPINPad_1_5::AvailableLanguagesList() const
{
    QVariant qax_result = property("AvailableLanguagesList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::AvailablePromptsList() const
{
    QVariant qax_result = property("AvailablePromptsList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::BinaryConversion() const
{
    QVariant qax_result = property("BinaryConversion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetBinaryConversion(int value){ setProperty("BinaryConversion", QVariant(value)); }

inline int IOPOSPINPad_1_5::CapDisplay() const
{
    QVariant qax_result = property("CapDisplay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::CapKeyboard() const
{
    QVariant qax_result = property("CapKeyboard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::CapLanguage() const
{
    QVariant qax_result = property("CapLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::CapMACCalculation() const
{
    QVariant qax_result = property("CapMACCalculation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::CapPowerReporting() const
{
    QVariant qax_result = property("CapPowerReporting");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::CapTone() const
{
    QVariant qax_result = property("CapTone");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::CheckHealthText() const
{
    QVariant qax_result = property("CheckHealthText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::Claimed() const
{
    QVariant qax_result = property("Claimed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::ControlObjectDescription() const
{
    QVariant qax_result = property("ControlObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::ControlObjectVersion() const
{
    QVariant qax_result = property("ControlObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::DataCount() const
{
    QVariant qax_result = property("DataCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::DataEventEnabled() const
{
    QVariant qax_result = property("DataEventEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetDataEventEnabled(bool value){ setProperty("DataEventEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_5::DeviceDescription() const
{
    QVariant qax_result = property("DeviceDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::DeviceEnabled() const
{
    QVariant qax_result = property("DeviceEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetDeviceEnabled(bool value){ setProperty("DeviceEnabled", QVariant(value)); }

inline QString IOPOSPINPad_1_5::DeviceName() const
{
    QVariant qax_result = property("DeviceName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::EncryptedPIN() const
{
    QVariant qax_result = property("EncryptedPIN");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::FreezeEvents() const
{
    QVariant qax_result = property("FreezeEvents");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetFreezeEvents(bool value){ setProperty("FreezeEvents", QVariant(value)); }

inline int IOPOSPINPad_1_5::MaximumPINLength() const
{
    QVariant qax_result = property("MaximumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetMaximumPINLength(int value){ setProperty("MaximumPINLength", QVariant(value)); }

inline QString IOPOSPINPad_1_5::MerchantID() const
{
    QVariant qax_result = property("MerchantID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetMerchantID(const QString& value){ setProperty("MerchantID", QVariant(value)); }

inline int IOPOSPINPad_1_5::MinimumPINLength() const
{
    QVariant qax_result = property("MinimumPINLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetMinimumPINLength(int value){ setProperty("MinimumPINLength", QVariant(value)); }

inline int IOPOSPINPad_1_5::OpenResult() const
{
    QVariant qax_result = property("OpenResult");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IOPOSPINPad_1_5::PINEntryEnabled() const
{
    QVariant qax_result = property("PINEntryEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::PowerNotify() const
{
    QVariant qax_result = property("PowerNotify");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetPowerNotify(int value){ setProperty("PowerNotify", QVariant(value)); }

inline int IOPOSPINPad_1_5::PowerState() const
{
    QVariant qax_result = property("PowerState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::Prompt() const
{
    QVariant qax_result = property("Prompt");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetPrompt(int value){ setProperty("Prompt", QVariant(value)); }

inline int IOPOSPINPad_1_5::PromptLanguage() const
{
    QVariant qax_result = property("PromptLanguage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetPromptLanguage(int value){ setProperty("PromptLanguage", QVariant(value)); }

inline int IOPOSPINPad_1_5::ResultCode() const
{
    QVariant qax_result = property("ResultCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::ResultCodeExtended() const
{
    QVariant qax_result = property("ResultCodeExtended");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::ServiceObjectDescription() const
{
    QVariant qax_result = property("ServiceObjectDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::ServiceObjectVersion() const
{
    QVariant qax_result = property("ServiceObjectVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IOPOSPINPad_1_5::State() const
{
    QVariant qax_result = property("State");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IOPOSPINPad_1_5::TerminalID() const
{
    QVariant qax_result = property("TerminalID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTerminalID(const QString& value){ setProperty("TerminalID", QVariant(value)); }

inline QString IOPOSPINPad_1_5::Track1Data() const
{
    QVariant qax_result = property("Track1Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTrack1Data(const QString& value){ setProperty("Track1Data", QVariant(value)); }

inline QString IOPOSPINPad_1_5::Track2Data() const
{
    QVariant qax_result = property("Track2Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTrack2Data(const QString& value){ setProperty("Track2Data", QVariant(value)); }

inline QString IOPOSPINPad_1_5::Track3Data() const
{
    QVariant qax_result = property("Track3Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTrack3Data(const QString& value){ setProperty("Track3Data", QVariant(value)); }

inline QString IOPOSPINPad_1_5::Track4Data() const
{
    QVariant qax_result = property("Track4Data");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTrack4Data(const QString& value){ setProperty("Track4Data", QVariant(value)); }

inline int IOPOSPINPad_1_5::TransactionType() const
{
    QVariant qax_result = property("TransactionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IOPOSPINPad_1_5::SetTransactionType(int value){ setProperty("TransactionType", QVariant(value)); }

inline int IOPOSPINPad_1_5::BeginEFTTransaction(const QString& PINPadSystem, int TransactionHost)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&PINPadSystem, (void*)&TransactionHost};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::CheckHealth(int Level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::ClaimDevice(int Timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::ClearInput()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::ComputeMAC(const QString& InMsg, QString& pOutMsg)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&InMsg, (void*)&pOutMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::DirectIO(int Command, int& pData, QString& pString)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Command, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::EnablePINEntry()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::EndEFTTransaction(int CompletionCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&CompletionCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::Open(const QString& DeviceName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&DeviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::ReleaseDevice()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_5::SOData(int Status)
{
    void *_a[] = {0, (void*)&Status};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IOPOSPINPad_1_5::SODirectIO(int EventNumber, int& pData, QString& pString)
{
    void *_a[] = {0, (void*)&EventNumber, (void*)&pData, (void*)&pString};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IOPOSPINPad_1_5::SOError(int ResultCode, int ResultCodeExtended, int ErrorLocus, int& pErrorResponse)
{
    void *_a[] = {0, (void*)&ResultCode, (void*)&ResultCodeExtended, (void*)&ErrorLocus, (void*)&pErrorResponse};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void IOPOSPINPad_1_5::SOOutputCompleteDummy(int OutputID)
{
    void *_a[] = {0, (void*)&OutputID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline int IOPOSPINPad_1_5::SOProcessID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void IOPOSPINPad_1_5::SOStatusUpdate(int Data)
{
    void *_a[] = {0, (void*)&Data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline int IOPOSPINPad_1_5::UpdateKey(int KeyNum, const QString& Key)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&KeyNum, (void*)&Key};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int IOPOSPINPad_1_5::VerifyMAC(const QString& Message)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const OPOS::OPOSPINPad *t)
{ Q_ASSERT(!t); return new OPOS::OPOSPINPad; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSPINPad *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSPINPad; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSPINPad_1_10 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSPINPad_1_10; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSPINPad_1_9 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSPINPad_1_9; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSPINPad_1_8 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSPINPad_1_8; }

template<>
inline void *qMetaTypeConstructHelper(const OPOS::IOPOSPINPad_1_5 *t)
{ Q_ASSERT(!t); return new OPOS::IOPOSPINPad_1_5; }

#endif

