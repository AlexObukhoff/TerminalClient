/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSItemDispenser.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\ItemDispenser.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSItemDispenser[] = {

 // content:
       1,       // revision
       0,       // classname
       3,    10, // classinfo
       29,    16, // methods
       28,    161, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       24, 42, 
       68, 80, 
       99, 111, 

 // signals: signature, parameters, type, tag, flags
       135, 168, 194, 195, 5,
       196, 219, 224, 225, 5,
       226, 265, 287, 288, 5,
       289, 314, 319, 320, 5,
       321, 347, 362, 363, 5,

 // slots: signature, parameters, type, tag, flags
       364, 389, 410, 414, 9,
       415, 432, 438, 442, 9,
       443, 460, 468, 472, 9,
       473, 481, 482, 486, 9,
       487, 524, 549, 553, 9,
       554, 582, 604, 608, 9,
       609, 632, 652, 656, 9,
       657, 671, 682, 686, 9,
       687, 711, 733, 737, 9,
       738, 754, 755, 759, 9,
       760, 785, 802, 806, 9,
       807, 836, 854, 858, 9,
       859, 876, 883, 884, 9,
       885, 915, 941, 942, 9,
       943, 974, 1030, 1031, 9,
       1032, 1059, 1068, 1069, 9,
       1070, 1084, 1085, 1089, 9,
       1090, 1110, 1115, 1116, 9,
       1117, 1142, 1159, 1160, 9,
       1161, 1184, 1198, 1199, 9,
       1200, 1222, 1235, 1236, 9,
       1237, 1257, 1269, 1270, 9,
       1271, 1295, 1312, 1316, 9,
       1317, 1343, 1360, 1364, 9,

 // properties: name, type, flags
       1365, 1382, 0x02015003, 		 // int BinaryConversion
       1386, 1412, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1417, 1432, 0x01005001, 		 // bool CapEmptySensor
       1437, 1461, 0x01005001, 		 // bool CapIndividualSlotStatus
       1466, 1479, 0x01005001, 		 // bool CapJamSensor
       1484, 1503, 0x01005001, 		 // bool CapNearEmptySensor
       1508, 1526, 0x02005001, 		 // int CapPowerReporting
       1530, 1553, 0x01005001, 		 // bool CapStatisticsReporting
       1558, 1576, 0x01005001, 		 // bool CapUpdateFirmware
       1581, 1601, 0x01005001, 		 // bool CapUpdateStatistics
       1606, 1622, 0x0a005001, 		 // QString CheckHealthText
       1630, 1638, 0x01005001, 		 // bool Claimed
       1643, 1668, 0x0a005001, 		 // QString ControlObjectDescription
       1676, 1697, 0x02005001, 		 // int ControlObjectVersion
       1701, 1719, 0x0a005001, 		 // QString DeviceDescription
       1727, 1741, 0x01015003, 		 // bool DeviceEnabled
       1746, 1757, 0x0a005001, 		 // QString DeviceName
       1765, 1781, 0x02005001, 		 // int DispenserStatus
       1785, 1798, 0x01015003, 		 // bool FreezeEvents
       1803, 1812, 0x02005001, 		 // int MaxSlots
       1816, 1827, 0x02005001, 		 // int OpenResult
       1831, 1843, 0x02015003, 		 // int PowerNotify
       1847, 1858, 0x02005001, 		 // int PowerState
       1862, 1873, 0x02005001, 		 // int ResultCode
       1877, 1896, 0x02005001, 		 // int ResultCodeExtended
       1900, 1925, 0x0a005001, 		 // QString ServiceObjectDescription
       1933, 1954, 0x02005001, 		 // int ServiceObjectVersion
       1958, 1964, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSItemDispenser() {
    static const char stringdata0[] = {
    "OPOS::OPOSItemDispenser\0"
    "Event Interface 2\0_IOPOSItemDispenserEvents\0Interface 0\0IOPOSItemDispenser\0Interface 1\0IOPOSItemDispenser_1_12\0"
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0StatusUpdateEvent(int)\0Data\0\0"
    "\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AdjustItemCount(int,int)\0ItemCount,SlotNumber\0int\0\0CheckHealth(int)\0"
    "Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DispenseItem(int&,int)\0pNumItem,SlotNumber\0"
    "int\0\0Open(QString)\0DeviceName\0int\0\0ReadItemCount(int&,int)\0pItemCount,SlotNumber\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapEmptySensor\0bool\0CapIndividualSlotStatus\0bool\0CapJamSensor\0"
    "bool\0CapNearEmptySensor\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DispenserStatus\0int\0FreezeEvents\0bool\0MaxSlots\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSItemDispenser::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSItemDispenser(),
qt_meta_data_OPOS__OPOSItemDispenser }
};

void *OPOSItemDispenser::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSItemDispenser()))
        return static_cast<void*>(const_cast<OPOSItemDispenser*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSItemDispenser[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       27,    10, // methods
       29,    145, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       25, 64, 86, 87, 5,
       88, 113, 118, 119, 5,
       120, 146, 161, 162, 5,

 // slots: signature, parameters, type, tag, flags
       163, 188, 209, 213, 9,
       214, 231, 237, 241, 9,
       242, 259, 267, 271, 9,
       272, 280, 281, 285, 9,
       286, 323, 348, 352, 9,
       353, 381, 403, 407, 9,
       408, 431, 451, 455, 9,
       456, 470, 481, 485, 9,
       486, 510, 532, 536, 9,
       537, 553, 554, 558, 9,
       559, 584, 601, 605, 9,
       606, 635, 653, 657, 9,
       658, 675, 682, 683, 9,
       684, 714, 740, 741, 9,
       742, 773, 829, 830, 9,
       831, 858, 867, 868, 9,
       869, 883, 884, 888, 9,
       889, 909, 914, 915, 9,
       916, 941, 958, 959, 9,
       960, 983, 997, 998, 9,
       999, 1021, 1034, 1035, 9,
       1036, 1056, 1068, 1069, 9,
       1070, 1094, 1111, 1115, 9,
       1116, 1142, 1159, 1163, 9,

 // properties: name, type, flags
       1164, 1181, 0x02015003, 		 // int BinaryConversion
       1185, 1211, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1216, 1231, 0x01005001, 		 // bool CapEmptySensor
       1236, 1260, 0x01005001, 		 // bool CapIndividualSlotStatus
       1265, 1278, 0x01005001, 		 // bool CapJamSensor
       1283, 1302, 0x01005001, 		 // bool CapNearEmptySensor
       1307, 1325, 0x02005001, 		 // int CapPowerReporting
       1329, 1352, 0x01005001, 		 // bool CapStatisticsReporting
       1357, 1375, 0x01005001, 		 // bool CapUpdateFirmware
       1380, 1400, 0x01005001, 		 // bool CapUpdateStatistics
       1405, 1421, 0x0a005001, 		 // QString CheckHealthText
       1429, 1437, 0x01005001, 		 // bool Claimed
       1442, 1467, 0x0a005001, 		 // QString ControlObjectDescription
       1475, 1496, 0x02005001, 		 // int ControlObjectVersion
       1500, 1518, 0x0a005001, 		 // QString DeviceDescription
       1526, 1540, 0x01015003, 		 // bool DeviceEnabled
       1545, 1556, 0x0a005001, 		 // QString DeviceName
       1564, 1580, 0x02005001, 		 // int DispenserStatus
       1584, 1597, 0x01015003, 		 // bool FreezeEvents
       1602, 1611, 0x02005001, 		 // int MaxSlots
       1615, 1626, 0x02005001, 		 // int OpenResult
       1630, 1642, 0x02015003, 		 // int PowerNotify
       1646, 1657, 0x02005001, 		 // int PowerState
       1661, 1672, 0x02005001, 		 // int ResultCode
       1676, 1695, 0x02005001, 		 // int ResultCodeExtended
       1699, 1724, 0x0a005001, 		 // QString ServiceObjectDescription
       1732, 1753, 0x02005001, 		 // int ServiceObjectVersion
       1757, 1763, 0x02005001, 		 // int State
       1767, 1775, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSItemDispenser() {
    static const char stringdata0[] = {
    "OPOS::IOPOSItemDispenser\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AdjustItemCount(int,int)\0ItemCount,SlotNumber\0int\0\0CheckHealth(int)\0"
    "Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DispenseItem(int&,int)\0pNumItem,SlotNumber\0"
    "int\0\0Open(QString)\0DeviceName\0int\0\0ReadItemCount(int&,int)\0pItemCount,SlotNumber\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapEmptySensor\0bool\0CapIndividualSlotStatus\0bool\0CapJamSensor\0"
    "bool\0CapNearEmptySensor\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DispenserStatus\0int\0FreezeEvents\0bool\0MaxSlots\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSItemDispenser::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSItemDispenser(),
qt_meta_data_OPOS__IOPOSItemDispenser }
};

void *IOPOSItemDispenser::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSItemDispenser()))
        return static_cast<void*>(const_cast<IOPOSItemDispenser*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSItemDispenser_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       27,    10, // methods
       29,    145, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 193, 214, 218, 9,
       219, 236, 242, 246, 9,
       247, 264, 272, 276, 9,
       277, 285, 286, 290, 9,
       291, 328, 353, 357, 9,
       358, 386, 408, 412, 9,
       413, 436, 456, 460, 9,
       461, 475, 486, 490, 9,
       491, 515, 537, 541, 9,
       542, 558, 559, 563, 9,
       564, 589, 606, 610, 9,
       611, 640, 658, 662, 9,
       663, 680, 687, 688, 9,
       689, 719, 745, 746, 9,
       747, 778, 834, 835, 9,
       836, 863, 872, 873, 9,
       874, 888, 889, 893, 9,
       894, 914, 919, 920, 9,
       921, 946, 963, 964, 9,
       965, 988, 1002, 1003, 9,
       1004, 1026, 1039, 1040, 9,
       1041, 1061, 1073, 1074, 9,
       1075, 1099, 1116, 1120, 9,
       1121, 1147, 1164, 1168, 9,

 // properties: name, type, flags
       1169, 1186, 0x02015003, 		 // int BinaryConversion
       1190, 1216, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1221, 1236, 0x01005001, 		 // bool CapEmptySensor
       1241, 1265, 0x01005001, 		 // bool CapIndividualSlotStatus
       1270, 1283, 0x01005001, 		 // bool CapJamSensor
       1288, 1307, 0x01005001, 		 // bool CapNearEmptySensor
       1312, 1330, 0x02005001, 		 // int CapPowerReporting
       1334, 1357, 0x01005001, 		 // bool CapStatisticsReporting
       1362, 1380, 0x01005001, 		 // bool CapUpdateFirmware
       1385, 1405, 0x01005001, 		 // bool CapUpdateStatistics
       1410, 1426, 0x0a005001, 		 // QString CheckHealthText
       1434, 1442, 0x01005001, 		 // bool Claimed
       1447, 1472, 0x0a005001, 		 // QString ControlObjectDescription
       1480, 1501, 0x02005001, 		 // int ControlObjectVersion
       1505, 1523, 0x0a005001, 		 // QString DeviceDescription
       1531, 1545, 0x01015003, 		 // bool DeviceEnabled
       1550, 1561, 0x0a005001, 		 // QString DeviceName
       1569, 1585, 0x02005001, 		 // int DispenserStatus
       1589, 1602, 0x01015003, 		 // bool FreezeEvents
       1607, 1616, 0x02005001, 		 // int MaxSlots
       1620, 1631, 0x02005001, 		 // int OpenResult
       1635, 1647, 0x02015003, 		 // int PowerNotify
       1651, 1662, 0x02005001, 		 // int PowerState
       1666, 1677, 0x02005001, 		 // int ResultCode
       1681, 1700, 0x02005001, 		 // int ResultCodeExtended
       1704, 1729, 0x0a005001, 		 // QString ServiceObjectDescription
       1737, 1758, 0x02005001, 		 // int ServiceObjectVersion
       1762, 1768, 0x02005001, 		 // int State
       1772, 1780, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSItemDispenser_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSItemDispenser_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AdjustItemCount(int,int)\0ItemCount,SlotNumber\0int\0\0CheckHealth(int)\0"
    "Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DispenseItem(int&,int)\0pNumItem,SlotNumber\0"
    "int\0\0Open(QString)\0DeviceName\0int\0\0ReadItemCount(int&,int)\0pItemCount,SlotNumber\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOErrorDummy(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapEmptySensor\0bool\0CapIndividualSlotStatus\0bool\0CapJamSensor\0"
    "bool\0CapNearEmptySensor\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DispenserStatus\0int\0FreezeEvents\0bool\0MaxSlots\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSItemDispenser_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSItemDispenser_1_12(),
qt_meta_data_OPOS__IOPOSItemDispenser_1_12 }
};

void *IOPOSItemDispenser_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSItemDispenser_1_12()))
        return static_cast<void*>(const_cast<IOPOSItemDispenser_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

