/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSToneIndicator.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\ToneIndicator.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSToneIndicator[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       41,    22, // methods
       36,    227, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       24, 42, 
       68, 80, 
       99, 111, 
       135, 147, 
       170, 182, 
       205, 217, 

 // signals: signature, parameters, type, tag, flags
       240, 273, 299, 300, 5,
       301, 330, 386, 387, 5,
       388, 413, 422, 423, 5,
       424, 447, 452, 453, 5,
       454, 493, 515, 516, 5,
       517, 542, 547, 548, 5,
       549, 575, 590, 591, 5,

 // slots: signature, parameters, type, tag, flags
       592, 609, 615, 619, 9,
       620, 637, 645, 649, 9,
       650, 664, 665, 669, 9,
       670, 678, 679, 683, 9,
       684, 721, 746, 750, 9,
       751, 779, 801, 805, 9,
       806, 820, 831, 835, 9,
       836, 852, 853, 857, 9,
       858, 883, 900, 904, 9,
       905, 934, 952, 956, 9,
       957, 974, 981, 982, 9,
       983, 1013, 1039, 1040, 9,
       1041, 1067, 1123, 1124, 9,
       1125, 1147, 1156, 1157, 9,
       1158, 1172, 1173, 1177, 9,
       1178, 1198, 1203, 1204, 9,
       1205, 1224, 1234, 1235, 9,
       1236, 1261, 1278, 1279, 9,
       1280, 1303, 1317, 1318, 9,
       1319, 1341, 1354, 1355, 9,
       1356, 1378, 1392, 1393, 9,
       1394, 1413, 1424, 1425, 9,
       1426, 1447, 1460, 1461, 9,
       1462, 1482, 1494, 1495, 9,
       1496, 1518, 1532, 1533, 9,
       1534, 1553, 1564, 1565, 9,
       1566, 1586, 1598, 1599, 9,
       1600, 1622, 1636, 1637, 9,
       1638, 1657, 1668, 1669, 9,
       1670, 1690, 1702, 1703, 9,
       1704, 1719, 1749, 1753, 9,
       1754, 1771, 1772, 1776, 9,
       1777, 1801, 1818, 1822, 9,
       1823, 1849, 1866, 1870, 9,

 // properties: name, type, flags
       1871, 1881, 0x01015003, 		 // bool AsyncMode
       1886, 1903, 0x02015003, 		 // int BinaryConversion
       1907, 1933, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1938, 1948, 0x02005001, 		 // int CapMelody
       1952, 1961, 0x01005001, 		 // bool CapPitch
       1966, 1984, 0x02005001, 		 // int CapPowerReporting
       1988, 2011, 0x01005001, 		 // bool CapStatisticsReporting
       2016, 2034, 0x01005001, 		 // bool CapUpdateFirmware
       2039, 2059, 0x01005001, 		 // bool CapUpdateStatistics
       2064, 2074, 0x01005001, 		 // bool CapVolume
       2079, 2095, 0x0a005001, 		 // QString CheckHealthText
       2103, 2111, 0x01005001, 		 // bool Claimed
       2116, 2141, 0x0a005001, 		 // QString ControlObjectDescription
       2149, 2170, 0x02005001, 		 // int ControlObjectVersion
       2174, 2192, 0x0a005001, 		 // QString DeviceDescription
       2200, 2214, 0x01015003, 		 // bool DeviceEnabled
       2219, 2230, 0x0a005001, 		 // QString DeviceName
       2238, 2251, 0x01015003, 		 // bool FreezeEvents
       2256, 2270, 0x02015003, 		 // int InterToneWait
       2274, 2285, 0x02015003, 		 // int MelodyType
       2289, 2302, 0x02015003, 		 // int MelodyVolume
       2306, 2317, 0x02005001, 		 // int OpenResult
       2321, 2330, 0x02005001, 		 // int OutputID
       2334, 2346, 0x02015003, 		 // int PowerNotify
       2350, 2361, 0x02005001, 		 // int PowerState
       2365, 2376, 0x02005001, 		 // int ResultCode
       2380, 2399, 0x02005001, 		 // int ResultCodeExtended
       2403, 2428, 0x0a005001, 		 // QString ServiceObjectDescription
       2436, 2457, 0x02005001, 		 // int ServiceObjectVersion
       2461, 2467, 0x02005001, 		 // int State
       2471, 2485, 0x02015003, 		 // int Tone1Duration
       2489, 2500, 0x02015003, 		 // int Tone1Pitch
       2504, 2516, 0x02015003, 		 // int Tone1Volume
       2520, 2534, 0x02015003, 		 // int Tone2Duration
       2538, 2549, 0x02015003, 		 // int Tone2Pitch
       2553, 2565, 0x02015003, 		 // int Tone2Volume

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSToneIndicator() {
    static const char stringdata0[] = {
    "OPOS::OPOSToneIndicator\0"
    "Event Interface 6\0_IOPOSToneIndicatorEvents\0Interface 0\0IOPOSToneIndicator\0Interface 1\0IOPOSToneIndicator_1_13\0Interface 2\0IOPOSToneIndicator_1_9\0Interface 4\0IOPOSToneIndicator_1_8\0Interface 5\0IOPOSToneIndicator_1_5\0"
    ""
    "DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0OutputCompleteEvent(int)\0OutputID\0\0\0StatusUpdateEvent(int)\0"
    "Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0"
    "\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetMelodyType(int)\0MelodyType\0\0\0SetMelodyVolume(int)\0MelodyVolume\0\0\0SetPowerNotify(int)\0"
    "PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0"
    "Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0SoundImmediate()\0\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0"
    "int\0CapCompareFirmwareVersion\0bool\0CapMelody\0int\0CapPitch\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0"
    "bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0InterToneWait\0int\0MelodyType\0int\0MelodyVolume\0int\0OpenResult\0"
    "int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0int\0Tone1Pitch\0int\0Tone1Volume\0int\0"
    "Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSToneIndicator::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSToneIndicator(),
qt_meta_data_OPOS__OPOSToneIndicator }
};

void *OPOSToneIndicator::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSToneIndicator()))
        return static_cast<void*>(const_cast<OPOSToneIndicator*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       37,    10, // methods
       37,    195, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       25, 64, 86, 87, 5,
       88, 113, 118, 119, 5,
       120, 146, 161, 162, 5,

 // slots: signature, parameters, type, tag, flags
       163, 180, 186, 190, 9,
       191, 208, 216, 220, 9,
       221, 235, 236, 240, 9,
       241, 249, 250, 254, 9,
       255, 292, 317, 321, 9,
       322, 350, 372, 376, 9,
       377, 391, 402, 406, 9,
       407, 423, 424, 428, 9,
       429, 454, 471, 475, 9,
       476, 505, 523, 527, 9,
       528, 545, 552, 553, 9,
       554, 584, 610, 611, 9,
       612, 638, 694, 695, 9,
       696, 718, 727, 728, 9,
       729, 743, 744, 748, 9,
       749, 769, 774, 775, 9,
       776, 795, 805, 806, 9,
       807, 832, 849, 850, 9,
       851, 874, 888, 889, 9,
       890, 912, 925, 926, 9,
       927, 949, 963, 964, 9,
       965, 984, 995, 996, 9,
       997, 1018, 1031, 1032, 9,
       1033, 1053, 1065, 1066, 9,
       1067, 1089, 1103, 1104, 9,
       1105, 1124, 1135, 1136, 9,
       1137, 1157, 1169, 1170, 9,
       1171, 1193, 1207, 1208, 9,
       1209, 1228, 1239, 1240, 9,
       1241, 1261, 1273, 1274, 9,
       1275, 1290, 1320, 1324, 9,
       1325, 1342, 1343, 1347, 9,
       1348, 1372, 1389, 1393, 9,
       1394, 1420, 1437, 1441, 9,

 // properties: name, type, flags
       1442, 1452, 0x01015003, 		 // bool AsyncMode
       1457, 1474, 0x02015003, 		 // int BinaryConversion
       1478, 1504, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1509, 1519, 0x02005001, 		 // int CapMelody
       1523, 1532, 0x01005001, 		 // bool CapPitch
       1537, 1555, 0x02005001, 		 // int CapPowerReporting
       1559, 1582, 0x01005001, 		 // bool CapStatisticsReporting
       1587, 1605, 0x01005001, 		 // bool CapUpdateFirmware
       1610, 1630, 0x01005001, 		 // bool CapUpdateStatistics
       1635, 1645, 0x01005001, 		 // bool CapVolume
       1650, 1666, 0x0a005001, 		 // QString CheckHealthText
       1674, 1682, 0x01005001, 		 // bool Claimed
       1687, 1712, 0x0a005001, 		 // QString ControlObjectDescription
       1720, 1741, 0x02005001, 		 // int ControlObjectVersion
       1745, 1763, 0x0a005001, 		 // QString DeviceDescription
       1771, 1785, 0x01015003, 		 // bool DeviceEnabled
       1790, 1801, 0x0a005001, 		 // QString DeviceName
       1809, 1822, 0x01015003, 		 // bool FreezeEvents
       1827, 1841, 0x02015003, 		 // int InterToneWait
       1845, 1856, 0x02015003, 		 // int MelodyType
       1860, 1873, 0x02015003, 		 // int MelodyVolume
       1877, 1888, 0x02005001, 		 // int OpenResult
       1892, 1901, 0x02005001, 		 // int OutputID
       1905, 1917, 0x02015003, 		 // int PowerNotify
       1921, 1932, 0x02005001, 		 // int PowerState
       1936, 1947, 0x02005001, 		 // int ResultCode
       1951, 1970, 0x02005001, 		 // int ResultCodeExtended
       1974, 1999, 0x0a005001, 		 // QString ServiceObjectDescription
       2007, 2028, 0x02005001, 		 // int ServiceObjectVersion
       2032, 2038, 0x02005001, 		 // int State
       2042, 2056, 0x02015003, 		 // int Tone1Duration
       2060, 2071, 0x02015003, 		 // int Tone1Pitch
       2075, 2087, 0x02015003, 		 // int Tone1Volume
       2091, 2105, 0x02015003, 		 // int Tone2Duration
       2109, 2120, 0x02015003, 		 // int Tone2Pitch
       2124, 2136, 0x02015003, 		 // int Tone2Volume
       2140, 2148, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetMelodyType(int)\0MelodyType\0\0\0SetMelodyVolume(int)\0MelodyVolume\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0"
    "Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0"
    "SoundImmediate()\0\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapMelody\0int\0CapPitch\0"
    "bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0InterToneWait\0int\0MelodyType\0int\0MelodyVolume\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0"
    "int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0"
    "QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator(),
qt_meta_data_OPOS__IOPOSToneIndicator }
};

void *IOPOSToneIndicator::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator_1_13[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       37,    10, // methods
       37,    195, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 185, 191, 195, 9,
       196, 213, 221, 225, 9,
       226, 240, 241, 245, 9,
       246, 254, 255, 259, 9,
       260, 297, 322, 326, 9,
       327, 355, 377, 381, 9,
       382, 396, 407, 411, 9,
       412, 428, 429, 433, 9,
       434, 459, 476, 480, 9,
       481, 510, 528, 532, 9,
       533, 550, 557, 558, 9,
       559, 589, 615, 616, 9,
       617, 643, 699, 700, 9,
       701, 723, 732, 733, 9,
       734, 748, 749, 753, 9,
       754, 774, 779, 780, 9,
       781, 800, 810, 811, 9,
       812, 837, 854, 855, 9,
       856, 879, 893, 894, 9,
       895, 917, 930, 931, 9,
       932, 954, 968, 969, 9,
       970, 989, 1000, 1001, 9,
       1002, 1023, 1036, 1037, 9,
       1038, 1058, 1070, 1071, 9,
       1072, 1094, 1108, 1109, 9,
       1110, 1129, 1140, 1141, 9,
       1142, 1162, 1174, 1175, 9,
       1176, 1198, 1212, 1213, 9,
       1214, 1233, 1244, 1245, 9,
       1246, 1266, 1278, 1279, 9,
       1280, 1295, 1325, 1329, 9,
       1330, 1347, 1348, 1352, 9,
       1353, 1377, 1394, 1398, 9,
       1399, 1425, 1442, 1446, 9,

 // properties: name, type, flags
       1447, 1457, 0x01015003, 		 // bool AsyncMode
       1462, 1479, 0x02015003, 		 // int BinaryConversion
       1483, 1509, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1514, 1524, 0x02005001, 		 // int CapMelody
       1528, 1537, 0x01005001, 		 // bool CapPitch
       1542, 1560, 0x02005001, 		 // int CapPowerReporting
       1564, 1587, 0x01005001, 		 // bool CapStatisticsReporting
       1592, 1610, 0x01005001, 		 // bool CapUpdateFirmware
       1615, 1635, 0x01005001, 		 // bool CapUpdateStatistics
       1640, 1650, 0x01005001, 		 // bool CapVolume
       1655, 1671, 0x0a005001, 		 // QString CheckHealthText
       1679, 1687, 0x01005001, 		 // bool Claimed
       1692, 1717, 0x0a005001, 		 // QString ControlObjectDescription
       1725, 1746, 0x02005001, 		 // int ControlObjectVersion
       1750, 1768, 0x0a005001, 		 // QString DeviceDescription
       1776, 1790, 0x01015003, 		 // bool DeviceEnabled
       1795, 1806, 0x0a005001, 		 // QString DeviceName
       1814, 1827, 0x01015003, 		 // bool FreezeEvents
       1832, 1846, 0x02015003, 		 // int InterToneWait
       1850, 1861, 0x02015003, 		 // int MelodyType
       1865, 1878, 0x02015003, 		 // int MelodyVolume
       1882, 1893, 0x02005001, 		 // int OpenResult
       1897, 1906, 0x02005001, 		 // int OutputID
       1910, 1922, 0x02015003, 		 // int PowerNotify
       1926, 1937, 0x02005001, 		 // int PowerState
       1941, 1952, 0x02005001, 		 // int ResultCode
       1956, 1975, 0x02005001, 		 // int ResultCodeExtended
       1979, 2004, 0x0a005001, 		 // QString ServiceObjectDescription
       2012, 2033, 0x02005001, 		 // int ServiceObjectVersion
       2037, 2043, 0x02005001, 		 // int State
       2047, 2061, 0x02015003, 		 // int Tone1Duration
       2065, 2076, 0x02015003, 		 // int Tone1Pitch
       2080, 2092, 0x02015003, 		 // int Tone1Volume
       2096, 2110, 0x02015003, 		 // int Tone2Duration
       2114, 2125, 0x02015003, 		 // int Tone2Pitch
       2129, 2141, 0x02015003, 		 // int Tone2Volume
       2145, 2153, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_13() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator_1_13\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetMelodyType(int)\0MelodyType\0\0\0SetMelodyVolume(int)\0MelodyVolume\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0"
    "Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0"
    "SoundImmediate()\0\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapMelody\0int\0CapPitch\0"
    "bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0InterToneWait\0int\0MelodyType\0int\0MelodyVolume\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0"
    "int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0"
    "QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator_1_13::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_13(),
qt_meta_data_OPOS__IOPOSToneIndicator_1_13 }
};

void *IOPOSToneIndicator_1_13::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_13()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator_1_13*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       35,    10, // methods
       34,    185, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 184, 190, 194, 9,
       195, 212, 220, 224, 9,
       225, 239, 240, 244, 9,
       245, 253, 254, 258, 9,
       259, 296, 321, 325, 9,
       326, 354, 376, 380, 9,
       381, 395, 406, 410, 9,
       411, 427, 428, 432, 9,
       433, 458, 475, 479, 9,
       480, 509, 527, 531, 9,
       532, 549, 556, 557, 9,
       558, 588, 614, 615, 9,
       616, 642, 698, 699, 9,
       700, 722, 731, 732, 9,
       733, 747, 748, 752, 9,
       753, 773, 778, 779, 9,
       780, 799, 809, 810, 9,
       811, 836, 853, 854, 9,
       855, 878, 892, 893, 9,
       894, 916, 929, 930, 9,
       931, 953, 967, 968, 9,
       969, 989, 1001, 1002, 9,
       1003, 1025, 1039, 1040, 9,
       1041, 1060, 1071, 1072, 9,
       1073, 1093, 1105, 1106, 9,
       1107, 1129, 1143, 1144, 9,
       1145, 1164, 1175, 1176, 9,
       1177, 1197, 1209, 1210, 9,
       1211, 1226, 1256, 1260, 9,
       1261, 1278, 1279, 1283, 9,
       1284, 1308, 1325, 1329, 9,
       1330, 1356, 1373, 1377, 9,

 // properties: name, type, flags
       1378, 1388, 0x01015003, 		 // bool AsyncMode
       1393, 1410, 0x02015003, 		 // int BinaryConversion
       1414, 1440, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1445, 1454, 0x01005001, 		 // bool CapPitch
       1459, 1477, 0x02005001, 		 // int CapPowerReporting
       1481, 1504, 0x01005001, 		 // bool CapStatisticsReporting
       1509, 1527, 0x01005001, 		 // bool CapUpdateFirmware
       1532, 1552, 0x01005001, 		 // bool CapUpdateStatistics
       1557, 1567, 0x01005001, 		 // bool CapVolume
       1572, 1588, 0x0a005001, 		 // QString CheckHealthText
       1596, 1604, 0x01005001, 		 // bool Claimed
       1609, 1634, 0x0a005001, 		 // QString ControlObjectDescription
       1642, 1663, 0x02005001, 		 // int ControlObjectVersion
       1667, 1685, 0x0a005001, 		 // QString DeviceDescription
       1693, 1707, 0x01015003, 		 // bool DeviceEnabled
       1712, 1723, 0x0a005001, 		 // QString DeviceName
       1731, 1744, 0x01015003, 		 // bool FreezeEvents
       1749, 1763, 0x02015003, 		 // int InterToneWait
       1767, 1778, 0x02005001, 		 // int OpenResult
       1782, 1791, 0x02005001, 		 // int OutputID
       1795, 1807, 0x02015003, 		 // int PowerNotify
       1811, 1822, 0x02005001, 		 // int PowerState
       1826, 1837, 0x02005001, 		 // int ResultCode
       1841, 1860, 0x02005001, 		 // int ResultCodeExtended
       1864, 1889, 0x0a005001, 		 // QString ServiceObjectDescription
       1897, 1918, 0x02005001, 		 // int ServiceObjectVersion
       1922, 1928, 0x02005001, 		 // int State
       1932, 1946, 0x02015003, 		 // int Tone1Duration
       1950, 1961, 0x02015003, 		 // int Tone1Pitch
       1965, 1977, 0x02015003, 		 // int Tone1Volume
       1981, 1995, 0x02015003, 		 // int Tone2Duration
       1999, 2010, 0x02015003, 		 // int Tone2Pitch
       2014, 2026, 0x02015003, 		 // int Tone2Volume
       2030, 2038, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0"
    "Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0SoundImmediate()\0\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0"
    "UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPitch\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0"
    "CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0"
    "bool\0InterToneWait\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0"
    "int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9(),
qt_meta_data_OPOS__IOPOSToneIndicator_1_9 }
};

void *IOPOSToneIndicator_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       33,    10, // methods
       32,    175, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 184, 190, 194, 9,
       195, 212, 220, 224, 9,
       225, 239, 240, 244, 9,
       245, 253, 254, 258, 9,
       259, 287, 309, 313, 9,
       314, 328, 339, 343, 9,
       344, 360, 361, 365, 9,
       366, 391, 408, 412, 9,
       413, 442, 460, 464, 9,
       465, 482, 489, 490, 9,
       491, 521, 547, 548, 9,
       549, 575, 631, 632, 9,
       633, 655, 664, 665, 9,
       666, 680, 681, 685, 9,
       686, 706, 711, 712, 9,
       713, 732, 742, 743, 9,
       744, 769, 786, 787, 9,
       788, 811, 825, 826, 9,
       827, 849, 862, 863, 9,
       864, 886, 900, 901, 9,
       902, 922, 934, 935, 9,
       936, 958, 972, 973, 9,
       974, 993, 1004, 1005, 9,
       1006, 1026, 1038, 1039, 9,
       1040, 1062, 1076, 1077, 9,
       1078, 1097, 1108, 1109, 9,
       1110, 1130, 1142, 1143, 9,
       1144, 1159, 1189, 1193, 9,
       1194, 1211, 1212, 1216, 9,
       1217, 1243, 1260, 1264, 9,

 // properties: name, type, flags
       1265, 1275, 0x01015003, 		 // bool AsyncMode
       1280, 1297, 0x02015003, 		 // int BinaryConversion
       1301, 1310, 0x01005001, 		 // bool CapPitch
       1315, 1333, 0x02005001, 		 // int CapPowerReporting
       1337, 1360, 0x01005001, 		 // bool CapStatisticsReporting
       1365, 1385, 0x01005001, 		 // bool CapUpdateStatistics
       1390, 1400, 0x01005001, 		 // bool CapVolume
       1405, 1421, 0x0a005001, 		 // QString CheckHealthText
       1429, 1437, 0x01005001, 		 // bool Claimed
       1442, 1467, 0x0a005001, 		 // QString ControlObjectDescription
       1475, 1496, 0x02005001, 		 // int ControlObjectVersion
       1500, 1518, 0x0a005001, 		 // QString DeviceDescription
       1526, 1540, 0x01015003, 		 // bool DeviceEnabled
       1545, 1556, 0x0a005001, 		 // QString DeviceName
       1564, 1577, 0x01015003, 		 // bool FreezeEvents
       1582, 1596, 0x02015003, 		 // int InterToneWait
       1600, 1611, 0x02005001, 		 // int OpenResult
       1615, 1624, 0x02005001, 		 // int OutputID
       1628, 1640, 0x02015003, 		 // int PowerNotify
       1644, 1655, 0x02005001, 		 // int PowerState
       1659, 1670, 0x02005001, 		 // int ResultCode
       1674, 1693, 0x02005001, 		 // int ResultCodeExtended
       1697, 1722, 0x0a005001, 		 // QString ServiceObjectDescription
       1730, 1751, 0x02005001, 		 // int ServiceObjectVersion
       1755, 1761, 0x02005001, 		 // int State
       1765, 1779, 0x02015003, 		 // int Tone1Duration
       1783, 1794, 0x02015003, 		 // int Tone1Pitch
       1798, 1810, 0x02015003, 		 // int Tone1Volume
       1814, 1828, 0x02015003, 		 // int Tone2Duration
       1832, 1843, 0x02015003, 		 // int Tone2Pitch
       1847, 1859, 0x02015003, 		 // int Tone2Volume
       1863, 1871, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0"
    "pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0Tone2Duration\0"
    "\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0SoundImmediate()\0\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0"
    "BinaryConversion\0int\0CapPitch\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0InterToneWait\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_8(),
qt_meta_data_OPOS__IOPOSToneIndicator_1_8 }
};

void *IOPOSToneIndicator_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_8()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       30,    10, // methods
       30,    160, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 184, 190, 194, 9,
       195, 212, 220, 224, 9,
       225, 239, 240, 244, 9,
       245, 253, 254, 258, 9,
       259, 287, 309, 313, 9,
       314, 328, 339, 343, 9,
       344, 360, 361, 365, 9,
       366, 383, 390, 391, 9,
       392, 422, 448, 449, 9,
       450, 476, 532, 533, 9,
       534, 556, 565, 566, 9,
       567, 581, 582, 586, 9,
       587, 607, 612, 613, 9,
       614, 633, 643, 644, 9,
       645, 670, 687, 688, 9,
       689, 712, 726, 727, 9,
       728, 750, 763, 764, 9,
       765, 787, 801, 802, 9,
       803, 823, 835, 836, 9,
       837, 859, 873, 874, 9,
       875, 894, 905, 906, 9,
       907, 927, 939, 940, 9,
       941, 963, 977, 978, 9,
       979, 998, 1009, 1010, 9,
       1011, 1031, 1043, 1044, 9,
       1045, 1060, 1090, 1094, 9,
       1095, 1112, 1113, 1117, 9,

 // properties: name, type, flags
       1118, 1128, 0x01015003, 		 // bool AsyncMode
       1133, 1150, 0x02015003, 		 // int BinaryConversion
       1154, 1163, 0x01005001, 		 // bool CapPitch
       1168, 1186, 0x02005001, 		 // int CapPowerReporting
       1190, 1200, 0x01005001, 		 // bool CapVolume
       1205, 1221, 0x0a005001, 		 // QString CheckHealthText
       1229, 1237, 0x01005001, 		 // bool Claimed
       1242, 1267, 0x0a005001, 		 // QString ControlObjectDescription
       1275, 1296, 0x02005001, 		 // int ControlObjectVersion
       1300, 1318, 0x0a005001, 		 // QString DeviceDescription
       1326, 1340, 0x01015003, 		 // bool DeviceEnabled
       1345, 1356, 0x0a005001, 		 // QString DeviceName
       1364, 1377, 0x01015003, 		 // bool FreezeEvents
       1382, 1396, 0x02015003, 		 // int InterToneWait
       1400, 1411, 0x02005001, 		 // int OpenResult
       1415, 1424, 0x02005001, 		 // int OutputID
       1428, 1440, 0x02015003, 		 // int PowerNotify
       1444, 1455, 0x02005001, 		 // int PowerState
       1459, 1470, 0x02005001, 		 // int ResultCode
       1474, 1493, 0x02005001, 		 // int ResultCodeExtended
       1497, 1522, 0x0a005001, 		 // QString ServiceObjectDescription
       1530, 1551, 0x02005001, 		 // int ServiceObjectVersion
       1555, 1561, 0x02005001, 		 // int State
       1565, 1579, 0x02015003, 		 // int Tone1Duration
       1583, 1594, 0x02015003, 		 // int Tone1Pitch
       1598, 1610, 0x02015003, 		 // int Tone1Volume
       1614, 1628, 0x02015003, 		 // int Tone2Duration
       1632, 1643, 0x02015003, 		 // int Tone2Pitch
       1647, 1659, 0x02015003, 		 // int Tone2Volume
       1663, 1671, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0"
    "\0\0SetTone1Pitch(int)\0Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0"
    "int\0\0SoundImmediate()\0\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0int\0CapPitch\0bool\0CapPowerReporting\0int\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0InterToneWait\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0"
    "ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_5(),
qt_meta_data_OPOS__IOPOSToneIndicator_1_5 }
};

void *IOPOSToneIndicator_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_5()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSToneIndicator_1_9_zz[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       35,    10, // methods
       34,    185, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 187, 193, 197, 9,
       198, 215, 223, 227, 9,
       228, 242, 243, 247, 9,
       248, 256, 257, 261, 9,
       262, 299, 324, 328, 9,
       329, 357, 379, 383, 9,
       384, 398, 409, 413, 9,
       414, 430, 431, 435, 9,
       436, 461, 478, 482, 9,
       483, 512, 530, 534, 9,
       535, 552, 559, 560, 9,
       561, 591, 617, 618, 9,
       619, 645, 701, 702, 9,
       703, 725, 734, 735, 9,
       736, 750, 751, 755, 9,
       756, 776, 781, 782, 9,
       783, 802, 812, 813, 9,
       814, 839, 856, 857, 9,
       858, 881, 895, 896, 9,
       897, 919, 932, 933, 9,
       934, 956, 970, 971, 9,
       972, 992, 1004, 1005, 9,
       1006, 1028, 1042, 1043, 9,
       1044, 1063, 1074, 1075, 9,
       1076, 1096, 1108, 1109, 9,
       1110, 1132, 1146, 1147, 9,
       1148, 1167, 1178, 1179, 9,
       1180, 1200, 1212, 1213, 9,
       1214, 1229, 1259, 1263, 9,
       1264, 1281, 1282, 1286, 9,
       1287, 1311, 1328, 1332, 9,
       1333, 1359, 1376, 1380, 9,

 // properties: name, type, flags
       1381, 1391, 0x01015003, 		 // bool AsyncMode
       1396, 1413, 0x02015003, 		 // int BinaryConversion
       1417, 1443, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1448, 1457, 0x01005001, 		 // bool CapPitch
       1462, 1480, 0x02005001, 		 // int CapPowerReporting
       1484, 1507, 0x01005001, 		 // bool CapStatisticsReporting
       1512, 1530, 0x01005001, 		 // bool CapUpdateFirmware
       1535, 1555, 0x01005001, 		 // bool CapUpdateStatistics
       1560, 1570, 0x01005001, 		 // bool CapVolume
       1575, 1591, 0x0a005001, 		 // QString CheckHealthText
       1599, 1607, 0x01005001, 		 // bool Claimed
       1612, 1637, 0x0a005001, 		 // QString ControlObjectDescription
       1645, 1666, 0x02005001, 		 // int ControlObjectVersion
       1670, 1688, 0x0a005001, 		 // QString DeviceDescription
       1696, 1710, 0x01015003, 		 // bool DeviceEnabled
       1715, 1726, 0x0a005001, 		 // QString DeviceName
       1734, 1747, 0x01015003, 		 // bool FreezeEvents
       1752, 1766, 0x02015003, 		 // int InterToneWait
       1770, 1781, 0x02005001, 		 // int OpenResult
       1785, 1794, 0x02005001, 		 // int OutputID
       1798, 1810, 0x02015003, 		 // int PowerNotify
       1814, 1825, 0x02005001, 		 // int PowerState
       1829, 1840, 0x02005001, 		 // int ResultCode
       1844, 1863, 0x02005001, 		 // int ResultCodeExtended
       1867, 1892, 0x0a005001, 		 // QString ServiceObjectDescription
       1900, 1921, 0x02005001, 		 // int ServiceObjectVersion
       1925, 1931, 0x02005001, 		 // int State
       1935, 1949, 0x02015003, 		 // int Tone1Duration
       1953, 1964, 0x02015003, 		 // int Tone1Pitch
       1968, 1980, 0x02015003, 		 // int Tone1Volume
       1984, 1998, 0x02015003, 		 // int Tone2Duration
       2002, 2013, 0x02015003, 		 // int Tone2Pitch
       2017, 2029, 0x02015003, 		 // int Tone2Volume
       2033, 2041, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9_zz() {
    static const char stringdata0[] = {
    "OPOS::IOPOSToneIndicator_1_9_zz\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearOutput()\0"
    "\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SODataDummy(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAsyncMode(bool)\0AsyncMode\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetInterToneWait(int)\0InterToneWait\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetTone1Duration(int)\0Tone1Duration\0\0\0SetTone1Pitch(int)\0Tone1Pitch\0\0\0SetTone1Volume(int)\0Tone1Volume\0\0\0SetTone2Duration(int)\0"
    "Tone2Duration\0\0\0SetTone2Pitch(int)\0Tone2Pitch\0\0\0SetTone2Volume(int)\0Tone2Volume\0\0\0Sound(int,int)\0NumberOfCycles,InterSoundWait\0int\0\0SoundImmediate()\0\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0"
    "UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AsyncMode\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPitch\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0"
    "CapUpdateStatistics\0bool\0CapVolume\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0"
    "bool\0InterToneWait\0int\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0Tone1Duration\0"
    "int\0Tone1Pitch\0int\0Tone1Volume\0int\0Tone2Duration\0int\0Tone2Pitch\0int\0Tone2Volume\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSToneIndicator_1_9_zz::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9_zz(),
qt_meta_data_OPOS__IOPOSToneIndicator_1_9_zz }
};

void *IOPOSToneIndicator_1_9_zz::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSToneIndicator_1_9_zz()))
        return static_cast<void*>(const_cast<IOPOSToneIndicator_1_9_zz*>(this));
    return QAxObject::qt_metacast(_clname);
}

