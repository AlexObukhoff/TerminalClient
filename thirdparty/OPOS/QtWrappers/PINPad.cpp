/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSPINPad.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\PINPad.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSPINPad[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       50,    22, // methods
       47,    272, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       17, 35, 
       54, 66, 
       78, 90, 
       107, 119, 
       135, 147, 
       163, 175, 

 // signals: signature, parameters, type, tag, flags
       191, 206, 213, 214, 5,
       215, 248, 274, 275, 5,
       276, 305, 361, 362, 5,
       363, 386, 391, 392, 5,
       393, 432, 454, 455, 5,
       456, 481, 486, 487, 5,
       488, 514, 529, 530, 5,

 // slots: signature, parameters, type, tag, flags
       531, 564, 593, 597, 9,
       598, 615, 621, 625, 9,
       626, 643, 651, 655, 9,
       656, 669, 670, 674, 9,
       675, 698, 699, 703, 9,
       704, 712, 713, 717, 9,
       718, 755, 780, 784, 9,
       785, 814, 828, 832, 9,
       833, 861, 883, 887, 9,
       888, 905, 906, 910, 9,
       911, 934, 949, 953, 9,
       954, 968, 979, 983, 9,
       984, 1000, 1001, 1005, 9,
       1006, 1031, 1048, 1052, 9,
       1053, 1082, 1100, 1104, 9,
       1105, 1117, 1124, 1125, 9,
       1126, 1156, 1182, 1183, 9,
       1184, 1210, 1266, 1267, 9,
       1268, 1295, 1304, 1305, 9,
       1306, 1320, 1321, 1325, 9,
       1326, 1346, 1351, 1352, 9,
       1353, 1379, 1393, 1394, 9,
       1395, 1416, 1423, 1424, 9,
       1425, 1450, 1467, 1468, 9,
       1469, 1495, 1512, 1513, 9,
       1514, 1537, 1551, 1552, 9,
       1553, 1575, 1588, 1589, 9,
       1590, 1615, 1632, 1633, 9,
       1634, 1657, 1668, 1669, 9,
       1670, 1695, 1712, 1713, 9,
       1714, 1734, 1746, 1747, 9,
       1748, 1763, 1770, 1771, 9,
       1772, 1795, 1810, 1811, 9,
       1812, 1835, 1846, 1847, 9,
       1848, 1871, 1882, 1883, 9,
       1884, 1907, 1918, 1919, 9,
       1920, 1943, 1954, 1955, 9,
       1956, 1979, 1990, 1991, 9,
       1992, 2016, 2032, 2033, 9,
       2034, 2058, 2075, 2079, 9,
       2080, 2103, 2114, 2118, 9,
       2119, 2145, 2162, 2166, 9,
       2167, 2186, 2194, 2198, 9,

 // properties: name, type, flags
       2199, 2213, 0x0a015003, 		 // QString AccountNumber
       2221, 2251, 0x0a005001, 		 // QString AdditionalSecurityInformation
       2259, 2266, 0x04015003, 		 // qlonglong Amount
       2276, 2299, 0x0a005001, 		 // QString AvailableLanguagesList
       2307, 2328, 0x0a005001, 		 // QString AvailablePromptsList
       2336, 2353, 0x02015003, 		 // int BinaryConversion
       2357, 2383, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2388, 2399, 0x02005001, 		 // int CapDisplay
       2403, 2415, 0x01005001, 		 // bool CapKeyboard
       2420, 2432, 0x02005001, 		 // int CapLanguage
       2436, 2454, 0x01005001, 		 // bool CapMACCalculation
       2459, 2477, 0x02005001, 		 // int CapPowerReporting
       2481, 2504, 0x01005001, 		 // bool CapStatisticsReporting
       2509, 2517, 0x01005001, 		 // bool CapTone
       2522, 2540, 0x01005001, 		 // bool CapUpdateFirmware
       2545, 2565, 0x01005001, 		 // bool CapUpdateStatistics
       2570, 2586, 0x0a005001, 		 // QString CheckHealthText
       2594, 2602, 0x01005001, 		 // bool Claimed
       2607, 2632, 0x0a005001, 		 // QString ControlObjectDescription
       2640, 2661, 0x02005001, 		 // int ControlObjectVersion
       2665, 2675, 0x02005001, 		 // int DataCount
       2679, 2696, 0x01015003, 		 // bool DataEventEnabled
       2701, 2719, 0x0a005001, 		 // QString DeviceDescription
       2727, 2741, 0x01015003, 		 // bool DeviceEnabled
       2746, 2757, 0x0a005001, 		 // QString DeviceName
       2765, 2778, 0x0a005001, 		 // QString EncryptedPIN
       2786, 2799, 0x01015003, 		 // bool FreezeEvents
       2804, 2821, 0x02015003, 		 // int MaximumPINLength
       2825, 2836, 0x0a015003, 		 // QString MerchantID
       2844, 2861, 0x02015003, 		 // int MinimumPINLength
       2865, 2876, 0x02005001, 		 // int OpenResult
       2880, 2896, 0x01005001, 		 // bool PINEntryEnabled
       2901, 2913, 0x02015003, 		 // int PowerNotify
       2917, 2928, 0x02005001, 		 // int PowerState
       2932, 2939, 0x02015003, 		 // int Prompt
       2943, 2958, 0x02015003, 		 // int PromptLanguage
       2962, 2973, 0x02005001, 		 // int ResultCode
       2977, 2996, 0x02005001, 		 // int ResultCodeExtended
       3000, 3025, 0x0a005001, 		 // QString ServiceObjectDescription
       3033, 3054, 0x02005001, 		 // int ServiceObjectVersion
       3058, 3064, 0x02005001, 		 // int State
       3068, 3079, 0x0a015003, 		 // QString TerminalID
       3087, 3098, 0x0a015003, 		 // QString Track1Data
       3106, 3117, 0x0a015003, 		 // QString Track2Data
       3125, 3136, 0x0a015003, 		 // QString Track3Data
       3144, 3155, 0x0a015003, 		 // QString Track4Data
       3163, 3179, 0x02015003, 		 // int TransactionType

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSPINPad() {
    static const char stringdata0[] = {
    "OPOS::OPOSPINPad\0"
    "Event Interface 5\0_IOPOSPINPadEvents\0Interface 0\0IOPOSPINPad\0Interface 1\0IOPOSPINPad_1_10\0Interface 2\0IOPOSPINPad_1_9\0Interface 3\0IOPOSPINPad_1_8\0Interface 4\0IOPOSPINPad_1_5\0"
    "DataEvent(int)\0Status\0\0\0DirectIOEvent(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0"
    "\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0"
    "\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0ComputeMAC(QString,QString&)\0InMsg,pOutMsg\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EnablePINEntry()\0\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0"
    "pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0"
    "OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0\0\0SetMerchantID(QString)\0MerchantID\0\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0"
    "\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0TerminalID\0\0\0SetTrack1Data(QString)\0Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0"
    "\0\0SetTrack3Data(QString)\0Track3Data\0\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateKey(int,QString)\0KeyNum,Key\0int\0\0"
    "UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0AvailableLanguagesList\0QString\0AvailablePromptsList\0"
    "QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapTone\0bool\0CapUpdateFirmware\0"
    "bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0OpenResult\0int\0PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0"
    "PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TerminalID\0QString\0Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0"
    "Track4Data\0QString\0TransactionType\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSPINPad::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSPINPad(),
qt_meta_data_OPOS__OPOSPINPad }
};

void *OPOSPINPad::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSPINPad()))
        return static_cast<void*>(const_cast<OPOSPINPad*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPINPad[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       46,    10, // methods
       48,    240, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       18, 57, 79, 80, 5,
       81, 106, 111, 112, 5,
       113, 139, 154, 155, 5,

 // slots: signature, parameters, type, tag, flags
       156, 189, 218, 222, 9,
       223, 240, 246, 250, 9,
       251, 268, 276, 280, 9,
       281, 294, 295, 299, 9,
       300, 323, 324, 328, 9,
       329, 337, 338, 342, 9,
       343, 380, 405, 409, 9,
       410, 439, 453, 457, 9,
       458, 486, 508, 512, 9,
       513, 530, 531, 535, 9,
       536, 559, 574, 578, 9,
       579, 593, 604, 608, 9,
       609, 625, 626, 630, 9,
       631, 656, 673, 677, 9,
       678, 707, 725, 729, 9,
       730, 742, 749, 750, 9,
       751, 781, 807, 808, 9,
       809, 835, 891, 892, 9,
       893, 920, 929, 930, 9,
       931, 945, 946, 950, 9,
       951, 971, 976, 977, 9,
       978, 1004, 1018, 1019, 9,
       1020, 1041, 1048, 1049, 9,
       1050, 1075, 1092, 1093, 9,
       1094, 1120, 1137, 1138, 9,
       1139, 1162, 1176, 1177, 9,
       1178, 1200, 1213, 1214, 9,
       1215, 1240, 1257, 1258, 9,
       1259, 1282, 1293, 1294, 9,
       1295, 1320, 1337, 1338, 9,
       1339, 1359, 1371, 1372, 9,
       1373, 1388, 1395, 1396, 9,
       1397, 1420, 1435, 1436, 9,
       1437, 1460, 1471, 1472, 9,
       1473, 1496, 1507, 1508, 9,
       1509, 1532, 1543, 1544, 9,
       1545, 1568, 1579, 1580, 9,
       1581, 1604, 1615, 1616, 9,
       1617, 1641, 1657, 1658, 9,
       1659, 1683, 1700, 1704, 9,
       1705, 1728, 1739, 1743, 9,
       1744, 1770, 1787, 1791, 9,
       1792, 1811, 1819, 1823, 9,

 // properties: name, type, flags
       1824, 1838, 0x0a015003, 		 // QString AccountNumber
       1846, 1876, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1884, 1891, 0x04015003, 		 // qlonglong Amount
       1901, 1924, 0x0a005001, 		 // QString AvailableLanguagesList
       1932, 1953, 0x0a005001, 		 // QString AvailablePromptsList
       1961, 1978, 0x02015003, 		 // int BinaryConversion
       1982, 2008, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2013, 2024, 0x02005001, 		 // int CapDisplay
       2028, 2040, 0x01005001, 		 // bool CapKeyboard
       2045, 2057, 0x02005001, 		 // int CapLanguage
       2061, 2079, 0x01005001, 		 // bool CapMACCalculation
       2084, 2102, 0x02005001, 		 // int CapPowerReporting
       2106, 2129, 0x01005001, 		 // bool CapStatisticsReporting
       2134, 2142, 0x01005001, 		 // bool CapTone
       2147, 2165, 0x01005001, 		 // bool CapUpdateFirmware
       2170, 2190, 0x01005001, 		 // bool CapUpdateStatistics
       2195, 2211, 0x0a005001, 		 // QString CheckHealthText
       2219, 2227, 0x01005001, 		 // bool Claimed
       2232, 2257, 0x0a005001, 		 // QString ControlObjectDescription
       2265, 2286, 0x02005001, 		 // int ControlObjectVersion
       2290, 2300, 0x02005001, 		 // int DataCount
       2304, 2321, 0x01015003, 		 // bool DataEventEnabled
       2326, 2344, 0x0a005001, 		 // QString DeviceDescription
       2352, 2366, 0x01015003, 		 // bool DeviceEnabled
       2371, 2382, 0x0a005001, 		 // QString DeviceName
       2390, 2403, 0x0a005001, 		 // QString EncryptedPIN
       2411, 2424, 0x01015003, 		 // bool FreezeEvents
       2429, 2446, 0x02015003, 		 // int MaximumPINLength
       2450, 2461, 0x0a015003, 		 // QString MerchantID
       2469, 2486, 0x02015003, 		 // int MinimumPINLength
       2490, 2501, 0x02005001, 		 // int OpenResult
       2505, 2521, 0x01005001, 		 // bool PINEntryEnabled
       2526, 2538, 0x02015003, 		 // int PowerNotify
       2542, 2553, 0x02005001, 		 // int PowerState
       2557, 2564, 0x02015003, 		 // int Prompt
       2568, 2583, 0x02015003, 		 // int PromptLanguage
       2587, 2598, 0x02005001, 		 // int ResultCode
       2602, 2621, 0x02005001, 		 // int ResultCodeExtended
       2625, 2650, 0x0a005001, 		 // QString ServiceObjectDescription
       2658, 2679, 0x02005001, 		 // int ServiceObjectVersion
       2683, 2689, 0x02005001, 		 // int State
       2693, 2704, 0x0a015003, 		 // QString TerminalID
       2712, 2723, 0x0a015003, 		 // QString Track1Data
       2731, 2742, 0x0a015003, 		 // QString Track2Data
       2750, 2761, 0x0a015003, 		 // QString Track3Data
       2769, 2780, 0x0a015003, 		 // QString Track4Data
       2788, 2804, 0x02015003, 		 // int TransactionType
       2808, 2816, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPINPad() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPINPad\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0ComputeMAC(QString,QString&)\0"
    "InMsg,pOutMsg\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EnablePINEntry()\0\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0"
    "\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0\0\0SetMerchantID(QString)\0MerchantID\0"
    "\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0TerminalID\0\0\0SetTrack1Data(QString)\0"
    "Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0\0\0SetTrack3Data(QString)\0Track3Data\0\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateKey(int,QString)\0KeyNum,Key\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0"
    "AvailableLanguagesList\0QString\0AvailablePromptsList\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0bool\0CapPowerReporting\0"
    "int\0CapStatisticsReporting\0bool\0CapTone\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0"
    "DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0OpenResult\0int\0"
    "PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TerminalID\0QString\0"
    "Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0Track4Data\0QString\0TransactionType\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPINPad::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPINPad(),
qt_meta_data_OPOS__IOPOSPINPad }
};

void *IOPOSPINPad::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPINPad()))
        return static_cast<void*>(const_cast<IOPOSPINPad*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPINPad_1_10[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       46,    10, // methods
       48,    240, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 194, 223, 227, 9,
       228, 245, 251, 255, 9,
       256, 273, 281, 285, 9,
       286, 299, 300, 304, 9,
       305, 328, 329, 333, 9,
       334, 342, 343, 347, 9,
       348, 385, 410, 414, 9,
       415, 444, 458, 462, 9,
       463, 491, 513, 517, 9,
       518, 535, 536, 540, 9,
       541, 564, 579, 583, 9,
       584, 598, 609, 613, 9,
       614, 630, 631, 635, 9,
       636, 661, 678, 682, 9,
       683, 712, 730, 734, 9,
       735, 747, 754, 755, 9,
       756, 786, 812, 813, 9,
       814, 840, 896, 897, 9,
       898, 925, 934, 935, 9,
       936, 950, 951, 955, 9,
       956, 976, 981, 982, 9,
       983, 1009, 1023, 1024, 9,
       1025, 1046, 1053, 1054, 9,
       1055, 1080, 1097, 1098, 9,
       1099, 1125, 1142, 1143, 9,
       1144, 1167, 1181, 1182, 9,
       1183, 1205, 1218, 1219, 9,
       1220, 1245, 1262, 1263, 9,
       1264, 1287, 1298, 1299, 9,
       1300, 1325, 1342, 1343, 9,
       1344, 1364, 1376, 1377, 9,
       1378, 1393, 1400, 1401, 9,
       1402, 1425, 1440, 1441, 9,
       1442, 1465, 1476, 1477, 9,
       1478, 1501, 1512, 1513, 9,
       1514, 1537, 1548, 1549, 9,
       1550, 1573, 1584, 1585, 9,
       1586, 1609, 1620, 1621, 9,
       1622, 1646, 1662, 1663, 9,
       1664, 1688, 1705, 1709, 9,
       1710, 1733, 1744, 1748, 9,
       1749, 1775, 1792, 1796, 9,
       1797, 1816, 1824, 1828, 9,

 // properties: name, type, flags
       1829, 1843, 0x0a015003, 		 // QString AccountNumber
       1851, 1881, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1889, 1896, 0x04015003, 		 // qlonglong Amount
       1906, 1929, 0x0a005001, 		 // QString AvailableLanguagesList
       1937, 1958, 0x0a005001, 		 // QString AvailablePromptsList
       1966, 1983, 0x02015003, 		 // int BinaryConversion
       1987, 2013, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2018, 2029, 0x02005001, 		 // int CapDisplay
       2033, 2045, 0x01005001, 		 // bool CapKeyboard
       2050, 2062, 0x02005001, 		 // int CapLanguage
       2066, 2084, 0x01005001, 		 // bool CapMACCalculation
       2089, 2107, 0x02005001, 		 // int CapPowerReporting
       2111, 2134, 0x01005001, 		 // bool CapStatisticsReporting
       2139, 2147, 0x01005001, 		 // bool CapTone
       2152, 2170, 0x01005001, 		 // bool CapUpdateFirmware
       2175, 2195, 0x01005001, 		 // bool CapUpdateStatistics
       2200, 2216, 0x0a005001, 		 // QString CheckHealthText
       2224, 2232, 0x01005001, 		 // bool Claimed
       2237, 2262, 0x0a005001, 		 // QString ControlObjectDescription
       2270, 2291, 0x02005001, 		 // int ControlObjectVersion
       2295, 2305, 0x02005001, 		 // int DataCount
       2309, 2326, 0x01015003, 		 // bool DataEventEnabled
       2331, 2349, 0x0a005001, 		 // QString DeviceDescription
       2357, 2371, 0x01015003, 		 // bool DeviceEnabled
       2376, 2387, 0x0a005001, 		 // QString DeviceName
       2395, 2408, 0x0a005001, 		 // QString EncryptedPIN
       2416, 2429, 0x01015003, 		 // bool FreezeEvents
       2434, 2451, 0x02015003, 		 // int MaximumPINLength
       2455, 2466, 0x0a015003, 		 // QString MerchantID
       2474, 2491, 0x02015003, 		 // int MinimumPINLength
       2495, 2506, 0x02005001, 		 // int OpenResult
       2510, 2526, 0x01005001, 		 // bool PINEntryEnabled
       2531, 2543, 0x02015003, 		 // int PowerNotify
       2547, 2558, 0x02005001, 		 // int PowerState
       2562, 2569, 0x02015003, 		 // int Prompt
       2573, 2588, 0x02015003, 		 // int PromptLanguage
       2592, 2603, 0x02005001, 		 // int ResultCode
       2607, 2626, 0x02005001, 		 // int ResultCodeExtended
       2630, 2655, 0x0a005001, 		 // QString ServiceObjectDescription
       2663, 2684, 0x02005001, 		 // int ServiceObjectVersion
       2688, 2694, 0x02005001, 		 // int State
       2698, 2709, 0x0a015003, 		 // QString TerminalID
       2717, 2728, 0x0a015003, 		 // QString Track1Data
       2736, 2747, 0x0a015003, 		 // QString Track2Data
       2755, 2766, 0x0a015003, 		 // QString Track3Data
       2774, 2785, 0x0a015003, 		 // QString Track4Data
       2793, 2809, 0x02015003, 		 // int TransactionType
       2813, 2821, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPINPad_1_10() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPINPad_1_10\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0ComputeMAC(QString,QString&)\0"
    "InMsg,pOutMsg\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EnablePINEntry()\0\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0"
    "\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0\0\0SetMerchantID(QString)\0MerchantID\0"
    "\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0TerminalID\0\0\0SetTrack1Data(QString)\0"
    "Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0\0\0SetTrack3Data(QString)\0Track3Data\0\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateKey(int,QString)\0KeyNum,Key\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0"
    "AvailableLanguagesList\0QString\0AvailablePromptsList\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0bool\0CapPowerReporting\0"
    "int\0CapStatisticsReporting\0bool\0CapTone\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0"
    "DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0OpenResult\0int\0"
    "PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TerminalID\0QString\0"
    "Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0Track4Data\0QString\0TransactionType\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPINPad_1_10::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPINPad_1_10(),
qt_meta_data_OPOS__IOPOSPINPad_1_10 }
};

void *IOPOSPINPad_1_10::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPINPad_1_10()))
        return static_cast<void*>(const_cast<IOPOSPINPad_1_10*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPINPad_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       45,    10, // methods
       48,    235, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       22, 61, 83, 84, 5,
       85, 110, 115, 116, 5,
       117, 143, 158, 159, 5,

 // slots: signature, parameters, type, tag, flags
       160, 193, 222, 226, 9,
       227, 244, 250, 254, 9,
       255, 272, 280, 284, 9,
       285, 298, 299, 303, 9,
       304, 312, 313, 317, 9,
       318, 355, 380, 384, 9,
       385, 414, 428, 432, 9,
       433, 461, 483, 487, 9,
       488, 505, 506, 510, 9,
       511, 534, 549, 553, 9,
       554, 568, 579, 583, 9,
       584, 600, 601, 605, 9,
       606, 631, 648, 652, 9,
       653, 682, 700, 704, 9,
       705, 717, 724, 725, 9,
       726, 756, 782, 783, 9,
       784, 810, 866, 867, 9,
       868, 895, 904, 905, 9,
       906, 920, 921, 925, 9,
       926, 946, 951, 952, 9,
       953, 979, 993, 994, 9,
       995, 1016, 1023, 1024, 9,
       1025, 1050, 1067, 1068, 9,
       1069, 1095, 1112, 1113, 9,
       1114, 1137, 1151, 1152, 9,
       1153, 1175, 1188, 1189, 9,
       1190, 1215, 1232, 1233, 9,
       1234, 1257, 1268, 1269, 9,
       1270, 1295, 1312, 1313, 9,
       1314, 1334, 1346, 1347, 9,
       1348, 1363, 1370, 1371, 9,
       1372, 1395, 1410, 1411, 9,
       1412, 1435, 1446, 1447, 9,
       1448, 1471, 1482, 1483, 9,
       1484, 1507, 1518, 1519, 9,
       1520, 1543, 1554, 1555, 9,
       1556, 1579, 1590, 1591, 9,
       1592, 1616, 1632, 1633, 9,
       1634, 1658, 1675, 1679, 9,
       1680, 1703, 1714, 1718, 9,
       1719, 1745, 1762, 1766, 9,
       1767, 1786, 1794, 1798, 9,

 // properties: name, type, flags
       1799, 1813, 0x0a015003, 		 // QString AccountNumber
       1821, 1851, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1859, 1866, 0x04015003, 		 // qlonglong Amount
       1876, 1899, 0x0a005001, 		 // QString AvailableLanguagesList
       1907, 1928, 0x0a005001, 		 // QString AvailablePromptsList
       1936, 1953, 0x02015003, 		 // int BinaryConversion
       1957, 1983, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1988, 1999, 0x02005001, 		 // int CapDisplay
       2003, 2015, 0x01005001, 		 // bool CapKeyboard
       2020, 2032, 0x02005001, 		 // int CapLanguage
       2036, 2054, 0x01005001, 		 // bool CapMACCalculation
       2059, 2077, 0x02005001, 		 // int CapPowerReporting
       2081, 2104, 0x01005001, 		 // bool CapStatisticsReporting
       2109, 2117, 0x01005001, 		 // bool CapTone
       2122, 2140, 0x01005001, 		 // bool CapUpdateFirmware
       2145, 2165, 0x01005001, 		 // bool CapUpdateStatistics
       2170, 2186, 0x0a005001, 		 // QString CheckHealthText
       2194, 2202, 0x01005001, 		 // bool Claimed
       2207, 2232, 0x0a005001, 		 // QString ControlObjectDescription
       2240, 2261, 0x02005001, 		 // int ControlObjectVersion
       2265, 2275, 0x02005001, 		 // int DataCount
       2279, 2296, 0x01015003, 		 // bool DataEventEnabled
       2301, 2319, 0x0a005001, 		 // QString DeviceDescription
       2327, 2341, 0x01015003, 		 // bool DeviceEnabled
       2346, 2357, 0x0a005001, 		 // QString DeviceName
       2365, 2378, 0x0a005001, 		 // QString EncryptedPIN
       2386, 2399, 0x01015003, 		 // bool FreezeEvents
       2404, 2421, 0x02015003, 		 // int MaximumPINLength
       2425, 2436, 0x0a015003, 		 // QString MerchantID
       2444, 2461, 0x02015003, 		 // int MinimumPINLength
       2465, 2476, 0x02005001, 		 // int OpenResult
       2480, 2496, 0x01005001, 		 // bool PINEntryEnabled
       2501, 2513, 0x02015003, 		 // int PowerNotify
       2517, 2528, 0x02005001, 		 // int PowerState
       2532, 2539, 0x02015003, 		 // int Prompt
       2543, 2558, 0x02015003, 		 // int PromptLanguage
       2562, 2573, 0x02005001, 		 // int ResultCode
       2577, 2596, 0x02005001, 		 // int ResultCodeExtended
       2600, 2625, 0x0a005001, 		 // QString ServiceObjectDescription
       2633, 2654, 0x02005001, 		 // int ServiceObjectVersion
       2658, 2664, 0x02005001, 		 // int State
       2668, 2679, 0x0a015003, 		 // QString TerminalID
       2687, 2698, 0x0a015003, 		 // QString Track1Data
       2706, 2717, 0x0a015003, 		 // QString Track2Data
       2725, 2736, 0x0a015003, 		 // QString Track3Data
       2744, 2755, 0x0a015003, 		 // QString Track4Data
       2763, 2779, 0x02015003, 		 // int TransactionType
       2783, 2791, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPINPad_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPINPad_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0ComputeMAC(QString,QString&)\0InMsg,pOutMsg\0"
    "int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EnablePINEntry()\0\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0"
    "\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0\0\0SetMerchantID(QString)\0MerchantID\0"
    "\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0TerminalID\0\0\0SetTrack1Data(QString)\0"
    "Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0\0\0SetTrack3Data(QString)\0Track3Data\0\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateKey(int,QString)\0KeyNum,Key\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0"
    "AvailableLanguagesList\0QString\0AvailablePromptsList\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0bool\0CapPowerReporting\0"
    "int\0CapStatisticsReporting\0bool\0CapTone\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0"
    "DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0OpenResult\0int\0"
    "PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TerminalID\0QString\0"
    "Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0Track4Data\0QString\0TransactionType\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPINPad_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPINPad_1_9(),
qt_meta_data_OPOS__IOPOSPINPad_1_9 }
};

void *IOPOSPINPad_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPINPad_1_9()))
        return static_cast<void*>(const_cast<IOPOSPINPad_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPINPad_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       43,    10, // methods
       46,    225, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       22, 61, 83, 84, 5,
       85, 110, 115, 116, 5,
       117, 143, 158, 159, 5,

 // slots: signature, parameters, type, tag, flags
       160, 193, 222, 226, 9,
       227, 244, 250, 254, 9,
       255, 272, 280, 284, 9,
       285, 298, 299, 303, 9,
       304, 312, 313, 317, 9,
       318, 347, 361, 365, 9,
       366, 394, 416, 420, 9,
       421, 438, 439, 443, 9,
       444, 467, 482, 486, 9,
       487, 501, 512, 516, 9,
       517, 533, 534, 538, 9,
       539, 564, 581, 585, 9,
       586, 615, 633, 637, 9,
       638, 650, 657, 658, 9,
       659, 689, 715, 716, 9,
       717, 743, 799, 800, 9,
       801, 828, 837, 838, 9,
       839, 853, 854, 858, 9,
       859, 879, 884, 885, 9,
       886, 912, 926, 927, 9,
       928, 949, 956, 957, 9,
       958, 983, 1000, 1001, 9,
       1002, 1028, 1045, 1046, 9,
       1047, 1070, 1084, 1085, 9,
       1086, 1108, 1121, 1122, 9,
       1123, 1148, 1165, 1166, 9,
       1167, 1190, 1201, 1202, 9,
       1203, 1228, 1245, 1246, 9,
       1247, 1267, 1279, 1280, 9,
       1281, 1296, 1303, 1304, 9,
       1305, 1328, 1343, 1344, 9,
       1345, 1368, 1379, 1380, 9,
       1381, 1404, 1415, 1416, 9,
       1417, 1440, 1451, 1452, 9,
       1453, 1476, 1487, 1488, 9,
       1489, 1512, 1523, 1524, 9,
       1525, 1549, 1565, 1566, 9,
       1567, 1590, 1601, 1605, 9,
       1606, 1632, 1649, 1653, 9,
       1654, 1673, 1681, 1685, 9,

 // properties: name, type, flags
       1686, 1700, 0x0a015003, 		 // QString AccountNumber
       1708, 1738, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1746, 1753, 0x04015003, 		 // qlonglong Amount
       1763, 1786, 0x0a005001, 		 // QString AvailableLanguagesList
       1794, 1815, 0x0a005001, 		 // QString AvailablePromptsList
       1823, 1840, 0x02015003, 		 // int BinaryConversion
       1844, 1855, 0x02005001, 		 // int CapDisplay
       1859, 1871, 0x01005001, 		 // bool CapKeyboard
       1876, 1888, 0x02005001, 		 // int CapLanguage
       1892, 1910, 0x01005001, 		 // bool CapMACCalculation
       1915, 1933, 0x02005001, 		 // int CapPowerReporting
       1937, 1960, 0x01005001, 		 // bool CapStatisticsReporting
       1965, 1973, 0x01005001, 		 // bool CapTone
       1978, 1998, 0x01005001, 		 // bool CapUpdateStatistics
       2003, 2019, 0x0a005001, 		 // QString CheckHealthText
       2027, 2035, 0x01005001, 		 // bool Claimed
       2040, 2065, 0x0a005001, 		 // QString ControlObjectDescription
       2073, 2094, 0x02005001, 		 // int ControlObjectVersion
       2098, 2108, 0x02005001, 		 // int DataCount
       2112, 2129, 0x01015003, 		 // bool DataEventEnabled
       2134, 2152, 0x0a005001, 		 // QString DeviceDescription
       2160, 2174, 0x01015003, 		 // bool DeviceEnabled
       2179, 2190, 0x0a005001, 		 // QString DeviceName
       2198, 2211, 0x0a005001, 		 // QString EncryptedPIN
       2219, 2232, 0x01015003, 		 // bool FreezeEvents
       2237, 2254, 0x02015003, 		 // int MaximumPINLength
       2258, 2269, 0x0a015003, 		 // QString MerchantID
       2277, 2294, 0x02015003, 		 // int MinimumPINLength
       2298, 2309, 0x02005001, 		 // int OpenResult
       2313, 2329, 0x01005001, 		 // bool PINEntryEnabled
       2334, 2346, 0x02015003, 		 // int PowerNotify
       2350, 2361, 0x02005001, 		 // int PowerState
       2365, 2372, 0x02015003, 		 // int Prompt
       2376, 2391, 0x02015003, 		 // int PromptLanguage
       2395, 2406, 0x02005001, 		 // int ResultCode
       2410, 2429, 0x02005001, 		 // int ResultCodeExtended
       2433, 2458, 0x0a005001, 		 // QString ServiceObjectDescription
       2466, 2487, 0x02005001, 		 // int ServiceObjectVersion
       2491, 2497, 0x02005001, 		 // int State
       2501, 2512, 0x0a015003, 		 // QString TerminalID
       2520, 2531, 0x0a015003, 		 // QString Track1Data
       2539, 2550, 0x0a015003, 		 // QString Track2Data
       2558, 2569, 0x0a015003, 		 // QString Track3Data
       2577, 2588, 0x0a015003, 		 // QString Track4Data
       2596, 2612, 0x02015003, 		 // int TransactionType
       2616, 2624, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPINPad_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPINPad_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0ComputeMAC(QString,QString&)\0InMsg,pOutMsg\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EnablePINEntry()\0"
    "\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0"
    "Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0"
    "\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0"
    "DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0\0\0SetMerchantID(QString)\0MerchantID\0\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0TerminalID\0\0\0SetTrack1Data(QString)\0Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0\0\0SetTrack3Data(QString)\0Track3Data\0"
    "\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateKey(int,QString)\0KeyNum,Key\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0"
    "QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0AvailableLanguagesList\0QString\0AvailablePromptsList\0QString\0BinaryConversion\0int\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0"
    "bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapTone\0bool\0CapUpdateStatistics\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0DataCount\0int\0"
    "DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0OpenResult\0int\0"
    "PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TerminalID\0QString\0"
    "Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0Track4Data\0QString\0TransactionType\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPINPad_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPINPad_1_8(),
qt_meta_data_OPOS__IOPOSPINPad_1_8 }
};

void *IOPOSPINPad_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPINPad_1_8()))
        return static_cast<void*>(const_cast<IOPOSPINPad_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSPINPad_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       40,    10, // methods
       44,    210, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       22, 61, 83, 84, 5,
       85, 110, 115, 116, 5,
       117, 143, 158, 159, 5,

 // slots: signature, parameters, type, tag, flags
       160, 193, 222, 226, 9,
       227, 244, 250, 254, 9,
       255, 272, 280, 284, 9,
       285, 298, 299, 303, 9,
       304, 312, 313, 317, 9,
       318, 347, 361, 365, 9,
       366, 394, 416, 420, 9,
       421, 438, 439, 443, 9,
       444, 467, 482, 486, 9,
       487, 501, 512, 516, 9,
       517, 533, 534, 538, 9,
       539, 551, 558, 559, 9,
       560, 590, 616, 617, 9,
       618, 644, 700, 701, 9,
       702, 729, 738, 739, 9,
       740, 754, 755, 759, 9,
       760, 780, 785, 786, 9,
       787, 813, 827, 828, 9,
       829, 850, 857, 858, 9,
       859, 884, 901, 902, 9,
       903, 929, 946, 947, 9,
       948, 971, 985, 986, 9,
       987, 1009, 1022, 1023, 9,
       1024, 1049, 1066, 1067, 9,
       1068, 1091, 1102, 1103, 9,
       1104, 1129, 1146, 1147, 9,
       1148, 1168, 1180, 1181, 9,
       1182, 1197, 1204, 1205, 9,
       1206, 1229, 1244, 1245, 9,
       1246, 1269, 1280, 1281, 9,
       1282, 1305, 1316, 1317, 9,
       1318, 1341, 1352, 1353, 9,
       1354, 1377, 1388, 1389, 9,
       1390, 1413, 1424, 1425, 9,
       1426, 1450, 1466, 1467, 9,
       1468, 1491, 1502, 1506, 9,
       1507, 1526, 1534, 1538, 9,

 // properties: name, type, flags
       1539, 1553, 0x0a015003, 		 // QString AccountNumber
       1561, 1591, 0x0a005001, 		 // QString AdditionalSecurityInformation
       1599, 1606, 0x04015003, 		 // qlonglong Amount
       1616, 1639, 0x0a005001, 		 // QString AvailableLanguagesList
       1647, 1668, 0x0a005001, 		 // QString AvailablePromptsList
       1676, 1693, 0x02015003, 		 // int BinaryConversion
       1697, 1708, 0x02005001, 		 // int CapDisplay
       1712, 1724, 0x01005001, 		 // bool CapKeyboard
       1729, 1741, 0x02005001, 		 // int CapLanguage
       1745, 1763, 0x01005001, 		 // bool CapMACCalculation
       1768, 1786, 0x02005001, 		 // int CapPowerReporting
       1790, 1798, 0x01005001, 		 // bool CapTone
       1803, 1819, 0x0a005001, 		 // QString CheckHealthText
       1827, 1835, 0x01005001, 		 // bool Claimed
       1840, 1865, 0x0a005001, 		 // QString ControlObjectDescription
       1873, 1894, 0x02005001, 		 // int ControlObjectVersion
       1898, 1908, 0x02005001, 		 // int DataCount
       1912, 1929, 0x01015003, 		 // bool DataEventEnabled
       1934, 1952, 0x0a005001, 		 // QString DeviceDescription
       1960, 1974, 0x01015003, 		 // bool DeviceEnabled
       1979, 1990, 0x0a005001, 		 // QString DeviceName
       1998, 2011, 0x0a005001, 		 // QString EncryptedPIN
       2019, 2032, 0x01015003, 		 // bool FreezeEvents
       2037, 2054, 0x02015003, 		 // int MaximumPINLength
       2058, 2069, 0x0a015003, 		 // QString MerchantID
       2077, 2094, 0x02015003, 		 // int MinimumPINLength
       2098, 2109, 0x02005001, 		 // int OpenResult
       2113, 2129, 0x01005001, 		 // bool PINEntryEnabled
       2134, 2146, 0x02015003, 		 // int PowerNotify
       2150, 2161, 0x02005001, 		 // int PowerState
       2165, 2172, 0x02015003, 		 // int Prompt
       2176, 2191, 0x02015003, 		 // int PromptLanguage
       2195, 2206, 0x02005001, 		 // int ResultCode
       2210, 2229, 0x02005001, 		 // int ResultCodeExtended
       2233, 2258, 0x0a005001, 		 // QString ServiceObjectDescription
       2266, 2287, 0x02005001, 		 // int ServiceObjectVersion
       2291, 2297, 0x02005001, 		 // int State
       2301, 2312, 0x0a015003, 		 // QString TerminalID
       2320, 2331, 0x0a015003, 		 // QString Track1Data
       2339, 2350, 0x0a015003, 		 // QString Track2Data
       2358, 2369, 0x0a015003, 		 // QString Track3Data
       2377, 2388, 0x0a015003, 		 // QString Track4Data
       2396, 2412, 0x02015003, 		 // int TransactionType
       2416, 2424, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSPINPad_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSPINPad_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginEFTTransaction(QString,int)\0PINPadSystem,TransactionHost\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0ComputeMAC(QString,QString&)\0InMsg,pOutMsg\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EnablePINEntry()\0"
    "\0int\0\0EndEFTTransaction(int)\0CompletionCode\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAccountNumber(QString)\0AccountNumber\0\0\0SetAmount(qlonglong)\0"
    "Amount\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetMaximumPINLength(int)\0MaximumPINLength\0"
    "\0\0SetMerchantID(QString)\0MerchantID\0\0\0SetMinimumPINLength(int)\0MinimumPINLength\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetPrompt(int)\0Prompt\0\0\0SetPromptLanguage(int)\0PromptLanguage\0\0\0SetTerminalID(QString)\0"
    "TerminalID\0\0\0SetTrack1Data(QString)\0Track1Data\0\0\0SetTrack2Data(QString)\0Track2Data\0\0\0SetTrack3Data(QString)\0Track3Data\0\0\0SetTrack4Data(QString)\0Track4Data\0\0\0SetTransactionType(int)\0TransactionType\0\0\0UpdateKey(int,QString)\0"
    "KeyNum,Key\0int\0\0VerifyMAC(QString)\0Message\0int\0\0"
    "AccountNumber\0QString\0AdditionalSecurityInformation\0QString\0Amount\0qlonglong\0AvailableLanguagesList\0QString\0AvailablePromptsList\0QString\0BinaryConversion\0"
    "int\0CapDisplay\0int\0CapKeyboard\0bool\0CapLanguage\0int\0CapMACCalculation\0bool\0CapPowerReporting\0int\0CapTone\0bool\0CheckHealthText\0QString\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EncryptedPIN\0QString\0FreezeEvents\0bool\0MaximumPINLength\0int\0MerchantID\0QString\0MinimumPINLength\0int\0"
    "OpenResult\0int\0PINEntryEnabled\0bool\0PowerNotify\0int\0PowerState\0int\0Prompt\0int\0PromptLanguage\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0"
    "TerminalID\0QString\0Track1Data\0QString\0Track2Data\0QString\0Track3Data\0QString\0Track4Data\0QString\0TransactionType\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSPINPad_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSPINPad_1_5(),
qt_meta_data_OPOS__IOPOSPINPad_1_5 }
};

void *IOPOSPINPad_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSPINPad_1_5()))
        return static_cast<void*>(const_cast<IOPOSPINPad_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

