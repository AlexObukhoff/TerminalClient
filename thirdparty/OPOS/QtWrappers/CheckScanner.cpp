/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSCheckScanner.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\CheckScanner.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSCheckScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       52,    22, // methods
       55,    282, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       23, 41, 
       66, 78, 
       96, 108, 
       131, 143, 
       165, 177, 
       199, 211, 

 // signals: signature, parameters, type, tag, flags
       233, 248, 255, 256, 5,
       257, 290, 316, 317, 5,
       318, 347, 403, 404, 5,
       405, 428, 433, 434, 5,
       435, 474, 496, 497, 5,
       498, 523, 528, 529, 5,
       530, 556, 571, 572, 5,

 // slots: signature, parameters, type, tag, flags
       573, 593, 601, 605, 9,
       606, 624, 632, 636, 9,
       637, 654, 660, 664, 9,
       665, 682, 690, 694, 9,
       695, 711, 714, 718, 9,
       719, 732, 733, 737, 9,
       738, 761, 762, 766, 9,
       767, 775, 776, 780, 9,
       781, 818, 843, 847, 9,
       848, 884, 905, 909, 9,
       910, 938, 960, 964, 9,
       965, 980, 981, 985, 9,
       986, 999, 1000, 1004, 9,
       1005, 1019, 1030, 1034, 9,
       1035, 1051, 1052, 1056, 9,
       1057, 1082, 1099, 1103, 9,
       1104, 1123, 1134, 1138, 9,
       1139, 1159, 1162, 1166, 9,
       1167, 1196, 1214, 1218, 9,
       1219, 1231, 1238, 1239, 9,
       1240, 1270, 1296, 1297, 9,
       1298, 1324, 1380, 1381, 9,
       1382, 1409, 1418, 1419, 9,
       1420, 1434, 1435, 1439, 9,
       1440, 1460, 1465, 1466, 9,
       1467, 1488, 1500, 1501, 9,
       1502, 1527, 1544, 1545, 9,
       1546, 1560, 1566, 1567, 9,
       1568, 1592, 1607, 1608, 9,
       1609, 1626, 1635, 1636, 9,
       1637, 1663, 1680, 1681, 9,
       1682, 1705, 1719, 1720, 9,
       1721, 1744, 1759, 1760, 9,
       1761, 1783, 1797, 1798, 9,
       1799, 1818, 1825, 1826, 9,
       1827, 1845, 1855, 1856, 9,
       1857, 1879, 1892, 1893, 9,
       1894, 1914, 1926, 1927, 9,
       1928, 1953, 1966, 1967, 9,
       1968, 1984, 1992, 1993, 9,
       1994, 2014, 2026, 2027, 9,
       2028, 2044, 2052, 2053, 9,
       2054, 2070, 2081, 2085, 9,
       2086, 2110, 2127, 2131, 9,
       2132, 2158, 2175, 2179, 9,

 // properties: name, type, flags
       2180, 2192, 0x01015003, 		 // bool AutoDisable
       2197, 2214, 0x02015003, 		 // int BinaryConversion
       2218, 2234, 0x01005001, 		 // bool CapAutoContrast
       2239, 2261, 0x01005001, 		 // bool CapAutoGenerateFileID
       2266, 2294, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       2299, 2311, 0x01005001, 		 // bool CapAutoSize
       2316, 2325, 0x02005001, 		 // int CapColor
       2329, 2355, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2360, 2378, 0x01005001, 		 // bool CapConcurrentMICR
       2383, 2395, 0x01005001, 		 // bool CapContrast
       2400, 2418, 0x01005001, 		 // bool CapDefineCropArea
       2423, 2438, 0x02005001, 		 // int CapImageFormat
       2442, 2458, 0x01005001, 		 // bool CapImageTagData
       2463, 2477, 0x01005001, 		 // bool CapMICRDevice
       2482, 2500, 0x02005001, 		 // int CapPowerReporting
       2504, 2527, 0x01005001, 		 // bool CapStatisticsReporting
       2532, 2551, 0x01005001, 		 // bool CapStoreImageFiles
       2556, 2574, 0x01005001, 		 // bool CapUpdateFirmware
       2579, 2599, 0x01005001, 		 // bool CapUpdateStatistics
       2604, 2624, 0x01005001, 		 // bool CapValidationDevice
       2629, 2645, 0x0a005001, 		 // QString CheckHealthText
       2653, 2661, 0x01005001, 		 // bool Claimed
       2666, 2672, 0x02015003, 		 // int Color
       2676, 2691, 0x01015003, 		 // bool ConcurrentMICR
       2696, 2705, 0x02015003, 		 // int Contrast
       2709, 2734, 0x0a005001, 		 // QString ControlObjectDescription
       2742, 2763, 0x02005001, 		 // int ControlObjectVersion
       2767, 2781, 0x02005001, 		 // int CropAreaCount
       2785, 2795, 0x02005001, 		 // int DataCount
       2799, 2816, 0x01015003, 		 // bool DataEventEnabled
       2821, 2839, 0x0a005001, 		 // QString DeviceDescription
       2847, 2861, 0x01015003, 		 // bool DeviceEnabled
       2866, 2877, 0x0a005001, 		 // QString DeviceName
       2885, 2900, 0x02015003, 		 // int DocumentHeight
       2904, 2918, 0x02015003, 		 // int DocumentWidth
       2922, 2929, 0x0a015003, 		 // QString FileID
       2937, 2947, 0x02015003, 		 // int FileIndex
       2951, 2964, 0x01015003, 		 // bool FreezeEvents
       2969, 2979, 0x0a005001, 		 // QString ImageData
       2987, 2999, 0x02015003, 		 // int ImageFormat
       3003, 3021, 0x02005001, 		 // int ImageMemoryStatus
       3025, 3038, 0x0a015003, 		 // QString ImageTagData
       3046, 3054, 0x02015003, 		 // int MapMode
       3058, 3071, 0x02005001, 		 // int MaxCropAreas
       3075, 3086, 0x02005001, 		 // int OpenResult
       3090, 3102, 0x02015003, 		 // int PowerNotify
       3106, 3117, 0x02005001, 		 // int PowerState
       3121, 3129, 0x02015003, 		 // int Quality
       3133, 3145, 0x0a005001, 		 // QString QualityList
       3153, 3177, 0x02005001, 		 // int RemainingImagesEstimate
       3181, 3192, 0x02005001, 		 // int ResultCode
       3196, 3215, 0x02005001, 		 // int ResultCodeExtended
       3219, 3244, 0x0a005001, 		 // QString ServiceObjectDescription
       3252, 3273, 0x02005001, 		 // int ServiceObjectVersion
       3277, 3283, 0x02005001, 		 // int State

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSCheckScanner() {
    static const char stringdata0[] = {
    "OPOS::OPOSCheckScanner\0"
    "Event Interface 5\0_IOPOSCheckScannerEvents\0Interface 0\0IOPOSCheckScanner\0Interface 1\0IOPOSCheckScanner_1_10\0Interface 2\0IOPOSCheckScanner_1_9\0Interface 3\0IOPOSCheckScanner_1_8\0Interface 4\0IOPOSCheckScanner_1_7\0"
    ""
    "DataEvent(int)\0Status\0\0\0DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0StatusUpdateEvent(int)\0Data\0\0"
    "\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0"
    "int\0\0DefineCropArea(int,int,int,int,int)\0CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0RetrieveMemory(int)\0By\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0"
    "AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0ConcurrentMICR\0\0\0SetContrast(int)\0Contrast\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0"
    "DeviceEnabled\0\0\0SetDocumentHeight(int)\0DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetImageFormat(int)\0"
    "ImageFormat\0\0\0SetImageTagData(QString)\0ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapAutoContrast\0bool\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0bool\0CapAutoSize\0bool\0CapColor\0int\0"
    "CapCompareFirmwareVersion\0bool\0CapConcurrentMICR\0bool\0CapContrast\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0"
    "CapStoreImageFiles\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0Contrast\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CropAreaCount\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0"
    "FileIndex\0int\0FreezeEvents\0bool\0ImageData\0QString\0ImageFormat\0int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0"
    "QString\0RemainingImagesEstimate\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSCheckScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSCheckScanner(),
qt_meta_data_OPOS__OPOSCheckScanner }
};

void *OPOSCheckScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSCheckScanner()))
        return static_cast<void*>(const_cast<OPOSCheckScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSCheckScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       48,    10, // methods
       56,    250, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 182, 190, 194, 9,
       195, 213, 221, 225, 9,
       226, 243, 249, 253, 9,
       254, 271, 279, 283, 9,
       284, 300, 303, 307, 9,
       308, 321, 322, 326, 9,
       327, 350, 351, 355, 9,
       356, 364, 365, 369, 9,
       370, 407, 432, 436, 9,
       437, 473, 494, 498, 9,
       499, 527, 549, 553, 9,
       554, 569, 570, 574, 9,
       575, 588, 589, 593, 9,
       594, 608, 619, 623, 9,
       624, 640, 641, 645, 9,
       646, 671, 688, 692, 9,
       693, 712, 723, 727, 9,
       728, 748, 751, 755, 9,
       756, 785, 803, 807, 9,
       808, 820, 827, 828, 9,
       829, 859, 885, 886, 9,
       887, 913, 969, 970, 9,
       971, 998, 1007, 1008, 9,
       1009, 1023, 1024, 1028, 9,
       1029, 1049, 1054, 1055, 9,
       1056, 1077, 1089, 1090, 9,
       1091, 1116, 1133, 1134, 9,
       1135, 1149, 1155, 1156, 9,
       1157, 1181, 1196, 1197, 9,
       1198, 1215, 1224, 1225, 9,
       1226, 1252, 1269, 1270, 9,
       1271, 1294, 1308, 1309, 9,
       1310, 1333, 1348, 1349, 9,
       1350, 1372, 1386, 1387, 9,
       1388, 1407, 1414, 1415, 9,
       1416, 1434, 1444, 1445, 9,
       1446, 1468, 1481, 1482, 9,
       1483, 1503, 1515, 1516, 9,
       1517, 1542, 1555, 1556, 9,
       1557, 1573, 1581, 1582, 9,
       1583, 1603, 1615, 1616, 9,
       1617, 1633, 1641, 1642, 9,
       1643, 1659, 1670, 1674, 9,
       1675, 1699, 1716, 1720, 9,
       1721, 1747, 1764, 1768, 9,

 // properties: name, type, flags
       1769, 1781, 0x01015003, 		 // bool AutoDisable
       1786, 1803, 0x02015003, 		 // int BinaryConversion
       1807, 1823, 0x01005001, 		 // bool CapAutoContrast
       1828, 1850, 0x01005001, 		 // bool CapAutoGenerateFileID
       1855, 1883, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       1888, 1900, 0x01005001, 		 // bool CapAutoSize
       1905, 1914, 0x02005001, 		 // int CapColor
       1918, 1944, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1949, 1967, 0x01005001, 		 // bool CapConcurrentMICR
       1972, 1984, 0x01005001, 		 // bool CapContrast
       1989, 2007, 0x01005001, 		 // bool CapDefineCropArea
       2012, 2027, 0x02005001, 		 // int CapImageFormat
       2031, 2047, 0x01005001, 		 // bool CapImageTagData
       2052, 2066, 0x01005001, 		 // bool CapMICRDevice
       2071, 2089, 0x02005001, 		 // int CapPowerReporting
       2093, 2116, 0x01005001, 		 // bool CapStatisticsReporting
       2121, 2140, 0x01005001, 		 // bool CapStoreImageFiles
       2145, 2163, 0x01005001, 		 // bool CapUpdateFirmware
       2168, 2188, 0x01005001, 		 // bool CapUpdateStatistics
       2193, 2213, 0x01005001, 		 // bool CapValidationDevice
       2218, 2234, 0x0a005001, 		 // QString CheckHealthText
       2242, 2250, 0x01005001, 		 // bool Claimed
       2255, 2261, 0x02015003, 		 // int Color
       2265, 2280, 0x01015003, 		 // bool ConcurrentMICR
       2285, 2294, 0x02015003, 		 // int Contrast
       2298, 2323, 0x0a005001, 		 // QString ControlObjectDescription
       2331, 2352, 0x02005001, 		 // int ControlObjectVersion
       2356, 2370, 0x02005001, 		 // int CropAreaCount
       2374, 2384, 0x02005001, 		 // int DataCount
       2388, 2405, 0x01015003, 		 // bool DataEventEnabled
       2410, 2428, 0x0a005001, 		 // QString DeviceDescription
       2436, 2450, 0x01015003, 		 // bool DeviceEnabled
       2455, 2466, 0x0a005001, 		 // QString DeviceName
       2474, 2489, 0x02015003, 		 // int DocumentHeight
       2493, 2507, 0x02015003, 		 // int DocumentWidth
       2511, 2518, 0x0a015003, 		 // QString FileID
       2526, 2536, 0x02015003, 		 // int FileIndex
       2540, 2553, 0x01015003, 		 // bool FreezeEvents
       2558, 2568, 0x0a005001, 		 // QString ImageData
       2576, 2588, 0x02015003, 		 // int ImageFormat
       2592, 2610, 0x02005001, 		 // int ImageMemoryStatus
       2614, 2627, 0x0a015003, 		 // QString ImageTagData
       2635, 2643, 0x02015003, 		 // int MapMode
       2647, 2660, 0x02005001, 		 // int MaxCropAreas
       2664, 2675, 0x02005001, 		 // int OpenResult
       2679, 2691, 0x02015003, 		 // int PowerNotify
       2695, 2706, 0x02005001, 		 // int PowerState
       2710, 2718, 0x02015003, 		 // int Quality
       2722, 2734, 0x0a005001, 		 // QString QualityList
       2742, 2766, 0x02005001, 		 // int RemainingImagesEstimate
       2770, 2781, 0x02005001, 		 // int ResultCode
       2785, 2804, 0x02005001, 		 // int ResultCodeExtended
       2808, 2833, 0x0a005001, 		 // QString ServiceObjectDescription
       2841, 2862, 0x02005001, 		 // int ServiceObjectVersion
       2866, 2872, 0x02005001, 		 // int State
       2876, 2884, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSCheckScanner() {
    static const char stringdata0[] = {
    "OPOS::IOPOSCheckScanner\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0"
    "int\0\0DefineCropArea(int,int,int,int,int)\0CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0RetrieveMemory(int)\0By\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0"
    "AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0ConcurrentMICR\0\0\0SetContrast(int)\0Contrast\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0"
    "DeviceEnabled\0\0\0SetDocumentHeight(int)\0DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetImageFormat(int)\0"
    "ImageFormat\0\0\0SetImageTagData(QString)\0ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapAutoContrast\0bool\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0bool\0CapAutoSize\0bool\0CapColor\0int\0"
    "CapCompareFirmwareVersion\0bool\0CapConcurrentMICR\0bool\0CapContrast\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0"
    "CapStoreImageFiles\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0Contrast\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CropAreaCount\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0"
    "FileIndex\0int\0FreezeEvents\0bool\0ImageData\0QString\0ImageFormat\0int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0"
    "QString\0RemainingImagesEstimate\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSCheckScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSCheckScanner(),
qt_meta_data_OPOS__IOPOSCheckScanner }
};

void *IOPOSCheckScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSCheckScanner()))
        return static_cast<void*>(const_cast<IOPOSCheckScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSCheckScanner_1_10[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       48,    10, // methods
       56,    250, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 187, 195, 199, 9,
       200, 218, 226, 230, 9,
       231, 248, 254, 258, 9,
       259, 276, 284, 288, 9,
       289, 305, 308, 312, 9,
       313, 326, 327, 331, 9,
       332, 355, 356, 360, 9,
       361, 369, 370, 374, 9,
       375, 412, 437, 441, 9,
       442, 478, 499, 503, 9,
       504, 532, 554, 558, 9,
       559, 574, 575, 579, 9,
       580, 593, 594, 598, 9,
       599, 613, 624, 628, 9,
       629, 645, 646, 650, 9,
       651, 676, 693, 697, 9,
       698, 717, 728, 732, 9,
       733, 753, 756, 760, 9,
       761, 790, 808, 812, 9,
       813, 825, 832, 833, 9,
       834, 864, 890, 891, 9,
       892, 918, 974, 975, 9,
       976, 1003, 1012, 1013, 9,
       1014, 1028, 1029, 1033, 9,
       1034, 1054, 1059, 1060, 9,
       1061, 1082, 1094, 1095, 9,
       1096, 1121, 1138, 1139, 9,
       1140, 1154, 1160, 1161, 9,
       1162, 1186, 1201, 1202, 9,
       1203, 1220, 1229, 1230, 9,
       1231, 1257, 1274, 1275, 9,
       1276, 1299, 1313, 1314, 9,
       1315, 1338, 1353, 1354, 9,
       1355, 1377, 1391, 1392, 9,
       1393, 1412, 1419, 1420, 9,
       1421, 1439, 1449, 1450, 9,
       1451, 1473, 1486, 1487, 9,
       1488, 1508, 1520, 1521, 9,
       1522, 1547, 1560, 1561, 9,
       1562, 1578, 1586, 1587, 9,
       1588, 1608, 1620, 1621, 9,
       1622, 1638, 1646, 1647, 9,
       1648, 1664, 1675, 1679, 9,
       1680, 1704, 1721, 1725, 9,
       1726, 1752, 1769, 1773, 9,

 // properties: name, type, flags
       1774, 1786, 0x01015003, 		 // bool AutoDisable
       1791, 1808, 0x02015003, 		 // int BinaryConversion
       1812, 1828, 0x01005001, 		 // bool CapAutoContrast
       1833, 1855, 0x01005001, 		 // bool CapAutoGenerateFileID
       1860, 1888, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       1893, 1905, 0x01005001, 		 // bool CapAutoSize
       1910, 1919, 0x02005001, 		 // int CapColor
       1923, 1949, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1954, 1972, 0x01005001, 		 // bool CapConcurrentMICR
       1977, 1989, 0x01005001, 		 // bool CapContrast
       1994, 2012, 0x01005001, 		 // bool CapDefineCropArea
       2017, 2032, 0x02005001, 		 // int CapImageFormat
       2036, 2052, 0x01005001, 		 // bool CapImageTagData
       2057, 2071, 0x01005001, 		 // bool CapMICRDevice
       2076, 2094, 0x02005001, 		 // int CapPowerReporting
       2098, 2121, 0x01005001, 		 // bool CapStatisticsReporting
       2126, 2145, 0x01005001, 		 // bool CapStoreImageFiles
       2150, 2168, 0x01005001, 		 // bool CapUpdateFirmware
       2173, 2193, 0x01005001, 		 // bool CapUpdateStatistics
       2198, 2218, 0x01005001, 		 // bool CapValidationDevice
       2223, 2239, 0x0a005001, 		 // QString CheckHealthText
       2247, 2255, 0x01005001, 		 // bool Claimed
       2260, 2266, 0x02015003, 		 // int Color
       2270, 2285, 0x01015003, 		 // bool ConcurrentMICR
       2290, 2299, 0x02015003, 		 // int Contrast
       2303, 2328, 0x0a005001, 		 // QString ControlObjectDescription
       2336, 2357, 0x02005001, 		 // int ControlObjectVersion
       2361, 2375, 0x02005001, 		 // int CropAreaCount
       2379, 2389, 0x02005001, 		 // int DataCount
       2393, 2410, 0x01015003, 		 // bool DataEventEnabled
       2415, 2433, 0x0a005001, 		 // QString DeviceDescription
       2441, 2455, 0x01015003, 		 // bool DeviceEnabled
       2460, 2471, 0x0a005001, 		 // QString DeviceName
       2479, 2494, 0x02015003, 		 // int DocumentHeight
       2498, 2512, 0x02015003, 		 // int DocumentWidth
       2516, 2523, 0x0a015003, 		 // QString FileID
       2531, 2541, 0x02015003, 		 // int FileIndex
       2545, 2558, 0x01015003, 		 // bool FreezeEvents
       2563, 2573, 0x0a005001, 		 // QString ImageData
       2581, 2593, 0x02015003, 		 // int ImageFormat
       2597, 2615, 0x02005001, 		 // int ImageMemoryStatus
       2619, 2632, 0x0a015003, 		 // QString ImageTagData
       2640, 2648, 0x02015003, 		 // int MapMode
       2652, 2665, 0x02005001, 		 // int MaxCropAreas
       2669, 2680, 0x02005001, 		 // int OpenResult
       2684, 2696, 0x02015003, 		 // int PowerNotify
       2700, 2711, 0x02005001, 		 // int PowerState
       2715, 2723, 0x02015003, 		 // int Quality
       2727, 2739, 0x0a005001, 		 // QString QualityList
       2747, 2771, 0x02005001, 		 // int RemainingImagesEstimate
       2775, 2786, 0x02005001, 		 // int ResultCode
       2790, 2809, 0x02005001, 		 // int ResultCodeExtended
       2813, 2838, 0x0a005001, 		 // QString ServiceObjectDescription
       2846, 2867, 0x02005001, 		 // int ServiceObjectVersion
       2871, 2877, 0x02005001, 		 // int State
       2881, 2889, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_10() {
    static const char stringdata0[] = {
    "OPOS::IOPOSCheckScanner_1_10\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0"
    "int\0\0DefineCropArea(int,int,int,int,int)\0CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0"
    "\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0RetrieveMemory(int)\0By\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0"
    "AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0ConcurrentMICR\0\0\0SetContrast(int)\0Contrast\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0"
    "DeviceEnabled\0\0\0SetDocumentHeight(int)\0DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetImageFormat(int)\0"
    "ImageFormat\0\0\0SetImageTagData(QString)\0ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0"
    "int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapAutoContrast\0bool\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0bool\0CapAutoSize\0bool\0CapColor\0int\0"
    "CapCompareFirmwareVersion\0bool\0CapConcurrentMICR\0bool\0CapContrast\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0"
    "CapStoreImageFiles\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0Contrast\0int\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CropAreaCount\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0"
    "FileIndex\0int\0FreezeEvents\0bool\0ImageData\0QString\0ImageFormat\0int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0"
    "QString\0RemainingImagesEstimate\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSCheckScanner_1_10::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_10(),
qt_meta_data_OPOS__IOPOSCheckScanner_1_10 }
};

void *IOPOSCheckScanner_1_10::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_10()))
        return static_cast<void*>(const_cast<IOPOSCheckScanner_1_10*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSCheckScanner_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       47,    10, // methods
       56,    245, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       28, 67, 89, 90, 5,
       91, 116, 121, 122, 5,
       123, 149, 164, 165, 5,

 // slots: signature, parameters, type, tag, flags
       166, 186, 194, 198, 9,
       199, 217, 225, 229, 9,
       230, 247, 253, 257, 9,
       258, 275, 283, 287, 9,
       288, 304, 307, 311, 9,
       312, 325, 326, 330, 9,
       331, 339, 340, 344, 9,
       345, 382, 407, 411, 9,
       412, 448, 469, 473, 9,
       474, 502, 524, 528, 9,
       529, 544, 545, 549, 9,
       550, 563, 564, 568, 9,
       569, 583, 594, 598, 9,
       599, 615, 616, 620, 9,
       621, 646, 663, 667, 9,
       668, 687, 698, 702, 9,
       703, 723, 726, 730, 9,
       731, 760, 778, 782, 9,
       783, 795, 802, 803, 9,
       804, 834, 860, 861, 9,
       862, 888, 944, 945, 9,
       946, 973, 982, 983, 9,
       984, 998, 999, 1003, 9,
       1004, 1024, 1029, 1030, 9,
       1031, 1052, 1064, 1065, 9,
       1066, 1091, 1108, 1109, 9,
       1110, 1124, 1130, 1131, 9,
       1132, 1156, 1171, 1172, 9,
       1173, 1190, 1199, 1200, 9,
       1201, 1227, 1244, 1245, 9,
       1246, 1269, 1283, 1284, 9,
       1285, 1308, 1323, 1324, 9,
       1325, 1347, 1361, 1362, 9,
       1363, 1382, 1389, 1390, 9,
       1391, 1409, 1419, 1420, 9,
       1421, 1443, 1456, 1457, 9,
       1458, 1478, 1490, 1491, 9,
       1492, 1517, 1530, 1531, 9,
       1532, 1548, 1556, 1557, 9,
       1558, 1578, 1590, 1591, 9,
       1592, 1608, 1616, 1617, 9,
       1618, 1634, 1645, 1649, 9,
       1650, 1674, 1691, 1695, 9,
       1696, 1722, 1739, 1743, 9,

 // properties: name, type, flags
       1744, 1756, 0x01015003, 		 // bool AutoDisable
       1761, 1778, 0x02015003, 		 // int BinaryConversion
       1782, 1798, 0x01005001, 		 // bool CapAutoContrast
       1803, 1825, 0x01005001, 		 // bool CapAutoGenerateFileID
       1830, 1858, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       1863, 1875, 0x01005001, 		 // bool CapAutoSize
       1880, 1889, 0x02005001, 		 // int CapColor
       1893, 1919, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1924, 1942, 0x01005001, 		 // bool CapConcurrentMICR
       1947, 1959, 0x01005001, 		 // bool CapContrast
       1964, 1982, 0x01005001, 		 // bool CapDefineCropArea
       1987, 2002, 0x02005001, 		 // int CapImageFormat
       2006, 2022, 0x01005001, 		 // bool CapImageTagData
       2027, 2041, 0x01005001, 		 // bool CapMICRDevice
       2046, 2064, 0x02005001, 		 // int CapPowerReporting
       2068, 2091, 0x01005001, 		 // bool CapStatisticsReporting
       2096, 2115, 0x01005001, 		 // bool CapStoreImageFiles
       2120, 2138, 0x01005001, 		 // bool CapUpdateFirmware
       2143, 2163, 0x01005001, 		 // bool CapUpdateStatistics
       2168, 2188, 0x01005001, 		 // bool CapValidationDevice
       2193, 2209, 0x0a005001, 		 // QString CheckHealthText
       2217, 2225, 0x01005001, 		 // bool Claimed
       2230, 2236, 0x02015003, 		 // int Color
       2240, 2255, 0x01015003, 		 // bool ConcurrentMICR
       2260, 2269, 0x02015003, 		 // int Contrast
       2273, 2298, 0x0a005001, 		 // QString ControlObjectDescription
       2306, 2327, 0x02005001, 		 // int ControlObjectVersion
       2331, 2345, 0x02005001, 		 // int CropAreaCount
       2349, 2359, 0x02005001, 		 // int DataCount
       2363, 2380, 0x01015003, 		 // bool DataEventEnabled
       2385, 2403, 0x0a005001, 		 // QString DeviceDescription
       2411, 2425, 0x01015003, 		 // bool DeviceEnabled
       2430, 2441, 0x0a005001, 		 // QString DeviceName
       2449, 2464, 0x02015003, 		 // int DocumentHeight
       2468, 2482, 0x02015003, 		 // int DocumentWidth
       2486, 2493, 0x0a015003, 		 // QString FileID
       2501, 2511, 0x02015003, 		 // int FileIndex
       2515, 2528, 0x01015003, 		 // bool FreezeEvents
       2533, 2543, 0x0a005001, 		 // QString ImageData
       2551, 2563, 0x02015003, 		 // int ImageFormat
       2567, 2585, 0x02005001, 		 // int ImageMemoryStatus
       2589, 2602, 0x0a015003, 		 // QString ImageTagData
       2610, 2618, 0x02015003, 		 // int MapMode
       2622, 2635, 0x02005001, 		 // int MaxCropAreas
       2639, 2650, 0x02005001, 		 // int OpenResult
       2654, 2666, 0x02015003, 		 // int PowerNotify
       2670, 2681, 0x02005001, 		 // int PowerState
       2685, 2693, 0x02015003, 		 // int Quality
       2697, 2709, 0x0a005001, 		 // QString QualityList
       2717, 2741, 0x02005001, 		 // int RemainingImagesEstimate
       2745, 2756, 0x02005001, 		 // int ResultCode
       2760, 2779, 0x02005001, 		 // int ResultCodeExtended
       2783, 2808, 0x0a005001, 		 // QString ServiceObjectDescription
       2816, 2837, 0x02005001, 		 // int ServiceObjectVersion
       2841, 2847, 0x02005001, 		 // int State
       2851, 2859, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSCheckScanner_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DefineCropArea(int,int,int,int,int)\0"
    "CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0"
    "int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0RetrieveMemory(int)\0By\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0"
    "BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0ConcurrentMICR\0\0\0SetContrast(int)\0Contrast\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDocumentHeight(int)\0"
    "DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetImageFormat(int)\0ImageFormat\0\0\0SetImageTagData(QString)\0"
    "ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0"
    "StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapAutoContrast\0bool\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0bool\0CapAutoSize\0bool\0CapColor\0int\0CapCompareFirmwareVersion\0bool\0"
    "CapConcurrentMICR\0bool\0CapContrast\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapStoreImageFiles\0bool\0CapUpdateFirmware\0"
    "bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0Contrast\0int\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CropAreaCount\0"
    "int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0FileIndex\0int\0FreezeEvents\0bool\0ImageData\0QString\0"
    "ImageFormat\0int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0QString\0RemainingImagesEstimate\0int\0ResultCode\0"
    "int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSCheckScanner_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_9(),
qt_meta_data_OPOS__IOPOSCheckScanner_1_9 }
};

void *IOPOSCheckScanner_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_9()))
        return static_cast<void*>(const_cast<IOPOSCheckScanner_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSCheckScanner_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       44,    10, // methods
       51,    230, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       28, 67, 89, 90, 5,
       91, 116, 121, 122, 5,
       123, 149, 164, 165, 5,

 // slots: signature, parameters, type, tag, flags
       166, 186, 194, 198, 9,
       199, 217, 225, 229, 9,
       230, 247, 253, 257, 9,
       258, 275, 283, 287, 9,
       288, 304, 307, 311, 9,
       312, 325, 326, 330, 9,
       331, 339, 340, 344, 9,
       345, 381, 402, 406, 9,
       407, 435, 457, 461, 9,
       462, 477, 478, 482, 9,
       483, 496, 497, 501, 9,
       502, 516, 527, 531, 9,
       532, 548, 549, 553, 9,
       554, 579, 596, 600, 9,
       601, 620, 631, 635, 9,
       636, 656, 659, 663, 9,
       664, 693, 711, 715, 9,
       716, 728, 735, 736, 9,
       737, 767, 793, 794, 9,
       795, 821, 877, 878, 9,
       879, 906, 915, 916, 9,
       917, 931, 932, 936, 9,
       937, 957, 962, 963, 9,
       964, 985, 997, 998, 9,
       999, 1024, 1041, 1042, 9,
       1043, 1057, 1063, 1064, 9,
       1065, 1089, 1104, 1105, 9,
       1106, 1132, 1149, 1150, 9,
       1151, 1174, 1188, 1189, 9,
       1190, 1213, 1228, 1229, 9,
       1230, 1252, 1266, 1267, 9,
       1268, 1287, 1294, 1295, 9,
       1296, 1314, 1324, 1325, 9,
       1326, 1348, 1361, 1362, 9,
       1363, 1383, 1395, 1396, 9,
       1397, 1422, 1435, 1436, 9,
       1437, 1453, 1461, 1462, 9,
       1463, 1483, 1495, 1496, 9,
       1497, 1513, 1521, 1522, 9,
       1523, 1539, 1550, 1554, 9,
       1555, 1581, 1598, 1602, 9,

 // properties: name, type, flags
       1603, 1615, 0x01015003, 		 // bool AutoDisable
       1620, 1637, 0x02015003, 		 // int BinaryConversion
       1641, 1663, 0x01005001, 		 // bool CapAutoGenerateFileID
       1668, 1696, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       1701, 1713, 0x01005001, 		 // bool CapAutoSize
       1718, 1727, 0x02005001, 		 // int CapColor
       1731, 1749, 0x01005001, 		 // bool CapConcurrentMICR
       1754, 1772, 0x01005001, 		 // bool CapDefineCropArea
       1777, 1792, 0x02005001, 		 // int CapImageFormat
       1796, 1812, 0x01005001, 		 // bool CapImageTagData
       1817, 1831, 0x01005001, 		 // bool CapMICRDevice
       1836, 1854, 0x02005001, 		 // int CapPowerReporting
       1858, 1881, 0x01005001, 		 // bool CapStatisticsReporting
       1886, 1905, 0x01005001, 		 // bool CapStoreImageFiles
       1910, 1930, 0x01005001, 		 // bool CapUpdateStatistics
       1935, 1955, 0x01005001, 		 // bool CapValidationDevice
       1960, 1976, 0x0a005001, 		 // QString CheckHealthText
       1984, 1992, 0x01005001, 		 // bool Claimed
       1997, 2003, 0x02015003, 		 // int Color
       2007, 2022, 0x01015003, 		 // bool ConcurrentMICR
       2027, 2052, 0x0a005001, 		 // QString ControlObjectDescription
       2060, 2081, 0x02005001, 		 // int ControlObjectVersion
       2085, 2099, 0x02005001, 		 // int CropAreaCount
       2103, 2113, 0x02005001, 		 // int DataCount
       2117, 2134, 0x01015003, 		 // bool DataEventEnabled
       2139, 2157, 0x0a005001, 		 // QString DeviceDescription
       2165, 2179, 0x01015003, 		 // bool DeviceEnabled
       2184, 2195, 0x0a005001, 		 // QString DeviceName
       2203, 2218, 0x02015003, 		 // int DocumentHeight
       2222, 2236, 0x02015003, 		 // int DocumentWidth
       2240, 2247, 0x0a015003, 		 // QString FileID
       2255, 2265, 0x02015003, 		 // int FileIndex
       2269, 2282, 0x01015003, 		 // bool FreezeEvents
       2287, 2297, 0x0a005001, 		 // QString ImageData
       2305, 2317, 0x02015003, 		 // int ImageFormat
       2321, 2339, 0x02005001, 		 // int ImageMemoryStatus
       2343, 2356, 0x0a015003, 		 // QString ImageTagData
       2364, 2372, 0x02015003, 		 // int MapMode
       2376, 2389, 0x02005001, 		 // int MaxCropAreas
       2393, 2404, 0x02005001, 		 // int OpenResult
       2408, 2420, 0x02015003, 		 // int PowerNotify
       2424, 2435, 0x02005001, 		 // int PowerState
       2439, 2447, 0x02015003, 		 // int Quality
       2451, 2463, 0x0a005001, 		 // QString QualityList
       2471, 2495, 0x02005001, 		 // int RemainingImagesEstimate
       2499, 2510, 0x02005001, 		 // int ResultCode
       2514, 2533, 0x02005001, 		 // int ResultCodeExtended
       2537, 2562, 0x0a005001, 		 // QString ServiceObjectDescription
       2570, 2591, 0x02005001, 		 // int ServiceObjectVersion
       2595, 2601, 0x02005001, 		 // int State
       2605, 2613, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSCheckScanner_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0DefineCropArea(int,int,int,int,int)\0CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0"
    "RetrieveMemory(int)\0By\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0"
    "\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0"
    "ConcurrentMICR\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDocumentHeight(int)\0DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0"
    "\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetImageFormat(int)\0ImageFormat\0\0\0SetImageTagData(QString)\0ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0"
    "bool\0CapAutoSize\0bool\0CapColor\0int\0CapConcurrentMICR\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapStoreImageFiles\0"
    "bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CropAreaCount\0int\0DataCount\0"
    "int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0FileIndex\0int\0FreezeEvents\0bool\0ImageData\0QString\0ImageFormat\0"
    "int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0QString\0RemainingImagesEstimate\0int\0ResultCode\0int\0ResultCodeExtended\0"
    "int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSCheckScanner_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_8(),
qt_meta_data_OPOS__IOPOSCheckScanner_1_8 }
};

void *IOPOSCheckScanner_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_8()))
        return static_cast<void*>(const_cast<IOPOSCheckScanner_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSCheckScanner_1_7[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       41,    10, // methods
       49,    215, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       28, 67, 89, 90, 5,
       91, 116, 121, 122, 5,
       123, 149, 164, 165, 5,

 // slots: signature, parameters, type, tag, flags
       166, 186, 194, 198, 9,
       199, 217, 225, 229, 9,
       230, 247, 253, 257, 9,
       258, 275, 283, 287, 9,
       288, 304, 307, 311, 9,
       312, 325, 326, 330, 9,
       331, 339, 340, 344, 9,
       345, 381, 402, 406, 9,
       407, 435, 457, 461, 9,
       462, 477, 478, 482, 9,
       483, 496, 497, 501, 9,
       502, 516, 527, 531, 9,
       532, 548, 549, 553, 9,
       554, 573, 584, 588, 9,
       589, 609, 612, 616, 9,
       617, 629, 636, 637, 9,
       638, 668, 694, 695, 9,
       696, 722, 778, 779, 9,
       780, 807, 816, 817, 9,
       818, 832, 833, 837, 9,
       838, 858, 863, 864, 9,
       865, 886, 898, 899, 9,
       900, 925, 942, 943, 9,
       944, 958, 964, 965, 9,
       966, 990, 1005, 1006, 9,
       1007, 1033, 1050, 1051, 9,
       1052, 1075, 1089, 1090, 9,
       1091, 1114, 1129, 1130, 9,
       1131, 1153, 1167, 1168, 9,
       1169, 1188, 1195, 1196, 9,
       1197, 1215, 1225, 1226, 9,
       1227, 1249, 1262, 1263, 9,
       1264, 1284, 1296, 1297, 9,
       1298, 1323, 1336, 1337, 9,
       1338, 1354, 1362, 1363, 9,
       1364, 1384, 1396, 1397, 9,
       1398, 1414, 1422, 1423, 9,
       1424, 1440, 1451, 1455, 9,

 // properties: name, type, flags
       1456, 1468, 0x01015003, 		 // bool AutoDisable
       1473, 1490, 0x02015003, 		 // int BinaryConversion
       1494, 1516, 0x01005001, 		 // bool CapAutoGenerateFileID
       1521, 1549, 0x01005001, 		 // bool CapAutoGenerateImageTagData
       1554, 1566, 0x01005001, 		 // bool CapAutoSize
       1571, 1580, 0x02005001, 		 // int CapColor
       1584, 1602, 0x01005001, 		 // bool CapConcurrentMICR
       1607, 1625, 0x01005001, 		 // bool CapDefineCropArea
       1630, 1645, 0x02005001, 		 // int CapImageFormat
       1649, 1665, 0x01005001, 		 // bool CapImageTagData
       1670, 1684, 0x01005001, 		 // bool CapMICRDevice
       1689, 1707, 0x02005001, 		 // int CapPowerReporting
       1711, 1730, 0x01005001, 		 // bool CapStoreImageFiles
       1735, 1755, 0x01005001, 		 // bool CapValidationDevice
       1760, 1776, 0x0a005001, 		 // QString CheckHealthText
       1784, 1792, 0x01005001, 		 // bool Claimed
       1797, 1803, 0x02015003, 		 // int Color
       1807, 1822, 0x01015003, 		 // bool ConcurrentMICR
       1827, 1852, 0x0a005001, 		 // QString ControlObjectDescription
       1860, 1881, 0x02005001, 		 // int ControlObjectVersion
       1885, 1899, 0x02005001, 		 // int CropAreaCount
       1903, 1913, 0x02005001, 		 // int DataCount
       1917, 1934, 0x01015003, 		 // bool DataEventEnabled
       1939, 1957, 0x0a005001, 		 // QString DeviceDescription
       1965, 1979, 0x01015003, 		 // bool DeviceEnabled
       1984, 1995, 0x0a005001, 		 // QString DeviceName
       2003, 2018, 0x02015003, 		 // int DocumentHeight
       2022, 2036, 0x02015003, 		 // int DocumentWidth
       2040, 2047, 0x0a015003, 		 // QString FileID
       2055, 2065, 0x02015003, 		 // int FileIndex
       2069, 2082, 0x01015003, 		 // bool FreezeEvents
       2087, 2097, 0x0a005001, 		 // QString ImageData
       2105, 2117, 0x02015003, 		 // int ImageFormat
       2121, 2139, 0x02005001, 		 // int ImageMemoryStatus
       2143, 2156, 0x0a015003, 		 // QString ImageTagData
       2164, 2172, 0x02015003, 		 // int MapMode
       2176, 2189, 0x02005001, 		 // int MaxCropAreas
       2193, 2204, 0x02005001, 		 // int OpenResult
       2208, 2220, 0x02015003, 		 // int PowerNotify
       2224, 2235, 0x02005001, 		 // int PowerState
       2239, 2247, 0x02015003, 		 // int Quality
       2251, 2263, 0x0a005001, 		 // QString QualityList
       2271, 2295, 0x02005001, 		 // int RemainingImagesEstimate
       2299, 2310, 0x02005001, 		 // int ResultCode
       2314, 2333, 0x02005001, 		 // int ResultCodeExtended
       2337, 2362, 0x0a005001, 		 // QString ServiceObjectDescription
       2370, 2391, 0x02005001, 		 // int ServiceObjectVersion
       2395, 2401, 0x02005001, 		 // int State
       2405, 2413, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_7() {
    static const char stringdata0[] = {
    "OPOS::IOPOSCheckScanner_1_7\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearImage(int)\0By\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0DefineCropArea(int,int,int,int,int)\0CropAreaID,X,Y,CX,CY\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0RetrieveImage(int)\0CropAreaID\0int\0\0RetrieveMemory(int)\0By\0int\0\0SOData(int)\0Status\0"
    "\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0"
    "\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetColor(int)\0Color\0\0\0SetConcurrentMICR(bool)\0ConcurrentMICR\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetDocumentHeight(int)\0DocumentHeight\0\0\0SetDocumentWidth(int)\0DocumentWidth\0\0\0SetFileID(QString)\0FileID\0\0\0SetFileIndex(int)\0FileIndex\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetImageFormat(int)\0ImageFormat\0\0\0SetImageTagData(QString)\0ImageTagData\0\0\0SetMapMode(int)\0MapMode\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetQuality(int)\0Quality\0\0\0StoreImage(int)\0CropAreaID\0int\0\0"
    "AutoDisable\0"
    "bool\0BinaryConversion\0int\0CapAutoGenerateFileID\0bool\0CapAutoGenerateImageTagData\0bool\0CapAutoSize\0bool\0CapColor\0int\0CapConcurrentMICR\0bool\0CapDefineCropArea\0bool\0CapImageFormat\0int\0CapImageTagData\0bool\0"
    "CapMICRDevice\0bool\0CapPowerReporting\0int\0CapStoreImageFiles\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0Claimed\0bool\0Color\0int\0ConcurrentMICR\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0"
    "int\0CropAreaCount\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0DocumentHeight\0int\0DocumentWidth\0int\0FileID\0QString\0FileIndex\0int\0FreezeEvents\0"
    "bool\0ImageData\0QString\0ImageFormat\0int\0ImageMemoryStatus\0int\0ImageTagData\0QString\0MapMode\0int\0MaxCropAreas\0int\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0Quality\0int\0QualityList\0QString\0RemainingImagesEstimate\0"
    "int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSCheckScanner_1_7::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_7(),
qt_meta_data_OPOS__IOPOSCheckScanner_1_7 }
};

void *IOPOSCheckScanner_1_7::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSCheckScanner_1_7()))
        return static_cast<void*>(const_cast<IOPOSCheckScanner_1_7*>(this));
    return QAxObject::qt_metacast(_clname);
}

