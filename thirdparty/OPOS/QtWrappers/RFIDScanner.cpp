/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSRFIDScanner.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\RFIDScanner.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSRFIDScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       3,    10, // classinfo
       46,    16, // methods
       39,    246, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       22, 40, 
       64, 76, 
       93, 105, 

 // signals: signature, parameters, type, tag, flags
       127, 142, 149, 150, 5,
       151, 184, 210, 211, 5,
       212, 241, 297, 298, 5,
       299, 324, 333, 334, 5,
       335, 358, 363, 364, 5,
       365, 404, 426, 427, 5,
       428, 453, 458, 459, 5,
       460, 486, 501, 502, 5,

 // slots: signature, parameters, type, tag, flags
       503, 520, 526, 530, 9,
       531, 548, 556, 560, 9,
       561, 574, 575, 579, 9,
       580, 603, 604, 608, 9,
       609, 623, 624, 628, 9,
       629, 637, 638, 642, 9,
       643, 680, 705, 709, 9,
       710, 738, 760, 764, 9,
       765, 797, 820, 824, 9,
       825, 836, 837, 841, 9,
       842, 871, 894, 898, 9,
       899, 909, 910, 914, 9,
       915, 929, 940, 944, 9,
       945, 959, 960, 964, 9,
       965, 1015, 1069, 1073, 9,
       1074, 1090, 1091, 1095, 9,
       1096, 1121, 1138, 1142, 9,
       1143, 1172, 1190, 1194, 9,
       1195, 1207, 1214, 1215, 9,
       1216, 1246, 1272, 1273, 9,
       1274, 1300, 1356, 1357, 9,
       1358, 1380, 1389, 1390, 9,
       1391, 1405, 1406, 1410, 9,
       1411, 1431, 1436, 1437, 9,
       1438, 1459, 1471, 1472, 9,
       1473, 1498, 1515, 1516, 9,
       1517, 1543, 1560, 1561, 9,
       1562, 1585, 1599, 1600, 9,
       1601, 1623, 1636, 1637, 9,
       1638, 1658, 1670, 1671, 9,
       1672, 1693, 1706, 1707, 9,
       1708, 1734, 1752, 1753, 9,
       1754, 1805, 1851, 1855, 9,
       1856, 1878, 1887, 1891, 9,
       1892, 1916, 1933, 1937, 9,
       1938, 1964, 1981, 1985, 9,
       1986, 2032, 2070, 2074, 9,
       2075, 2115, 2148, 2152, 9,

 // properties: name, type, flags
       2153, 2165, 0x01015003, 		 // bool AutoDisable
       2170, 2187, 0x02015003, 		 // int BinaryConversion
       2191, 2217, 0x01005001, 		 // bool CapCompareFirmwareVersion
       2222, 2240, 0x01005001, 		 // bool CapContinuousRead
       2245, 2259, 0x01005001, 		 // bool CapDisableTag
       2264, 2275, 0x01005001, 		 // bool CapLockTag
       2280, 2301, 0x02005001, 		 // int CapMultipleProtocols
       2305, 2323, 0x02005001, 		 // int CapPowerReporting
       2327, 2340, 0x01005001, 		 // bool CapReadTimer
       2345, 2368, 0x01005001, 		 // bool CapStatisticsReporting
       2373, 2391, 0x01005001, 		 // bool CapUpdateFirmware
       2396, 2416, 0x01005001, 		 // bool CapUpdateStatistics
       2421, 2433, 0x02005001, 		 // int CapWriteTag
       2437, 2453, 0x0a005001, 		 // QString CheckHealthText
       2461, 2469, 0x01005001, 		 // bool Claimed
       2474, 2493, 0x01005001, 		 // bool ContinuousReadMode
       2498, 2523, 0x0a005001, 		 // QString ControlObjectDescription
       2531, 2552, 0x02005001, 		 // int ControlObjectVersion
       2556, 2569, 0x0a005001, 		 // QString CurrentTagID
       2577, 2596, 0x02005001, 		 // int CurrentTagProtocol
       2600, 2619, 0x0a005001, 		 // QString CurrentTagUserData
       2627, 2637, 0x02005001, 		 // int DataCount
       2641, 2658, 0x01015003, 		 // bool DataEventEnabled
       2663, 2681, 0x0a005001, 		 // QString DeviceDescription
       2689, 2703, 0x01015003, 		 // bool DeviceEnabled
       2708, 2719, 0x0a005001, 		 // QString DeviceName
       2727, 2740, 0x01015003, 		 // bool FreezeEvents
       2745, 2756, 0x02005001, 		 // int OpenResult
       2760, 2769, 0x02005001, 		 // int OutputID
       2773, 2785, 0x02015003, 		 // int PowerNotify
       2789, 2800, 0x02005001, 		 // int PowerState
       2804, 2817, 0x02015003, 		 // int ProtocolMask
       2821, 2839, 0x02015003, 		 // int ReadTimerInterval
       2843, 2854, 0x02005001, 		 // int ResultCode
       2858, 2877, 0x02005001, 		 // int ResultCodeExtended
       2881, 2906, 0x0a005001, 		 // QString ServiceObjectDescription
       2914, 2935, 0x02005001, 		 // int ServiceObjectVersion
       2939, 2945, 0x02005001, 		 // int State
       2949, 2958, 0x02005001, 		 // int TagCount

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSRFIDScanner() {
    static const char stringdata0[] = {
    "OPOS::OPOSRFIDScanner\0"
    "Event Interface 2\0_IOPOSRFIDScannerEvents\0Interface 0\0IOPOSRFIDScanner\0Interface 1\0IOPOSRFIDScanner_1_12\0"
    "DataEvent(int)\0Status\0\0\0DirectIOEvent(int,int&,QString&)\0EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0OutputCompleteEvent(int)\0OutputID\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0"
    "name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0"
    "FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisableTag(QString,int,QString)\0TagID,Timeout,Password\0int\0\0FirstTag()\0\0int\0\0LockTag(QString,int,QString)\0TagID,Timeout,Password\0"
    "int\0\0NextTag()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0PreviousTag()\0\0int\0\0ReadTags(int,QString,QString,int,int,int,QString)\0Cmd,FilterID,Filtermask,Start,Length,Timeout,Password\0int\0\0ReleaseDevice()\0\0int\0"
    "\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0"
    "ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0"
    "\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetProtocolMask(int)\0ProtocolMask\0\0\0SetReadTimerInterval(int)\0"
    "ReadTimerInterval\0\0\0StartReadTags(int,QString,QString,int,int,QString)\0Cmd,FilterID,Filtermask,Start,Length,Password\0int\0\0StopReadTags(QString)\0Password\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0"
    "\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTagData(QString,QString,int,int,QString)\0TagID,Userdata,Start,Timeout,Password\0int\0\0WriteTagID(QString,QString,int,QString)\0SourceID,DestID,Timeout,Password\0"
    "int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapContinuousRead\0bool\0CapDisableTag\0bool\0CapLockTag\0bool\0CapMultipleProtocols\0int\0CapPowerReporting\0int\0CapReadTimer\0bool\0CapStatisticsReporting\0"
    "bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWriteTag\0int\0CheckHealthText\0QString\0Claimed\0bool\0ContinuousReadMode\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentTagID\0"
    "QString\0CurrentTagProtocol\0int\0CurrentTagUserData\0QString\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0OutputID\0int\0"
    "PowerNotify\0int\0PowerState\0int\0ProtocolMask\0int\0ReadTimerInterval\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TagCount\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSRFIDScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSRFIDScanner(),
qt_meta_data_OPOS__OPOSRFIDScanner }
};

void *OPOSRFIDScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSRFIDScanner()))
        return static_cast<void*>(const_cast<OPOSRFIDScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSRFIDScanner[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       41,    10, // methods
       40,    215, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 178, 184, 188, 9,
       189, 206, 214, 218, 9,
       219, 232, 233, 237, 9,
       238, 261, 262, 266, 9,
       267, 281, 282, 286, 9,
       287, 295, 296, 300, 9,
       301, 338, 363, 367, 9,
       368, 396, 418, 422, 9,
       423, 455, 478, 482, 9,
       483, 494, 495, 499, 9,
       500, 529, 552, 556, 9,
       557, 567, 568, 572, 9,
       573, 587, 598, 602, 9,
       603, 617, 618, 622, 9,
       623, 673, 727, 731, 9,
       732, 748, 749, 753, 9,
       754, 779, 796, 800, 9,
       801, 830, 848, 852, 9,
       853, 865, 872, 873, 9,
       874, 904, 930, 931, 9,
       932, 958, 1014, 1015, 9,
       1016, 1038, 1047, 1048, 9,
       1049, 1063, 1064, 1068, 9,
       1069, 1089, 1094, 1095, 9,
       1096, 1117, 1129, 1130, 9,
       1131, 1156, 1173, 1174, 9,
       1175, 1201, 1218, 1219, 9,
       1220, 1243, 1257, 1258, 9,
       1259, 1281, 1294, 1295, 9,
       1296, 1316, 1328, 1329, 9,
       1330, 1351, 1364, 1365, 9,
       1366, 1392, 1410, 1411, 9,
       1412, 1463, 1509, 1513, 9,
       1514, 1536, 1545, 1549, 9,
       1550, 1574, 1591, 1595, 9,
       1596, 1622, 1639, 1643, 9,
       1644, 1690, 1728, 1732, 9,
       1733, 1773, 1806, 1810, 9,

 // properties: name, type, flags
       1811, 1823, 0x01015003, 		 // bool AutoDisable
       1828, 1845, 0x02015003, 		 // int BinaryConversion
       1849, 1875, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1880, 1898, 0x01005001, 		 // bool CapContinuousRead
       1903, 1917, 0x01005001, 		 // bool CapDisableTag
       1922, 1933, 0x01005001, 		 // bool CapLockTag
       1938, 1959, 0x02005001, 		 // int CapMultipleProtocols
       1963, 1981, 0x02005001, 		 // int CapPowerReporting
       1985, 1998, 0x01005001, 		 // bool CapReadTimer
       2003, 2026, 0x01005001, 		 // bool CapStatisticsReporting
       2031, 2049, 0x01005001, 		 // bool CapUpdateFirmware
       2054, 2074, 0x01005001, 		 // bool CapUpdateStatistics
       2079, 2091, 0x02005001, 		 // int CapWriteTag
       2095, 2111, 0x0a005001, 		 // QString CheckHealthText
       2119, 2127, 0x01005001, 		 // bool Claimed
       2132, 2151, 0x01005001, 		 // bool ContinuousReadMode
       2156, 2181, 0x0a005001, 		 // QString ControlObjectDescription
       2189, 2210, 0x02005001, 		 // int ControlObjectVersion
       2214, 2227, 0x0a005001, 		 // QString CurrentTagID
       2235, 2254, 0x02005001, 		 // int CurrentTagProtocol
       2258, 2277, 0x0a005001, 		 // QString CurrentTagUserData
       2285, 2295, 0x02005001, 		 // int DataCount
       2299, 2316, 0x01015003, 		 // bool DataEventEnabled
       2321, 2339, 0x0a005001, 		 // QString DeviceDescription
       2347, 2361, 0x01015003, 		 // bool DeviceEnabled
       2366, 2377, 0x0a005001, 		 // QString DeviceName
       2385, 2398, 0x01015003, 		 // bool FreezeEvents
       2403, 2414, 0x02005001, 		 // int OpenResult
       2418, 2427, 0x02005001, 		 // int OutputID
       2431, 2443, 0x02015003, 		 // int PowerNotify
       2447, 2458, 0x02005001, 		 // int PowerState
       2462, 2475, 0x02015003, 		 // int ProtocolMask
       2479, 2497, 0x02015003, 		 // int ReadTimerInterval
       2501, 2512, 0x02005001, 		 // int ResultCode
       2516, 2535, 0x02005001, 		 // int ResultCodeExtended
       2539, 2564, 0x0a005001, 		 // QString ServiceObjectDescription
       2572, 2593, 0x02005001, 		 // int ServiceObjectVersion
       2597, 2603, 0x02005001, 		 // int State
       2607, 2616, 0x02005001, 		 // int TagCount
       2620, 2628, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSRFIDScanner() {
    static const char stringdata0[] = {
    "OPOS::IOPOSRFIDScanner\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisableTag(QString,int,QString)\0"
    "TagID,Timeout,Password\0int\0\0FirstTag()\0\0int\0\0LockTag(QString,int,QString)\0TagID,Timeout,Password\0int\0\0NextTag()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0PreviousTag()\0\0int\0\0ReadTags(int,QString,QString,int,int,int,QString)\0"
    "Cmd,FilterID,Filtermask,Start,Length,Timeout,Password\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0"
    "SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0"
    "Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetProtocolMask(int)\0ProtocolMask\0\0\0SetReadTimerInterval(int)\0ReadTimerInterval\0\0\0StartReadTags(int,QString,QString,int,int,QString)\0Cmd,FilterID,Filtermask,Start,Length,Password\0"
    "int\0\0StopReadTags(QString)\0Password\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTagData(QString,QString,int,int,QString)\0TagID,Userdata,Start,Timeout,Password\0"
    "int\0\0WriteTagID(QString,QString,int,QString)\0SourceID,DestID,Timeout,Password\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapContinuousRead\0bool\0CapDisableTag\0bool\0CapLockTag\0"
    "bool\0CapMultipleProtocols\0int\0CapPowerReporting\0int\0CapReadTimer\0bool\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWriteTag\0int\0CheckHealthText\0QString\0Claimed\0bool\0ContinuousReadMode\0"
    "bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentTagID\0QString\0CurrentTagProtocol\0int\0CurrentTagUserData\0QString\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ProtocolMask\0int\0ReadTimerInterval\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0TagCount\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSRFIDScanner::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSRFIDScanner(),
qt_meta_data_OPOS__IOPOSRFIDScanner }
};

void *IOPOSRFIDScanner::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSRFIDScanner()))
        return static_cast<void*>(const_cast<IOPOSRFIDScanner*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSRFIDScanner_1_12[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       41,    10, // methods
       40,    215, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       28, 67, 89, 90, 5,
       91, 116, 121, 122, 5,
       123, 149, 164, 165, 5,

 // slots: signature, parameters, type, tag, flags
       166, 183, 189, 193, 9,
       194, 211, 219, 223, 9,
       224, 237, 238, 242, 9,
       243, 266, 267, 271, 9,
       272, 286, 287, 291, 9,
       292, 300, 301, 305, 9,
       306, 343, 368, 372, 9,
       373, 401, 423, 427, 9,
       428, 460, 483, 487, 9,
       488, 499, 500, 504, 9,
       505, 534, 557, 561, 9,
       562, 572, 573, 577, 9,
       578, 592, 603, 607, 9,
       608, 622, 623, 627, 9,
       628, 678, 732, 736, 9,
       737, 753, 754, 758, 9,
       759, 784, 801, 805, 9,
       806, 835, 853, 857, 9,
       858, 870, 877, 878, 9,
       879, 909, 935, 936, 9,
       937, 963, 1019, 1020, 9,
       1021, 1043, 1052, 1053, 9,
       1054, 1068, 1069, 1073, 9,
       1074, 1094, 1099, 1100, 9,
       1101, 1122, 1134, 1135, 9,
       1136, 1161, 1178, 1179, 9,
       1180, 1206, 1223, 1224, 9,
       1225, 1248, 1262, 1263, 9,
       1264, 1286, 1299, 1300, 9,
       1301, 1321, 1333, 1334, 9,
       1335, 1356, 1369, 1370, 9,
       1371, 1397, 1415, 1416, 9,
       1417, 1468, 1514, 1518, 9,
       1519, 1541, 1550, 1554, 9,
       1555, 1579, 1596, 1600, 9,
       1601, 1627, 1644, 1648, 9,
       1649, 1695, 1733, 1737, 9,
       1738, 1778, 1811, 1815, 9,

 // properties: name, type, flags
       1816, 1828, 0x01015003, 		 // bool AutoDisable
       1833, 1850, 0x02015003, 		 // int BinaryConversion
       1854, 1880, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1885, 1903, 0x01005001, 		 // bool CapContinuousRead
       1908, 1922, 0x01005001, 		 // bool CapDisableTag
       1927, 1938, 0x01005001, 		 // bool CapLockTag
       1943, 1964, 0x02005001, 		 // int CapMultipleProtocols
       1968, 1986, 0x02005001, 		 // int CapPowerReporting
       1990, 2003, 0x01005001, 		 // bool CapReadTimer
       2008, 2031, 0x01005001, 		 // bool CapStatisticsReporting
       2036, 2054, 0x01005001, 		 // bool CapUpdateFirmware
       2059, 2079, 0x01005001, 		 // bool CapUpdateStatistics
       2084, 2096, 0x02005001, 		 // int CapWriteTag
       2100, 2116, 0x0a005001, 		 // QString CheckHealthText
       2124, 2132, 0x01005001, 		 // bool Claimed
       2137, 2156, 0x01005001, 		 // bool ContinuousReadMode
       2161, 2186, 0x0a005001, 		 // QString ControlObjectDescription
       2194, 2215, 0x02005001, 		 // int ControlObjectVersion
       2219, 2232, 0x0a005001, 		 // QString CurrentTagID
       2240, 2259, 0x02005001, 		 // int CurrentTagProtocol
       2263, 2282, 0x0a005001, 		 // QString CurrentTagUserData
       2290, 2300, 0x02005001, 		 // int DataCount
       2304, 2321, 0x01015003, 		 // bool DataEventEnabled
       2326, 2344, 0x0a005001, 		 // QString DeviceDescription
       2352, 2366, 0x01015003, 		 // bool DeviceEnabled
       2371, 2382, 0x0a005001, 		 // QString DeviceName
       2390, 2403, 0x01015003, 		 // bool FreezeEvents
       2408, 2419, 0x02005001, 		 // int OpenResult
       2423, 2432, 0x02005001, 		 // int OutputID
       2436, 2448, 0x02015003, 		 // int PowerNotify
       2452, 2463, 0x02005001, 		 // int PowerState
       2467, 2480, 0x02015003, 		 // int ProtocolMask
       2484, 2502, 0x02015003, 		 // int ReadTimerInterval
       2506, 2517, 0x02005001, 		 // int ResultCode
       2521, 2540, 0x02005001, 		 // int ResultCodeExtended
       2544, 2569, 0x0a005001, 		 // QString ServiceObjectDescription
       2577, 2598, 0x02005001, 		 // int ServiceObjectVersion
       2602, 2608, 0x02005001, 		 // int State
       2612, 2621, 0x02005001, 		 // int TagCount
       2625, 2633, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSRFIDScanner_1_12() {
    static const char stringdata0[] = {
    "OPOS::IOPOSRFIDScanner_1_12\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0ClearOutput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0DisableTag(QString,int,QString)\0"
    "TagID,Timeout,Password\0int\0\0FirstTag()\0\0int\0\0LockTag(QString,int,QString)\0TagID,Timeout,Password\0int\0\0NextTag()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0PreviousTag()\0\0int\0\0ReadTags(int,QString,QString,int,int,int,QString)\0"
    "Cmd,FilterID,Filtermask,Start,Length,Timeout,Password\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0"
    "SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputComplete(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0"
    "Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0"
    "\0\0SetPowerNotify(int)\0PowerNotify\0\0\0SetProtocolMask(int)\0ProtocolMask\0\0\0SetReadTimerInterval(int)\0ReadTimerInterval\0\0\0StartReadTags(int,QString,QString,int,int,QString)\0Cmd,FilterID,Filtermask,Start,Length,Password\0"
    "int\0\0StopReadTags(QString)\0Password\0int\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0WriteTagData(QString,QString,int,int,QString)\0TagID,Userdata,Start,Timeout,Password\0"
    "int\0\0WriteTagID(QString,QString,int,QString)\0SourceID,DestID,Timeout,Password\0int\0\0"
    "AutoDisable\0bool\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapContinuousRead\0bool\0CapDisableTag\0bool\0CapLockTag\0"
    "bool\0CapMultipleProtocols\0int\0CapPowerReporting\0int\0CapReadTimer\0bool\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapWriteTag\0int\0CheckHealthText\0QString\0Claimed\0bool\0ContinuousReadMode\0"
    "bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CurrentTagID\0QString\0CurrentTagProtocol\0int\0CurrentTagUserData\0QString\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0FreezeEvents\0bool\0OpenResult\0int\0OutputID\0int\0PowerNotify\0int\0PowerState\0int\0ProtocolMask\0int\0ReadTimerInterval\0int\0ResultCode\0int\0ResultCodeExtended\0int\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0TagCount\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSRFIDScanner_1_12::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSRFIDScanner_1_12(),
qt_meta_data_OPOS__IOPOSRFIDScanner_1_12 }
};

void *IOPOSRFIDScanner_1_12::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSRFIDScanner_1_12()))
        return static_cast<void*>(const_cast<IOPOSRFIDScanner_1_12*>(this));
    return QAxObject::qt_metacast(_clname);
}

