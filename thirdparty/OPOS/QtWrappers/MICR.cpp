/****************************************************************************
**
** Metadata for OPOS generated by dumpcpp from type library
** OPOS\CommonCO\OPOSMICR.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_OPOS_NOINLINES
#include "OPOS\QtWrappers\MICR.h"

using namespace OPOS;

static const uint qt_meta_data_OPOS__OPOSMICR[] = {

 // content:
       1,       // revision
       0,       // classname
       6,    10, // classinfo
       36,    22, // methods
       35,    202, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       15, 33, 
       50, 62, 
       72, 84, 
       99, 111, 
       125, 137, 
       151, 163, 

 // signals: signature, parameters, type, tag, flags
       177, 192, 199, 200, 5,
       201, 234, 260, 261, 5,
       262, 291, 347, 348, 5,
       349, 372, 377, 378, 5,
       379, 418, 440, 441, 5,
       442, 467, 472, 473, 5,
       474, 500, 515, 516, 5,

 // slots: signature, parameters, type, tag, flags
       517, 537, 545, 549, 9,
       550, 568, 576, 580, 9,
       581, 598, 604, 608, 9,
       609, 626, 634, 638, 9,
       639, 652, 653, 657, 9,
       658, 681, 682, 686, 9,
       687, 695, 696, 700, 9,
       701, 738, 763, 767, 9,
       768, 796, 818, 822, 9,
       823, 838, 839, 843, 9,
       844, 857, 858, 862, 9,
       863, 877, 888, 892, 9,
       893, 909, 910, 914, 9,
       915, 940, 957, 961, 9,
       962, 991, 1009, 1013, 9,
       1014, 1026, 1033, 1034, 9,
       1035, 1065, 1091, 1092, 9,
       1093, 1119, 1175, 1176, 9,
       1177, 1204, 1213, 1214, 9,
       1215, 1229, 1230, 1234, 9,
       1235, 1255, 1260, 1261, 9,
       1262, 1283, 1295, 1296, 9,
       1297, 1322, 1339, 1340, 9,
       1341, 1367, 1384, 1385, 9,
       1386, 1409, 1423, 1424, 9,
       1425, 1447, 1460, 1461, 9,
       1462, 1482, 1494, 1495, 9,
       1496, 1520, 1537, 1541, 9,
       1542, 1568, 1585, 1589, 9,

 // properties: name, type, flags
       1590, 1604, 0x0a005001, 		 // QString AccountNumber
       1612, 1619, 0x0a005001, 		 // QString Amount
       1627, 1639, 0x01015003, 		 // bool AutoDisable
       1644, 1655, 0x0a005001, 		 // QString BankNumber
       1663, 1680, 0x02015003, 		 // int BinaryConversion
       1684, 1710, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1715, 1733, 0x02005001, 		 // int CapPowerReporting
       1737, 1760, 0x01005001, 		 // bool CapStatisticsReporting
       1765, 1783, 0x01005001, 		 // bool CapUpdateFirmware
       1788, 1808, 0x01005001, 		 // bool CapUpdateStatistics
       1813, 1833, 0x01005001, 		 // bool CapValidationDevice
       1838, 1854, 0x0a005001, 		 // QString CheckHealthText
       1862, 1872, 0x02005001, 		 // int CheckType
       1876, 1884, 0x01005001, 		 // bool Claimed
       1889, 1914, 0x0a005001, 		 // QString ControlObjectDescription
       1922, 1943, 0x02005001, 		 // int ControlObjectVersion
       1947, 1959, 0x02005001, 		 // int CountryCode
       1963, 1973, 0x02005001, 		 // int DataCount
       1977, 1994, 0x01015003, 		 // bool DataEventEnabled
       1999, 2017, 0x0a005001, 		 // QString DeviceDescription
       2025, 2039, 0x01015003, 		 // bool DeviceEnabled
       2044, 2055, 0x0a005001, 		 // QString DeviceName
       2063, 2067, 0x0a005001, 		 // QString EPC
       2075, 2088, 0x01015003, 		 // bool FreezeEvents
       2093, 2104, 0x02005001, 		 // int OpenResult
       2108, 2120, 0x02015003, 		 // int PowerNotify
       2124, 2135, 0x02005001, 		 // int PowerState
       2139, 2147, 0x0a005001, 		 // QString RawData
       2155, 2166, 0x02005001, 		 // int ResultCode
       2170, 2189, 0x02005001, 		 // int ResultCodeExtended
       2193, 2206, 0x0a005001, 		 // QString SerialNumber
       2214, 2239, 0x0a005001, 		 // QString ServiceObjectDescription
       2247, 2268, 0x02005001, 		 // int ServiceObjectVersion
       2272, 2278, 0x02005001, 		 // int State
       2282, 2296, 0x0a005001, 		 // QString TransitNumber

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__OPOSMICR() {
    static const char stringdata0[] = {
    "OPOS::OPOSMICR\0"
    "Event Interface 5\0_IOPOSMICREvents\0Interface 0\0IOPOSMICR\0Interface 1\0IOPOSMICR_1_10\0Interface 2\0IOPOSMICR_1_9\0Interface 3\0IOPOSMICR_1_8\0Interface 4\0IOPOSMICR_1_5\0"
    "DataEvent(int)\0Status\0\0\0DirectIOEvent(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0ErrorEvent(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0StatusUpdateEvent(int)\0Data\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0"
    "\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0"
    "\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0"
    "\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0"
    "EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0"
    "AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0"
    "\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0Amount\0QString\0AutoDisable\0bool\0BankNumber\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0"
    "bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0"
    "QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0"
    "int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TransitNumber\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject OPOSMICR::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__OPOSMICR(),
qt_meta_data_OPOS__OPOSMICR }
};

void *OPOSMICR::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__OPOSMICR()))
        return static_cast<void*>(const_cast<OPOSMICR*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMICR[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       32,    10, // methods
       36,    170, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       16, 55, 77, 78, 5,
       79, 104, 109, 110, 5,
       111, 137, 152, 153, 5,

 // slots: signature, parameters, type, tag, flags
       154, 174, 182, 186, 9,
       187, 205, 213, 217, 9,
       218, 235, 241, 245, 9,
       246, 263, 271, 275, 9,
       276, 289, 290, 294, 9,
       295, 318, 319, 323, 9,
       324, 332, 333, 337, 9,
       338, 375, 400, 404, 9,
       405, 433, 455, 459, 9,
       460, 475, 476, 480, 9,
       481, 494, 495, 499, 9,
       500, 514, 525, 529, 9,
       530, 546, 547, 551, 9,
       552, 577, 594, 598, 9,
       599, 628, 646, 650, 9,
       651, 663, 670, 671, 9,
       672, 702, 728, 729, 9,
       730, 756, 812, 813, 9,
       814, 841, 850, 851, 9,
       852, 866, 867, 871, 9,
       872, 892, 897, 898, 9,
       899, 920, 932, 933, 9,
       934, 959, 976, 977, 9,
       978, 1004, 1021, 1022, 9,
       1023, 1046, 1060, 1061, 9,
       1062, 1084, 1097, 1098, 9,
       1099, 1119, 1131, 1132, 9,
       1133, 1157, 1174, 1178, 9,
       1179, 1205, 1222, 1226, 9,

 // properties: name, type, flags
       1227, 1241, 0x0a005001, 		 // QString AccountNumber
       1249, 1256, 0x0a005001, 		 // QString Amount
       1264, 1276, 0x01015003, 		 // bool AutoDisable
       1281, 1292, 0x0a005001, 		 // QString BankNumber
       1300, 1317, 0x02015003, 		 // int BinaryConversion
       1321, 1347, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1352, 1370, 0x02005001, 		 // int CapPowerReporting
       1374, 1397, 0x01005001, 		 // bool CapStatisticsReporting
       1402, 1420, 0x01005001, 		 // bool CapUpdateFirmware
       1425, 1445, 0x01005001, 		 // bool CapUpdateStatistics
       1450, 1470, 0x01005001, 		 // bool CapValidationDevice
       1475, 1491, 0x0a005001, 		 // QString CheckHealthText
       1499, 1509, 0x02005001, 		 // int CheckType
       1513, 1521, 0x01005001, 		 // bool Claimed
       1526, 1551, 0x0a005001, 		 // QString ControlObjectDescription
       1559, 1580, 0x02005001, 		 // int ControlObjectVersion
       1584, 1596, 0x02005001, 		 // int CountryCode
       1600, 1610, 0x02005001, 		 // int DataCount
       1614, 1631, 0x01015003, 		 // bool DataEventEnabled
       1636, 1654, 0x0a005001, 		 // QString DeviceDescription
       1662, 1676, 0x01015003, 		 // bool DeviceEnabled
       1681, 1692, 0x0a005001, 		 // QString DeviceName
       1700, 1704, 0x0a005001, 		 // QString EPC
       1712, 1725, 0x01015003, 		 // bool FreezeEvents
       1730, 1741, 0x02005001, 		 // int OpenResult
       1745, 1757, 0x02015003, 		 // int PowerNotify
       1761, 1772, 0x02005001, 		 // int PowerState
       1776, 1784, 0x0a005001, 		 // QString RawData
       1792, 1803, 0x02005001, 		 // int ResultCode
       1807, 1826, 0x02005001, 		 // int ResultCodeExtended
       1830, 1843, 0x0a005001, 		 // QString SerialNumber
       1851, 1876, 0x0a005001, 		 // QString ServiceObjectDescription
       1884, 1905, 0x02005001, 		 // int ServiceObjectVersion
       1909, 1915, 0x02005001, 		 // int State
       1919, 1933, 0x0a005001, 		 // QString TransitNumber
       1941, 1949, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMICR() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMICR\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0Amount\0QString\0"
    "AutoDisable\0bool\0BankNumber\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0"
    "bool\0CheckHealthText\0QString\0CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0QString\0ServiceObjectDescription\0QString\0"
    "ServiceObjectVersion\0int\0State\0int\0TransitNumber\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMICR::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMICR(),
qt_meta_data_OPOS__IOPOSMICR }
};

void *IOPOSMICR::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMICR()))
        return static_cast<void*>(const_cast<IOPOSMICR*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMICR_1_10[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       32,    10, // methods
       36,    170, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       21, 60, 82, 83, 5,
       84, 109, 114, 115, 5,
       116, 142, 157, 158, 5,

 // slots: signature, parameters, type, tag, flags
       159, 179, 187, 191, 9,
       192, 210, 218, 222, 9,
       223, 240, 246, 250, 9,
       251, 268, 276, 280, 9,
       281, 294, 295, 299, 9,
       300, 323, 324, 328, 9,
       329, 337, 338, 342, 9,
       343, 380, 405, 409, 9,
       410, 438, 460, 464, 9,
       465, 480, 481, 485, 9,
       486, 499, 500, 504, 9,
       505, 519, 530, 534, 9,
       535, 551, 552, 556, 9,
       557, 582, 599, 603, 9,
       604, 633, 651, 655, 9,
       656, 668, 675, 676, 9,
       677, 707, 733, 734, 9,
       735, 761, 817, 818, 9,
       819, 846, 855, 856, 9,
       857, 871, 872, 876, 9,
       877, 897, 902, 903, 9,
       904, 925, 937, 938, 9,
       939, 964, 981, 982, 9,
       983, 1009, 1026, 1027, 9,
       1028, 1051, 1065, 1066, 9,
       1067, 1089, 1102, 1103, 9,
       1104, 1124, 1136, 1137, 9,
       1138, 1162, 1179, 1183, 9,
       1184, 1210, 1227, 1231, 9,

 // properties: name, type, flags
       1232, 1246, 0x0a005001, 		 // QString AccountNumber
       1254, 1261, 0x0a005001, 		 // QString Amount
       1269, 1281, 0x01015003, 		 // bool AutoDisable
       1286, 1297, 0x0a005001, 		 // QString BankNumber
       1305, 1322, 0x02015003, 		 // int BinaryConversion
       1326, 1352, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1357, 1375, 0x02005001, 		 // int CapPowerReporting
       1379, 1402, 0x01005001, 		 // bool CapStatisticsReporting
       1407, 1425, 0x01005001, 		 // bool CapUpdateFirmware
       1430, 1450, 0x01005001, 		 // bool CapUpdateStatistics
       1455, 1475, 0x01005001, 		 // bool CapValidationDevice
       1480, 1496, 0x0a005001, 		 // QString CheckHealthText
       1504, 1514, 0x02005001, 		 // int CheckType
       1518, 1526, 0x01005001, 		 // bool Claimed
       1531, 1556, 0x0a005001, 		 // QString ControlObjectDescription
       1564, 1585, 0x02005001, 		 // int ControlObjectVersion
       1589, 1601, 0x02005001, 		 // int CountryCode
       1605, 1615, 0x02005001, 		 // int DataCount
       1619, 1636, 0x01015003, 		 // bool DataEventEnabled
       1641, 1659, 0x0a005001, 		 // QString DeviceDescription
       1667, 1681, 0x01015003, 		 // bool DeviceEnabled
       1686, 1697, 0x0a005001, 		 // QString DeviceName
       1705, 1709, 0x0a005001, 		 // QString EPC
       1717, 1730, 0x01015003, 		 // bool FreezeEvents
       1735, 1746, 0x02005001, 		 // int OpenResult
       1750, 1762, 0x02015003, 		 // int PowerNotify
       1766, 1777, 0x02005001, 		 // int PowerState
       1781, 1789, 0x0a005001, 		 // QString RawData
       1797, 1808, 0x02005001, 		 // int ResultCode
       1812, 1831, 0x02005001, 		 // int ResultCodeExtended
       1835, 1848, 0x0a005001, 		 // QString SerialNumber
       1856, 1881, 0x0a005001, 		 // QString ServiceObjectDescription
       1889, 1910, 0x02005001, 		 // int ServiceObjectVersion
       1914, 1920, 0x02005001, 		 // int State
       1924, 1938, 0x0a005001, 		 // QString TransitNumber
       1946, 1954, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMICR_1_10() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMICR_1_10\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0ClearInputProperties()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0"
    "Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0"
    "int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0"
    "\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0"
    "\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0Amount\0QString\0"
    "AutoDisable\0bool\0BankNumber\0QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0"
    "bool\0CheckHealthText\0QString\0CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0"
    "bool\0DeviceName\0QString\0EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0QString\0ServiceObjectDescription\0QString\0"
    "ServiceObjectVersion\0int\0State\0int\0TransitNumber\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMICR_1_10::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMICR_1_10(),
qt_meta_data_OPOS__IOPOSMICR_1_10 }
};

void *IOPOSMICR_1_10::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMICR_1_10()))
        return static_cast<void*>(const_cast<IOPOSMICR_1_10*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMICR_1_9[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       31,    10, // methods
       36,    165, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 178, 186, 190, 9,
       191, 209, 217, 221, 9,
       222, 239, 245, 249, 9,
       250, 267, 275, 279, 9,
       280, 293, 294, 298, 9,
       299, 307, 308, 312, 9,
       313, 350, 375, 379, 9,
       380, 408, 430, 434, 9,
       435, 450, 451, 455, 9,
       456, 469, 470, 474, 9,
       475, 489, 500, 504, 9,
       505, 521, 522, 526, 9,
       527, 552, 569, 573, 9,
       574, 603, 621, 625, 9,
       626, 638, 645, 646, 9,
       647, 677, 703, 704, 9,
       705, 731, 787, 788, 9,
       789, 816, 825, 826, 9,
       827, 841, 842, 846, 9,
       847, 867, 872, 873, 9,
       874, 895, 907, 908, 9,
       909, 934, 951, 952, 9,
       953, 979, 996, 997, 9,
       998, 1021, 1035, 1036, 9,
       1037, 1059, 1072, 1073, 9,
       1074, 1094, 1106, 1107, 9,
       1108, 1132, 1149, 1153, 9,
       1154, 1180, 1197, 1201, 9,

 // properties: name, type, flags
       1202, 1216, 0x0a005001, 		 // QString AccountNumber
       1224, 1231, 0x0a005001, 		 // QString Amount
       1239, 1251, 0x01015003, 		 // bool AutoDisable
       1256, 1267, 0x0a005001, 		 // QString BankNumber
       1275, 1292, 0x02015003, 		 // int BinaryConversion
       1296, 1322, 0x01005001, 		 // bool CapCompareFirmwareVersion
       1327, 1345, 0x02005001, 		 // int CapPowerReporting
       1349, 1372, 0x01005001, 		 // bool CapStatisticsReporting
       1377, 1395, 0x01005001, 		 // bool CapUpdateFirmware
       1400, 1420, 0x01005001, 		 // bool CapUpdateStatistics
       1425, 1445, 0x01005001, 		 // bool CapValidationDevice
       1450, 1466, 0x0a005001, 		 // QString CheckHealthText
       1474, 1484, 0x02005001, 		 // int CheckType
       1488, 1496, 0x01005001, 		 // bool Claimed
       1501, 1526, 0x0a005001, 		 // QString ControlObjectDescription
       1534, 1555, 0x02005001, 		 // int ControlObjectVersion
       1559, 1571, 0x02005001, 		 // int CountryCode
       1575, 1585, 0x02005001, 		 // int DataCount
       1589, 1606, 0x01015003, 		 // bool DataEventEnabled
       1611, 1629, 0x0a005001, 		 // QString DeviceDescription
       1637, 1651, 0x01015003, 		 // bool DeviceEnabled
       1656, 1667, 0x0a005001, 		 // QString DeviceName
       1675, 1679, 0x0a005001, 		 // QString EPC
       1687, 1700, 0x01015003, 		 // bool FreezeEvents
       1705, 1716, 0x02005001, 		 // int OpenResult
       1720, 1732, 0x02015003, 		 // int PowerNotify
       1736, 1747, 0x02005001, 		 // int PowerState
       1751, 1759, 0x0a005001, 		 // QString RawData
       1767, 1778, 0x02005001, 		 // int ResultCode
       1782, 1801, 0x02005001, 		 // int ResultCodeExtended
       1805, 1818, 0x0a005001, 		 // QString SerialNumber
       1826, 1851, 0x0a005001, 		 // QString ServiceObjectDescription
       1859, 1880, 0x02005001, 		 // int ServiceObjectVersion
       1884, 1890, 0x02005001, 		 // int State
       1894, 1908, 0x0a005001, 		 // QString TransitNumber
       1916, 1924, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMICR_1_9() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMICR_1_9\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0CompareFirmwareVersion(QString,int&)\0FirmwareFileName,pResult\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0"
    "int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0"
    "Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0"
    "\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0"
    "FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0UpdateFirmware(QString)\0FirmwareFileName\0int\0\0UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0Amount\0QString\0AutoDisable\0bool\0BankNumber\0"
    "QString\0BinaryConversion\0int\0CapCompareFirmwareVersion\0bool\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateFirmware\0bool\0CapUpdateStatistics\0bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0"
    "CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0"
    "EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0"
    "int\0State\0int\0TransitNumber\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMICR_1_9::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMICR_1_9(),
qt_meta_data_OPOS__IOPOSMICR_1_9 }
};

void *IOPOSMICR_1_9::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMICR_1_9()))
        return static_cast<void*>(const_cast<IOPOSMICR_1_9*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMICR_1_8[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       29,    10, // methods
       34,    155, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 178, 186, 190, 9,
       191, 209, 217, 221, 9,
       222, 239, 245, 249, 9,
       250, 267, 275, 279, 9,
       280, 293, 294, 298, 9,
       299, 307, 308, 312, 9,
       313, 341, 363, 367, 9,
       368, 383, 384, 388, 9,
       389, 402, 403, 407, 9,
       408, 422, 433, 437, 9,
       438, 454, 455, 459, 9,
       460, 485, 502, 506, 9,
       507, 536, 554, 558, 9,
       559, 571, 578, 579, 9,
       580, 610, 636, 637, 9,
       638, 664, 720, 721, 9,
       722, 749, 758, 759, 9,
       760, 774, 775, 779, 9,
       780, 800, 805, 806, 9,
       807, 828, 840, 841, 9,
       842, 867, 884, 885, 9,
       886, 912, 929, 930, 9,
       931, 954, 968, 969, 9,
       970, 992, 1005, 1006, 9,
       1007, 1027, 1039, 1040, 9,
       1041, 1067, 1084, 1088, 9,

 // properties: name, type, flags
       1089, 1103, 0x0a005001, 		 // QString AccountNumber
       1111, 1118, 0x0a005001, 		 // QString Amount
       1126, 1138, 0x01015003, 		 // bool AutoDisable
       1143, 1154, 0x0a005001, 		 // QString BankNumber
       1162, 1179, 0x02015003, 		 // int BinaryConversion
       1183, 1201, 0x02005001, 		 // int CapPowerReporting
       1205, 1228, 0x01005001, 		 // bool CapStatisticsReporting
       1233, 1253, 0x01005001, 		 // bool CapUpdateStatistics
       1258, 1278, 0x01005001, 		 // bool CapValidationDevice
       1283, 1299, 0x0a005001, 		 // QString CheckHealthText
       1307, 1317, 0x02005001, 		 // int CheckType
       1321, 1329, 0x01005001, 		 // bool Claimed
       1334, 1359, 0x0a005001, 		 // QString ControlObjectDescription
       1367, 1388, 0x02005001, 		 // int ControlObjectVersion
       1392, 1404, 0x02005001, 		 // int CountryCode
       1408, 1418, 0x02005001, 		 // int DataCount
       1422, 1439, 0x01015003, 		 // bool DataEventEnabled
       1444, 1462, 0x0a005001, 		 // QString DeviceDescription
       1470, 1484, 0x01015003, 		 // bool DeviceEnabled
       1489, 1500, 0x0a005001, 		 // QString DeviceName
       1508, 1512, 0x0a005001, 		 // QString EPC
       1520, 1533, 0x01015003, 		 // bool FreezeEvents
       1538, 1549, 0x02005001, 		 // int OpenResult
       1553, 1565, 0x02015003, 		 // int PowerNotify
       1569, 1580, 0x02005001, 		 // int PowerState
       1584, 1592, 0x0a005001, 		 // QString RawData
       1600, 1611, 0x02005001, 		 // int ResultCode
       1615, 1634, 0x02005001, 		 // int ResultCodeExtended
       1638, 1651, 0x0a005001, 		 // QString SerialNumber
       1659, 1684, 0x0a005001, 		 // QString ServiceObjectDescription
       1692, 1713, 0x02005001, 		 // int ServiceObjectVersion
       1717, 1723, 0x02005001, 		 // int State
       1727, 1741, 0x0a005001, 		 // QString TransitNumber
       1749, 1757, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMICR_1_8() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMICR_1_8\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0ResetStatistics(QString)\0StatisticsBuffer\0int\0\0RetrieveStatistics(QString&)\0pStatisticsBuffer\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0"
    "\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0"
    "\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0"
    "UpdateStatistics(QString)\0StatisticsBuffer\0int\0\0"
    "AccountNumber\0QString\0Amount\0QString\0AutoDisable\0bool\0BankNumber\0QString\0BinaryConversion\0int\0CapPowerReporting\0int\0CapStatisticsReporting\0bool\0CapUpdateStatistics\0"
    "bool\0CapValidationDevice\0bool\0CheckHealthText\0QString\0CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0bool\0DeviceDescription\0"
    "QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0QString\0ServiceObjectDescription\0"
    "QString\0ServiceObjectVersion\0int\0State\0int\0TransitNumber\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMICR_1_8::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMICR_1_8(),
qt_meta_data_OPOS__IOPOSMICR_1_8 }
};

void *IOPOSMICR_1_8::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMICR_1_8()))
        return static_cast<void*>(const_cast<IOPOSMICR_1_8*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_OPOS__IOPOSMICR_1_5[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       26,    10, // methods
       32,    140, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       20, 59, 81, 82, 5,
       83, 108, 113, 114, 5,
       115, 141, 156, 157, 5,

 // slots: signature, parameters, type, tag, flags
       158, 178, 186, 190, 9,
       191, 209, 217, 221, 9,
       222, 239, 245, 249, 9,
       250, 267, 275, 279, 9,
       280, 293, 294, 298, 9,
       299, 307, 308, 312, 9,
       313, 341, 363, 367, 9,
       368, 383, 384, 388, 9,
       389, 402, 403, 407, 9,
       408, 422, 433, 437, 9,
       438, 454, 455, 459, 9,
       460, 472, 479, 480, 9,
       481, 511, 537, 538, 9,
       539, 565, 621, 622, 9,
       623, 650, 659, 660, 9,
       661, 675, 676, 680, 9,
       681, 701, 706, 707, 9,
       708, 729, 741, 742, 9,
       743, 768, 785, 786, 9,
       787, 813, 830, 831, 9,
       832, 855, 869, 870, 9,
       871, 893, 906, 907, 9,
       908, 928, 940, 941, 9,

 // properties: name, type, flags
       942, 956, 0x0a005001, 		 // QString AccountNumber
       964, 971, 0x0a005001, 		 // QString Amount
       979, 991, 0x01015003, 		 // bool AutoDisable
       996, 1007, 0x0a005001, 		 // QString BankNumber
       1015, 1032, 0x02015003, 		 // int BinaryConversion
       1036, 1054, 0x02005001, 		 // int CapPowerReporting
       1058, 1078, 0x01005001, 		 // bool CapValidationDevice
       1083, 1099, 0x0a005001, 		 // QString CheckHealthText
       1107, 1117, 0x02005001, 		 // int CheckType
       1121, 1129, 0x01005001, 		 // bool Claimed
       1134, 1159, 0x0a005001, 		 // QString ControlObjectDescription
       1167, 1188, 0x02005001, 		 // int ControlObjectVersion
       1192, 1204, 0x02005001, 		 // int CountryCode
       1208, 1218, 0x02005001, 		 // int DataCount
       1222, 1239, 0x01015003, 		 // bool DataEventEnabled
       1244, 1262, 0x0a005001, 		 // QString DeviceDescription
       1270, 1284, 0x01015003, 		 // bool DeviceEnabled
       1289, 1300, 0x0a005001, 		 // QString DeviceName
       1308, 1312, 0x0a005001, 		 // QString EPC
       1320, 1333, 0x01015003, 		 // bool FreezeEvents
       1338, 1349, 0x02005001, 		 // int OpenResult
       1353, 1365, 0x02015003, 		 // int PowerNotify
       1369, 1380, 0x02005001, 		 // int PowerState
       1384, 1392, 0x0a005001, 		 // QString RawData
       1400, 1411, 0x02005001, 		 // int ResultCode
       1415, 1434, 0x02005001, 		 // int ResultCodeExtended
       1438, 1451, 0x0a005001, 		 // QString SerialNumber
       1459, 1484, 0x0a005001, 		 // QString ServiceObjectDescription
       1492, 1513, 0x02005001, 		 // int ServiceObjectVersion
       1517, 1523, 0x02005001, 		 // int State
       1527, 1541, 0x0a005001, 		 // QString TransitNumber
       1549, 1557, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_OPOS__IOPOSMICR_1_5() {
    static const char stringdata0[] = {
    "OPOS::IOPOSMICR_1_5\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "BeginInsertion(int)\0Timeout\0int\0\0BeginRemoval(int)\0Timeout\0int\0"
    "\0CheckHealth(int)\0Level\0int\0\0ClaimDevice(int)\0Timeout\0int\0\0ClearInput()\0\0int\0\0Close()\0\0int\0\0DirectIO(int,int&,QString&)\0Command,pData,pString\0int\0\0EndInsertion()\0\0int\0\0EndRemoval()\0\0int\0\0Open(QString)\0"
    "DeviceName\0int\0\0ReleaseDevice()\0\0int\0\0SOData(int)\0Status\0\0\0SODirectIO(int,int&,QString&)\0EventNumber,pData,pString\0\0\0SOError(int,int,int,int&)\0ResultCode,ResultCodeExtended,ErrorLocus,pErrorResponse\0\0\0"
    "SOOutputCompleteDummy(int)\0OutputID\0\0\0SOProcessID()\0\0int\0\0SOStatusUpdate(int)\0Data\0\0\0SetAutoDisable(bool)\0AutoDisable\0\0\0SetBinaryConversion(int)\0BinaryConversion\0\0\0SetDataEventEnabled(bool)\0DataEventEnabled\0"
    "\0\0SetDeviceEnabled(bool)\0DeviceEnabled\0\0\0SetFreezeEvents(bool)\0FreezeEvents\0\0\0SetPowerNotify(int)\0PowerNotify\0\0\0"
    "AccountNumber\0QString\0Amount\0QString\0AutoDisable\0bool\0BankNumber\0QString\0BinaryConversion\0"
    "int\0CapPowerReporting\0int\0CapValidationDevice\0bool\0CheckHealthText\0QString\0CheckType\0int\0Claimed\0bool\0ControlObjectDescription\0QString\0ControlObjectVersion\0int\0CountryCode\0int\0DataCount\0int\0DataEventEnabled\0"
    "bool\0DeviceDescription\0QString\0DeviceEnabled\0bool\0DeviceName\0QString\0EPC\0QString\0FreezeEvents\0bool\0OpenResult\0int\0PowerNotify\0int\0PowerState\0int\0RawData\0QString\0ResultCode\0int\0ResultCodeExtended\0int\0SerialNumber\0"
    "QString\0ServiceObjectDescription\0QString\0ServiceObjectVersion\0int\0State\0int\0TransitNumber\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IOPOSMICR_1_5::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_OPOS__IOPOSMICR_1_5(),
qt_meta_data_OPOS__IOPOSMICR_1_5 }
};

void *IOPOSMICR_1_5::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_OPOS__IOPOSMICR_1_5()))
        return static_cast<void*>(const_cast<IOPOSMICR_1_5*>(this));
    return QAxObject::qt_metacast(_clname);
}

